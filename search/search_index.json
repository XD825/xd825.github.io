{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e3b\u9801 Author\uff1a Desire \u5b66\u4f1a\u81ea\u5df1\u6b23\u8d4f\u81ea\u5df1\uff0c\u82e5\u662f\u7f8e\u597d\uff0c\u53eb\u4f5c\u7cbe\u5f69\u3002\u82e5\u662f\u7cdf\u7cd5\uff0c\u53eb\u4f5c\u5386\u7ec3\u3002","title":"\u4e3b\u9801"},{"location":"#_1","text":"Author\uff1a Desire \u5b66\u4f1a\u81ea\u5df1\u6b23\u8d4f\u81ea\u5df1\uff0c\u82e5\u662f\u7f8e\u597d\uff0c\u53eb\u4f5c\u7cbe\u5f69\u3002\u82e5\u662f\u7cdf\u7cd5\uff0c\u53eb\u4f5c\u5386\u7ec3\u3002","title":"\u4e3b\u9801"},{"location":"FastAPI/001FastAPI%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/","text":"FastAPI\u7b80\u5355\u4f7f\u7528 1\u3001\u5b89\u88c5 pip install fastapi pip install uvicorn 2\u3001\u7b80\u5355\u7684demo main.py from fastapi import FastAPI app = FastAPI() @app.get(\"/\") async def root(): return {\"message\": \"Hello World\"} 3\u3001\u8fd0\u884c uvicorn main:app --port 8888 --reload \u547d\u4ee4\u542b\u4e49\u5982\u4e0b: main\uff1amain.py \u6587\u4ef6\uff08\u4e00\u4e2a Python\u300c\u6a21\u5757\u300d\uff09\u3002 app\uff1a\u5728 main.py \u6587\u4ef6\u4e2d\u901a\u8fc7 app = FastAPI() \u521b\u5efa\u7684\u5bf9\u8c61\u3002 --port\uff1a\u6267\u884c\u7aef\u53e3\u53f7 --reload\uff1a\u8ba9\u670d\u52a1\u5668\u5728\u66f4\u65b0\u4ee3\u7801\u540e\u91cd\u65b0\u542f\u52a8\u3002\u4ec5\u5728\u5f00\u53d1\u65f6\u4f7f\u7528\u8be5\u9009\u9879\u3002 4\u3001 \u8bbf\u95ee http://127.0.0.1:8888 # \u8bbf\u95ee\u63a5\u53e3 http://127.0.0.1:8888/docs # \u4ea4\u4e92\u5f0fAPI\u6587\u6863\uff08Swagger UI\uff09 http://127.0.0.1:8888/redoc # \u53ef\u9009\u7684API\u6587\u6863","title":"FastAPI\u7b80\u5355\u4f7f\u7528"},{"location":"FastAPI/001FastAPI%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/#fastapi","text":"","title":"FastAPI\u7b80\u5355\u4f7f\u7528"},{"location":"FastAPI/001FastAPI%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/#1","text":"pip install fastapi pip install uvicorn","title":"1\u3001\u5b89\u88c5"},{"location":"FastAPI/001FastAPI%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/#2demo","text":"main.py from fastapi import FastAPI app = FastAPI() @app.get(\"/\") async def root(): return {\"message\": \"Hello World\"}","title":"2\u3001\u7b80\u5355\u7684demo"},{"location":"FastAPI/001FastAPI%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/#3","text":"uvicorn main:app --port 8888 --reload \u547d\u4ee4\u542b\u4e49\u5982\u4e0b: main\uff1amain.py \u6587\u4ef6\uff08\u4e00\u4e2a Python\u300c\u6a21\u5757\u300d\uff09\u3002 app\uff1a\u5728 main.py \u6587\u4ef6\u4e2d\u901a\u8fc7 app = FastAPI() \u521b\u5efa\u7684\u5bf9\u8c61\u3002 --port\uff1a\u6267\u884c\u7aef\u53e3\u53f7 --reload\uff1a\u8ba9\u670d\u52a1\u5668\u5728\u66f4\u65b0\u4ee3\u7801\u540e\u91cd\u65b0\u542f\u52a8\u3002\u4ec5\u5728\u5f00\u53d1\u65f6\u4f7f\u7528\u8be5\u9009\u9879\u3002","title":"3\u3001\u8fd0\u884c"},{"location":"FastAPI/001FastAPI%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/#4","text":"http://127.0.0.1:8888 # \u8bbf\u95ee\u63a5\u53e3 http://127.0.0.1:8888/docs # \u4ea4\u4e92\u5f0fAPI\u6587\u6863\uff08Swagger UI\uff09 http://127.0.0.1:8888/redoc # \u53ef\u9009\u7684API\u6587\u6863","title":"4\u3001 \u8bbf\u95ee"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/","text":"JWT(JSON Web Tokens) \u4e00\u3001\u4f9d\u8d56\u5e93\u5b89\u88c5 jwt pip install jwt==1.2.0 python-jose \u7528\u4e8e\u751f\u6210\u548c\u68c0\u9a8cJWT\u4ee4\u724c pip install python-jose==3.2.0 passlib \u7528\u4e8e\u5904\u7406\u54c8\u5e0c\u5bc6\u7801\u7684\u5305 \u652f\u6301\u8bb8\u591a\u5b89\u5168\u54c8\u5e0c\u7b97\u6cd5\u4ee5\u53ca\u914d\u5408\u7b97\u6cd5\u4f7f\u7528\u7684\u5b9e\u7528\u7a0b\u5e8f \u63a8\u8350\u7684\u7b97\u6cd5\u662f Bcrypt pip install passlib[Bcrypt]==1.7.4 \u4e8c\u3001\u54c8\u5e0c\u5e76\u6821\u9a8c\u5bc6\u7801 1\u3001\u521b\u5efa\u5bf9\u8c61\uff0c\u8fdb\u884c\u54c8\u5e0c\u548c\u6821\u9a8c\u5bc6\u7801 from passlib.context import CryptContext # \u4f7f\u7528\u7684\u7b97\u6cd5\u662fBcrypt pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\") 2\u3001\u54c8\u5e0c\u5bc6\u7801\uff1ahash(password) def get_password_hash(password): \"\"\" \u54c8\u5e0c\u6765\u81ea\u7528\u6237\u7684\u5bc6\u7801 :param password: \u539f\u5bc6\u7801 :return: \u54c8\u5e0c\u540e\u7684\u5bc6\u7801 \"\"\" return pwd_context.hash(password) # \u54c8\u5e0c\u540e\u7684\u5bc6\u7801 # $2b$12$sErK932BEaLyIisz30PubepN7w91RLwkISWbAFYgUgoIqh8goJLEW 3\u3001\u6821\u9a8c\u5bc6\u7801\uff1averify(plain_password, hashed_password) def verify_password(plain_password, hashed_password): \"\"\" \u6821\u9a8c\u63a5\u6536\u7684\u5bc6\u7801\u662f\u5426\u4e0e\u5b58\u50a8\u7684\u54c8\u5e0c\u503c\u5339\u914d :param plain_password: \u539f\u5bc6\u7801 :param hashed_password: \u54c8\u5e0c\u540e\u7684\u5bc6\u7801 :return: \u8fd4\u56de\u503c\u4e3abool\u7c7b\u578b\uff0c\u6821\u9a8c\u6210\u529f\u8fd4\u56deTrue,\u53cd\u4e4bFalse \"\"\" return pwd_context.verify(plain_password, hashed_password) \u4e09\u3001JWT\u4ee4\u724c\u9a8c\u8bc1\u52a0\u5bc6 1\u3001\u751f\u6210\u4e00\u4e2a\u968f\u673a\u7684\u5bc6\u94a5\uff0c\u7528\u4e8e\u5bf9JWT\u4ee4\u724c\u8fdb\u884c\u7b7e\u540d openssl rand -hex 32 # eac77e4e9a9a767b792779132e84ea37b1f4c31bec56714607f617a3fbdfbd53 2\u3001\u521b\u5efa\u5bc6\u94a5\u53d8\u91cf SECRET_KEY = \"eac77e4e9a9a767b792779132e84ea37b1f4c31bec56714607f617a3fbdfbd53\" 3\u3001\u521b\u5efa\u7528\u4e8e\u8bbe\u5b9aJWT\u4ee4\u724c\u7b7e\u540d\u7b97\u6cd5\u7684\u53d8\u91cf ALGORITHM = \"HS256\" 4\u3001\u521b\u5efa\u8bbe\u7f6e\u4ee4\u724c\u8fc7\u671f\u65f6\u95f4\u53d8\u91cf\uff08\u5355\u4f4d\uff1a\u5206\u949f\uff09 ACCESS_TOKEN_EXPIRE_MINUTES = 30 5\u3001\u6a21\u62df\u6570\u636e\u5e93\u7528\u6237\u4fe1\u606f users_db = { \"mockuser\":{ \"id\": 1, \"username\": \"mockuser\", \"email\": \"mock@user.com\", \"password\": \"$2b$12$sErK932BEaLyIisz30PubepN7w91RLwkISWbAFYgUgoIqh8goJLEW\", } } 6\u3001\u521b\u5efa\u6240\u9700\u6a21\u578b\u7c7b from typing import Optional from pydantic import BaseModel, EmailStr 1) \u7528\u6237\u6a21\u578b\u57fa\u7c7b class UserBase(BaseModel): id: Optional[int] = False username: str = None # pip install pydantic[email] email: Optional[EmailStr] = None 2\uff09\u767b\u5f55\u6210\u529f\u8fd4\u56detoken\u6a21\u578b class TokenModel(UserBase): token: str = None 3\uff09\u7528\u6237\u767b\u5f55\u6a21\u578b class LoginModel(BaseModel): username: str = None password: str = None 4\uff09\u521b\u5efa\u7528\u6237\u6a21\u578b class CreateModel(UserBase): password: str 7\u3001\u521b\u5efa\u751f\u6210\u8bbf\u95ee\u4ee4\u724c\u7684\u51fd\u6570 def create_access_token(data: dict, expires_delta: Optional[timedelta] = None): \"\"\" :param data: \u9700\u8981\u8fdb\u884cJWT\u4ee4\u724c\u52a0\u5bc6\u7684\u6570\u636e\uff08\u89e3\u5bc6\u7684\u65f6\u5019\u4f1a\u7528\u5230\uff09 :param expires_delta: \u4ee4\u724c\u6709\u6548\u671f :return: token \"\"\" to_encode = data.copy() if expires_delta: expire = datetime.utcnow() + expires_delta else: expire = datetime.utcnow() + timedelta(minutes=15) # \u6dfb\u52a0\u5931\u6548\u65f6\u95f4 to_encode.update({\"exp\": expire}) # SECRET_KEY\uff1a\u5bc6\u94a5 # ALGORITHM\uff1aJWT\u4ee4\u724c\u7b7e\u540d\u7b97\u6cd5 encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM) return encoded_jwt 8\u3001\u6821\u9a8c\u7528\u6237\u529f\u80fd\u51fd\u6570 def check_user(username, password): \"\"\" \u6821\u9a8c\u7528\u6237\uff08\u771f\u5b9e\u7684\u5e94\u8be5\u662f\u8ddfDB\u8fdb\u884c\u6821\u9a8c\uff0c\u8fd9\u91cc\u53ea\u662f\u505a\u6f14\u793a\uff09 :param username: :param password: :return: \"\"\" user = users_db.get(username) if not user: return False if not verify_password(password, user.get(\"password\")): return False return user 9\u3001\u521b\u5efa\u767b\u5f55\u63a5\u53e3api # \u4f7f\u7528\u8868\u5355\u683c\u5f0f\u53c2\u6570\u9700\u8981\u5b89\u88c5\u6a21\u5757\uff1apython-multipart @app.post(\"/token\", response_model=TokenModel) async def login_for_access_token(username: str = Form(...), password: str = Form(...)): user = check_user(username, password) if not user: raise HTTPException( status_code=status.HTTP_401_UNAUTHORIZED, detail=\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\" ) # \u8fc7\u671f\u65f6\u95f4 access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES) # \u628aid\u8fdb\u884cusername\u52a0\u5bc6\uff0c\u8981\u4f7f\u7528str\u7c7b\u578b access_token = create_access_token( data={\"sub\": user.get(\"username\")}, expires_delta=access_token_expires ) user.update({\"token\": access_token}) return user \u56db\u3001JWT\u4ee4\u724c\u9a8c\u8bc1\u89e3\u5bc6 1\u3001\u9a8c\u8bc1token def check_jwt_token(token: Optional[str] = Header(None)): \"\"\" \u9a8c\u8bc1token :param token: :return: \u8fd4\u56de\u7528\u6237\u4fe1\u606f \"\"\" try: payload = jwt.decode(token, SECRET_KEY, algorithms=ALGORITHM) username: str = payload.get(\"sub\") # \u901a\u8fc7\u89e3\u6790\u5f97\u5230\u7684username,\u83b7\u53d6\u7528\u6237\u4fe1\u606f,\u5e76\u8fd4\u56de return users_db.get(username) except (jwt.JWTError, jwt.ExpiredSignatureError, ValidationError): raise HTTPException( status_code=status.HTTP_401_UNAUTHORIZED, detail={ 'code': 5000, 'message': \"Token Error\", 'data': \"Token Error\", } ) 2\u3001\u8bbf\u95ee\u5f53\u524d\u7528\u6237\u4fe1\u606f\u63a5\u53e3api # \u5b9a\u4e49\u8fd4\u56de\u6570\u636e\u683c\u5f0f\u4e3aUserBase\u6a21\u578b\u683c\u5f0f\u6570\u636e # \u628a\u6821\u9a8ctoken\u51fd\u6570\u5f53\u505a\u4f9d\u8d56\u9879\u8fdb\u884c\u8d4b\u503c\u7ed9user # \u9a8c\u8bc1\u6210\u529f\uff0c\u5e76\u8fd4\u56deuser @app.get(\"/user\", response_model=UserBase) async def get_user(*, user: UserBase = Depends(check_jwt_token)): return user 3\u3001\u9700\u8981token\u9a8c\u8bc1\u4f46\u4e0d\u9700\u8981\u7528\u6237\u4fe1\u606f\u6570\u636e\u63a5\u53e3api # \u5f53\u4e0d\u9700\u8981\u4f9d\u8d56\u9879\u7684\u8fd4\u56de\u503c\u65f6\uff0c\u53ef\u4ee5\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u8def\u5f84\u4e2d\uff0c\u53ea\u505a\u9a8c\u8bc1\u4f7f\u7528 @app.get(\"/pro\", dependencies=[Depends(check_jwt_token)]) async def get_projects(): return {\"projects\": \"pro\"}","title":"JWT(JSON Web Tokens)"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#jwtjson-web-tokens","text":"","title":"JWT(JSON Web Tokens)"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#_1","text":"","title":"\u4e00\u3001\u4f9d\u8d56\u5e93\u5b89\u88c5"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#jwt","text":"pip install jwt==1.2.0","title":"jwt"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#python-jose","text":"\u7528\u4e8e\u751f\u6210\u548c\u68c0\u9a8cJWT\u4ee4\u724c pip install python-jose==3.2.0","title":"python-jose"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#passlib","text":"\u7528\u4e8e\u5904\u7406\u54c8\u5e0c\u5bc6\u7801\u7684\u5305 \u652f\u6301\u8bb8\u591a\u5b89\u5168\u54c8\u5e0c\u7b97\u6cd5\u4ee5\u53ca\u914d\u5408\u7b97\u6cd5\u4f7f\u7528\u7684\u5b9e\u7528\u7a0b\u5e8f \u63a8\u8350\u7684\u7b97\u6cd5\u662f Bcrypt pip install passlib[Bcrypt]==1.7.4","title":"passlib"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#_2","text":"","title":"\u4e8c\u3001\u54c8\u5e0c\u5e76\u6821\u9a8c\u5bc6\u7801"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#1","text":"from passlib.context import CryptContext # \u4f7f\u7528\u7684\u7b97\u6cd5\u662fBcrypt pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")","title":"1\u3001\u521b\u5efa\u5bf9\u8c61\uff0c\u8fdb\u884c\u54c8\u5e0c\u548c\u6821\u9a8c\u5bc6\u7801"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#2hashpassword","text":"def get_password_hash(password): \"\"\" \u54c8\u5e0c\u6765\u81ea\u7528\u6237\u7684\u5bc6\u7801 :param password: \u539f\u5bc6\u7801 :return: \u54c8\u5e0c\u540e\u7684\u5bc6\u7801 \"\"\" return pwd_context.hash(password) # \u54c8\u5e0c\u540e\u7684\u5bc6\u7801 # $2b$12$sErK932BEaLyIisz30PubepN7w91RLwkISWbAFYgUgoIqh8goJLEW","title":"2\u3001\u54c8\u5e0c\u5bc6\u7801\uff1ahash(password)"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#3verifyplain_password-hashed_password","text":"def verify_password(plain_password, hashed_password): \"\"\" \u6821\u9a8c\u63a5\u6536\u7684\u5bc6\u7801\u662f\u5426\u4e0e\u5b58\u50a8\u7684\u54c8\u5e0c\u503c\u5339\u914d :param plain_password: \u539f\u5bc6\u7801 :param hashed_password: \u54c8\u5e0c\u540e\u7684\u5bc6\u7801 :return: \u8fd4\u56de\u503c\u4e3abool\u7c7b\u578b\uff0c\u6821\u9a8c\u6210\u529f\u8fd4\u56deTrue,\u53cd\u4e4bFalse \"\"\" return pwd_context.verify(plain_password, hashed_password)","title":"3\u3001\u6821\u9a8c\u5bc6\u7801\uff1averify(plain_password, hashed_password)"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#jwt_1","text":"","title":"\u4e09\u3001JWT\u4ee4\u724c\u9a8c\u8bc1\u52a0\u5bc6"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#1jwt","text":"openssl rand -hex 32 # eac77e4e9a9a767b792779132e84ea37b1f4c31bec56714607f617a3fbdfbd53","title":"1\u3001\u751f\u6210\u4e00\u4e2a\u968f\u673a\u7684\u5bc6\u94a5\uff0c\u7528\u4e8e\u5bf9JWT\u4ee4\u724c\u8fdb\u884c\u7b7e\u540d"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#2","text":"SECRET_KEY = \"eac77e4e9a9a767b792779132e84ea37b1f4c31bec56714607f617a3fbdfbd53\"","title":"2\u3001\u521b\u5efa\u5bc6\u94a5\u53d8\u91cf"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#3jwt","text":"ALGORITHM = \"HS256\"","title":"3\u3001\u521b\u5efa\u7528\u4e8e\u8bbe\u5b9aJWT\u4ee4\u724c\u7b7e\u540d\u7b97\u6cd5\u7684\u53d8\u91cf"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#4","text":"ACCESS_TOKEN_EXPIRE_MINUTES = 30","title":"4\u3001\u521b\u5efa\u8bbe\u7f6e\u4ee4\u724c\u8fc7\u671f\u65f6\u95f4\u53d8\u91cf\uff08\u5355\u4f4d\uff1a\u5206\u949f\uff09"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#5","text":"users_db = { \"mockuser\":{ \"id\": 1, \"username\": \"mockuser\", \"email\": \"mock@user.com\", \"password\": \"$2b$12$sErK932BEaLyIisz30PubepN7w91RLwkISWbAFYgUgoIqh8goJLEW\", } }","title":"5\u3001\u6a21\u62df\u6570\u636e\u5e93\u7528\u6237\u4fe1\u606f"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#6","text":"from typing import Optional from pydantic import BaseModel, EmailStr","title":"6\u3001\u521b\u5efa\u6240\u9700\u6a21\u578b\u7c7b"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#1_1","text":"class UserBase(BaseModel): id: Optional[int] = False username: str = None # pip install pydantic[email] email: Optional[EmailStr] = None","title":"1) \u7528\u6237\u6a21\u578b\u57fa\u7c7b"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#2token","text":"class TokenModel(UserBase): token: str = None","title":"2\uff09\u767b\u5f55\u6210\u529f\u8fd4\u56detoken\u6a21\u578b"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#3","text":"class LoginModel(BaseModel): username: str = None password: str = None","title":"3\uff09\u7528\u6237\u767b\u5f55\u6a21\u578b"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#4_1","text":"class CreateModel(UserBase): password: str","title":"4\uff09\u521b\u5efa\u7528\u6237\u6a21\u578b"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#7","text":"def create_access_token(data: dict, expires_delta: Optional[timedelta] = None): \"\"\" :param data: \u9700\u8981\u8fdb\u884cJWT\u4ee4\u724c\u52a0\u5bc6\u7684\u6570\u636e\uff08\u89e3\u5bc6\u7684\u65f6\u5019\u4f1a\u7528\u5230\uff09 :param expires_delta: \u4ee4\u724c\u6709\u6548\u671f :return: token \"\"\" to_encode = data.copy() if expires_delta: expire = datetime.utcnow() + expires_delta else: expire = datetime.utcnow() + timedelta(minutes=15) # \u6dfb\u52a0\u5931\u6548\u65f6\u95f4 to_encode.update({\"exp\": expire}) # SECRET_KEY\uff1a\u5bc6\u94a5 # ALGORITHM\uff1aJWT\u4ee4\u724c\u7b7e\u540d\u7b97\u6cd5 encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM) return encoded_jwt","title":"7\u3001\u521b\u5efa\u751f\u6210\u8bbf\u95ee\u4ee4\u724c\u7684\u51fd\u6570"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#8","text":"def check_user(username, password): \"\"\" \u6821\u9a8c\u7528\u6237\uff08\u771f\u5b9e\u7684\u5e94\u8be5\u662f\u8ddfDB\u8fdb\u884c\u6821\u9a8c\uff0c\u8fd9\u91cc\u53ea\u662f\u505a\u6f14\u793a\uff09 :param username: :param password: :return: \"\"\" user = users_db.get(username) if not user: return False if not verify_password(password, user.get(\"password\")): return False return user","title":"8\u3001\u6821\u9a8c\u7528\u6237\u529f\u80fd\u51fd\u6570"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#9api","text":"# \u4f7f\u7528\u8868\u5355\u683c\u5f0f\u53c2\u6570\u9700\u8981\u5b89\u88c5\u6a21\u5757\uff1apython-multipart @app.post(\"/token\", response_model=TokenModel) async def login_for_access_token(username: str = Form(...), password: str = Form(...)): user = check_user(username, password) if not user: raise HTTPException( status_code=status.HTTP_401_UNAUTHORIZED, detail=\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\" ) # \u8fc7\u671f\u65f6\u95f4 access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES) # \u628aid\u8fdb\u884cusername\u52a0\u5bc6\uff0c\u8981\u4f7f\u7528str\u7c7b\u578b access_token = create_access_token( data={\"sub\": user.get(\"username\")}, expires_delta=access_token_expires ) user.update({\"token\": access_token}) return user","title":"9\u3001\u521b\u5efa\u767b\u5f55\u63a5\u53e3api"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#jwt_2","text":"","title":"\u56db\u3001JWT\u4ee4\u724c\u9a8c\u8bc1\u89e3\u5bc6"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#1token","text":"def check_jwt_token(token: Optional[str] = Header(None)): \"\"\" \u9a8c\u8bc1token :param token: :return: \u8fd4\u56de\u7528\u6237\u4fe1\u606f \"\"\" try: payload = jwt.decode(token, SECRET_KEY, algorithms=ALGORITHM) username: str = payload.get(\"sub\") # \u901a\u8fc7\u89e3\u6790\u5f97\u5230\u7684username,\u83b7\u53d6\u7528\u6237\u4fe1\u606f,\u5e76\u8fd4\u56de return users_db.get(username) except (jwt.JWTError, jwt.ExpiredSignatureError, ValidationError): raise HTTPException( status_code=status.HTTP_401_UNAUTHORIZED, detail={ 'code': 5000, 'message': \"Token Error\", 'data': \"Token Error\", } )","title":"1\u3001\u9a8c\u8bc1token"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#2api","text":"# \u5b9a\u4e49\u8fd4\u56de\u6570\u636e\u683c\u5f0f\u4e3aUserBase\u6a21\u578b\u683c\u5f0f\u6570\u636e # \u628a\u6821\u9a8ctoken\u51fd\u6570\u5f53\u505a\u4f9d\u8d56\u9879\u8fdb\u884c\u8d4b\u503c\u7ed9user # \u9a8c\u8bc1\u6210\u529f\uff0c\u5e76\u8fd4\u56deuser @app.get(\"/user\", response_model=UserBase) async def get_user(*, user: UserBase = Depends(check_jwt_token)): return user","title":"2\u3001\u8bbf\u95ee\u5f53\u524d\u7528\u6237\u4fe1\u606f\u63a5\u53e3api"},{"location":"FastAPI/002FastAPI-JWT%E9%AA%8C%E8%AF%81/#3tokenapi","text":"# \u5f53\u4e0d\u9700\u8981\u4f9d\u8d56\u9879\u7684\u8fd4\u56de\u503c\u65f6\uff0c\u53ef\u4ee5\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u8def\u5f84\u4e2d\uff0c\u53ea\u505a\u9a8c\u8bc1\u4f7f\u7528 @app.get(\"/pro\", dependencies=[Depends(check_jwt_token)]) async def get_projects(): return {\"projects\": \"pro\"}","title":"3\u3001\u9700\u8981token\u9a8c\u8bc1\u4f46\u4e0d\u9700\u8981\u7528\u6237\u4fe1\u606f\u6570\u636e\u63a5\u53e3api"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/","text":"\u5206\u9875\u529f\u80fd\u5b9e\u73b0 \u4e00\u3001\u7ad9\u5728\u5de8\u4eba\u7684\u80a9\u8180\u4e0a\uff08fastapi-pagination\uff09 GitHub\uff1ahttps://github.com/uriyyo/fastapi-pagination \u6587\u6863\uff1ahttps://uriyyo-fastapi-pagination.netlify.app/ \u4e8c\u3001\u5b89\u88c5fastapi-pagination pip install fastapi-pagination \u4e09\u3001\u76f4\u63a5\u4f7f\u7528 from fastapi_pagination import Page, paginate, Params,add_pagination Page\uff1a\u7528\u4e8e\u5728\u8def\u5f84\u4e2d(response_model)\u58f0\u660e\u8fd4\u56de\u6a21\u578b Params\uff1a\u7528\u4e8e\u63d0\u4f9b\u5206\u9875\u53c2\u6570 paginate\uff1a\u7528\u4e8e\u5c06\u6570\u636e\u8fdb\u884c\u5206\u9875 1. \u4f7f\u7528\u4f9d\u8d56\u9879 from fastapi import FastAPI, Depends from fastapi_pagination import Page, paginate, add_pagination, Params from pydantic import BaseModel app = FastAPI() class User(BaseModel): name: str surname: str users = [ User(name='name', surname='name'), User(name='name2', surname='name'), User(name='name3', surname='name'), User(name='name4', surname='name'), User(name='name5', surname='name'), User(name='name6', surname='name'), User(name='name7', surname='name'), User(name='name8', surname='name'), User(name='name9', surname='name'), # ... ] # \u3010response_model=Page[User]\u3011\u5728\u8def\u5f84\u53c2\u6570\u4e2d\u58f0\u660e\u54cd\u5e94\u6570\u636e\u7c7b\u578b # \u3010params: Params = Depends()\u3011\u628aParams\u5f53\u505a\u4f9d\u8d56\u9879\u8fdb\u884c\u5f15\u5165 @app.get('/users', response_model=Page[User]) async def get_users(params: Params = Depends()): # \u5c06\u9700\u8981\u5206\u9875\u7684\u6570\u636e\u8fdb\u884c\u5206\u9875\uff0c\u628aparams\u53c2\u6570\u4f20\u5165 return paginate(users, params) 2. \u7701\u7565\u4f9d\u8d56\u9879 from fastapi import FastAPI, Depends from fastapi_pagination import Page, paginate, add_pagination, Params from pydantic import BaseModel app = FastAPI() class User(BaseModel): name: str surname: str users = [ User(name='name', surname='name'), User(name='name2', surname='name'), User(name='name3', surname='name'), User(name='name4', surname='name'), User(name='name5', surname='name'), User(name='name6', surname='name'), User(name='name7', surname='name'), User(name='name8', surname='name'), User(name='name9', surname='name'), # ... ] # \u3010response_model=Page[User]\u3011\u5728\u8def\u5f84\u53c2\u6570\u4e2d\u58f0\u660e\u54cd\u5e94\u6570\u636e\u7c7b\u578b @app.get('/users', response_model=Page[User]) async def get_users(): # \u5c06\u9700\u8981\u5206\u9875\u7684\u6570\u636e\u8fdb\u884c\u5206\u9875 return paginate(users) # \u5728\u63a5\u53e3\u51fd\u6570\u4e4b\u540e\uff0c\u4f7f\u7528add_pagination\u8fdb\u884c\u9ed8\u8ba4\u6dfb\u52a0\u5206\u9875\u4f9d\u8d56\u9879 add_pagination(app) \u56db\u3001Limit-Offset from fastapi import FastAPI from fastapi_pagination import LimitOffsetPage, add_pagination, paginate from pydantic import BaseModel app = FastAPI() class User(BaseModel): name: str surname: str users = [ User(name='name', surname='name'), User(name='name2', surname='name'), User(name='name3', surname='name'), User(name='name4', surname='name'), User(name='name5', surname='name'), User(name='name6', surname='name'), User(name='name7', surname='name'), User(name='name8', surname='name'), User(name='name9', surname='name'), # ... ] @app.get('/users', response_model=LimitOffsetPage[User]) async def get_users(): return paginate(users) add_pagination(app) \u4e94\u3001\u81ea\u5b9a\u4e49\u53c2\u6570\u4fe1\u606f 1.\u81ea\u5b9a\u4e49Params(\u628apage\u53c2\u6570\u8d77\u59cb\u503c\u6539\u4e3a1) from fastapi import Query from fastapi_pagination.bases import AbstractParams, RawParams from pydantic import BaseModel class Params(BaseModel, AbstractParams): # \u8bbe\u7f6e\u9ed8\u8ba4\u503c\u4e3a1\uff0c\u4e0d\u80fd\u591f\u5c0f\u4e8e1 page: int = Query(1, ge=1, description=\"Page number\") # \u8bbe\u7f6e\u9ed8\u8ba4\u503c\u4e3a20\uff0c\u6700\u5927\u4e3a100 size: int = Query(20, gt=0, le=100, description=\"Page size\") def to_raw_params(self) -> RawParams: return RawParams( limit=self.size, # \u66f4\u7231page\u53c2\u6570\u8d77\u59cb\u503c\u4ece1\u5f00\u59cb offset=self.size * (self.page - 1), ) 2.\u81ea\u5b9a\u4e49Page\u6a21\u578b from __future__ import annotations import math from typing import TypeVar, Generic, Sequence from fastapi_pagination.bases import AbstractPage T = TypeVar(\"T\") class Page(AbstractPage[T], Generic[T]): # \u4fee\u6539Page\u6a21\u578b data: Sequence[T] # \u6570\u636e total: int # \u603b\u6570\u636e\u6570 page: int # \u7b2cn\u9875 size: int # \u6bcf\u9875\u6570\u91cf next: str # \u4e0b\u4e00\u9875\u53c2\u6570 previous: str # \u4e0a\u4e00\u9875\u53c2\u6570 total_pages: int # \u603b\u9875\u6570 # \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684Params __params_type__ = Params # Set params related to Page @classmethod def create( cls, items: data, total: int, params: Params, ) -> Page[T]: # \u4eceparams\u83b7\u53d6page\u548csize page = params.page size = params.size # \u901a\u8fc7\u603b\u6570\u548c\u6bcf\u9875\u6570\u91cf\u8ba1\u7b97\u51fa\u603b\u9875\u6570 total_pages = math.ceil(total / params.size) # \u751f\u6210\u4e0b\u4e00\u9875\u53c2\u6570\uff08\u5982\u679c\u6ca1\u6709\u4e0b\u4e00\u9875\u5219\u4e3anull\uff09 next = f\"?page={page + 1}&size={size}\" if (page + 1) <= total_pages else \"null\" # \u751f\u6210\u4e0a\u4e00\u9875\u53c2\u6570\uff08\u5982\u679c\u6ca1\u6709\u4e0a\u4e00\u9875\u5219\u4e3anull\uff09 previous = f\"?page={page - 1}&size={size}\" if (page - 1) >= 1 else \"null\" # \u6839\u636e\u5b9a\u4e49\u7684\u6a21\u578b\u53c2\u6570\u8fdb\u884c\u8fd4\u56de return cls(data=items, total=total, page=params.page, size=params.size, next=next, previous=previous, total_pages=total_pages) 3.\u91cd\u5199\u6574\u5408\uff08pagination.py\uff09 from __future__ import annotations import math from typing import TypeVar, Generic, Sequence from fastapi import Query from fastapi_pagination.bases import AbstractPage, AbstractParams, RawParams from pydantic import BaseModel T = TypeVar(\"T\") class Params(BaseModel, AbstractParams): page: int = Query(1, ge=1, description=\"Page number\") size: int = Query(20, gt=0, le=100, description=\"Page size\") def to_raw_params(self) -> RawParams: return RawParams( limit=self.size, offset=self.size * (self.page - 1), ) class Page(AbstractPage[T], Generic[T]): results: Sequence[T] total: int page: int size: int next: str previous: str total_pages: int __params_type__ = Params # Set params related to Page @classmethod def create( cls, results: results, total: int, params: Params, ) -> Page[T]: page = params.page size = params.size total_pages = math.ceil(total / params.size) next = f\"?page={page + 1}&size={size}\" if (page + 1) <= total_pages else \"null\" previous = f\"?page={page - 1}&size={size}\" if (page - 1) >= 1 else \"null\" return cls(results=results, total=total, page=params.page, size=params.size, next=next, previous=previous, total_pages=total_pages) 4.\u4f7f\u7528\u81ea\u5b9a\u4e49\u540e\u7684\u5206\u9875\u529f\u80fd # \u628aPage\u4ece\u81ea\u5b9a\u4e49\u7684\u5305\u4e2d\u5bfc\u5165\u5373\u53ef from pagination import Page @app.get('/users', response_model=Page[User]) async def get_users(): return paginate(users) \u516d\u3001\u96c6\u6210SQLAlchemy\u4f7f\u7528 1\u3001\u7b80\u5355\u4f7f\u7528 1\uff09 \u66f4\u6539\u3010paginate\u3011\u5305\u7684\u8def\u5f84\u4e3a\u3010fastapi_pagination.ext.sqlalchemy\u3011 from fastapi_pagination.ext.sqlalchemy import paginate 2\uff09 \u521b\u5efa\u6570\u636e\u8fd4\u56de\u6a21\u578b class User(BaseModel): email: str password: str is_active: bool # \u8fd9\u4e2a\u914d\u7f6e\u5fc5\u987b\u5f97\u8981 class Config: orm_mode = True 3\uff09 \u4f7f\u7528\u3010sqlalchemy.paginate\u3011 # \u3010db: Session = Depends(get_db)\u3011\uff1a\u6570\u636e\u5e93\u4f9d\u8d56\u9879 @app.get('/users', response_model=Page[User]) async def get_users(db: Session = Depends(get_db)): # \u6b64\u5904\u7684\u53c2\u6570\u4e3a\u3010db.query(models.User)\u3011 # \u3010sqlalchemy.paginate\u3011\u7684\u53c2\u6570\u4e3a\u3010sqlalchemy.orm.query.Query\u3011\u7c7b\u578b return paginate(db.query(models.User)) 2\u3001\u4f7f\u7528\u5f02\u6b65 1\uff09\u5b89\u88c5\u652f\u6301\u5f02\u6b65\u7684 aiomysql pip install aiomysql 2\uff09 sqlalchemy \u5f15\u64ce\u9700\u8981\u5f02\u6b65\u521b\u5efa from sqlalchemy.ext.asyncio import create_async_engine # \u8fd9\u91cc\u8981\u4f7f\u7528\u652f\u6301\u5f02\u6b65\u7684aiomysql SQLALCHEMY_DATABASE_URL = \"mysql+aiomysql://root:123456@127.0.0.1:3306/users?charset=utf8\" # \u6ce8\u610fsqlite\u4e0d\u652f\u6301\u5f02\u6b65 engine = create_async_engine(SQLALCHEMY_DATABASE_URL) 3\uff09\u521b\u5efa\u5f02\u6b65\u7684\u6570\u636e\u5e93\u4f1a\u8bdd from sqlalchemy.ext.asyncio import AsyncSession SessionLocal = sessionmaker(bind=engine, class_=AsyncSession) 4\uff09\u521b\u5efa\u5f02\u6b65\u7684\u6570\u636e\u5e93\u4f9d\u8d56\u9879 # \u4f9d\u8d56\u9879\u8981\u5b9a\u4e49\u4e3a\u5f02\u6b65\u51fd\u6570 async def get_db(): async with SessionLocal() as session: yield session 5\uff09 paginate \u4f7f\u7528 async_sqlalchemy \u6a21\u5757\u4e0b\u7684 from fastapi_pagination.ext.async_sqlalchemy import paginate from sqlalchemy.future import select @app.get('/users', response_model=Page[User]) async def get_users(db: Session = Depends(get_db)): # \u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6570\u636e\u5e93\u8fde\u63a5 # \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3aSelect\u7c7b\u578b\u7684\u53c2\u6570 # \u8981\u6dfb\u52a0await\u5173\u952e\u5b57 return await paginate(db, select(models.User))","title":"\u5206\u9875\u529f\u80fd\u5b9e\u73b0"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_1","text":"","title":"\u5206\u9875\u529f\u80fd\u5b9e\u73b0"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#fastapi-pagination","text":"GitHub\uff1ahttps://github.com/uriyyo/fastapi-pagination \u6587\u6863\uff1ahttps://uriyyo-fastapi-pagination.netlify.app/","title":"\u4e00\u3001\u7ad9\u5728\u5de8\u4eba\u7684\u80a9\u8180\u4e0a\uff08fastapi-pagination\uff09"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#fastapi-pagination_1","text":"pip install fastapi-pagination","title":"\u4e8c\u3001\u5b89\u88c5fastapi-pagination"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_2","text":"from fastapi_pagination import Page, paginate, Params,add_pagination Page\uff1a\u7528\u4e8e\u5728\u8def\u5f84\u4e2d(response_model)\u58f0\u660e\u8fd4\u56de\u6a21\u578b Params\uff1a\u7528\u4e8e\u63d0\u4f9b\u5206\u9875\u53c2\u6570 paginate\uff1a\u7528\u4e8e\u5c06\u6570\u636e\u8fdb\u884c\u5206\u9875","title":"\u4e09\u3001\u76f4\u63a5\u4f7f\u7528"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#1","text":"from fastapi import FastAPI, Depends from fastapi_pagination import Page, paginate, add_pagination, Params from pydantic import BaseModel app = FastAPI() class User(BaseModel): name: str surname: str users = [ User(name='name', surname='name'), User(name='name2', surname='name'), User(name='name3', surname='name'), User(name='name4', surname='name'), User(name='name5', surname='name'), User(name='name6', surname='name'), User(name='name7', surname='name'), User(name='name8', surname='name'), User(name='name9', surname='name'), # ... ] # \u3010response_model=Page[User]\u3011\u5728\u8def\u5f84\u53c2\u6570\u4e2d\u58f0\u660e\u54cd\u5e94\u6570\u636e\u7c7b\u578b # \u3010params: Params = Depends()\u3011\u628aParams\u5f53\u505a\u4f9d\u8d56\u9879\u8fdb\u884c\u5f15\u5165 @app.get('/users', response_model=Page[User]) async def get_users(params: Params = Depends()): # \u5c06\u9700\u8981\u5206\u9875\u7684\u6570\u636e\u8fdb\u884c\u5206\u9875\uff0c\u628aparams\u53c2\u6570\u4f20\u5165 return paginate(users, params)","title":"1. \u4f7f\u7528\u4f9d\u8d56\u9879"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#2","text":"from fastapi import FastAPI, Depends from fastapi_pagination import Page, paginate, add_pagination, Params from pydantic import BaseModel app = FastAPI() class User(BaseModel): name: str surname: str users = [ User(name='name', surname='name'), User(name='name2', surname='name'), User(name='name3', surname='name'), User(name='name4', surname='name'), User(name='name5', surname='name'), User(name='name6', surname='name'), User(name='name7', surname='name'), User(name='name8', surname='name'), User(name='name9', surname='name'), # ... ] # \u3010response_model=Page[User]\u3011\u5728\u8def\u5f84\u53c2\u6570\u4e2d\u58f0\u660e\u54cd\u5e94\u6570\u636e\u7c7b\u578b @app.get('/users', response_model=Page[User]) async def get_users(): # \u5c06\u9700\u8981\u5206\u9875\u7684\u6570\u636e\u8fdb\u884c\u5206\u9875 return paginate(users) # \u5728\u63a5\u53e3\u51fd\u6570\u4e4b\u540e\uff0c\u4f7f\u7528add_pagination\u8fdb\u884c\u9ed8\u8ba4\u6dfb\u52a0\u5206\u9875\u4f9d\u8d56\u9879 add_pagination(app)","title":"2. \u7701\u7565\u4f9d\u8d56\u9879"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#limit-offset","text":"from fastapi import FastAPI from fastapi_pagination import LimitOffsetPage, add_pagination, paginate from pydantic import BaseModel app = FastAPI() class User(BaseModel): name: str surname: str users = [ User(name='name', surname='name'), User(name='name2', surname='name'), User(name='name3', surname='name'), User(name='name4', surname='name'), User(name='name5', surname='name'), User(name='name6', surname='name'), User(name='name7', surname='name'), User(name='name8', surname='name'), User(name='name9', surname='name'), # ... ] @app.get('/users', response_model=LimitOffsetPage[User]) async def get_users(): return paginate(users) add_pagination(app)","title":"\u56db\u3001Limit-Offset"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_3","text":"","title":"\u4e94\u3001\u81ea\u5b9a\u4e49\u53c2\u6570\u4fe1\u606f"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#1paramspage1","text":"from fastapi import Query from fastapi_pagination.bases import AbstractParams, RawParams from pydantic import BaseModel class Params(BaseModel, AbstractParams): # \u8bbe\u7f6e\u9ed8\u8ba4\u503c\u4e3a1\uff0c\u4e0d\u80fd\u591f\u5c0f\u4e8e1 page: int = Query(1, ge=1, description=\"Page number\") # \u8bbe\u7f6e\u9ed8\u8ba4\u503c\u4e3a20\uff0c\u6700\u5927\u4e3a100 size: int = Query(20, gt=0, le=100, description=\"Page size\") def to_raw_params(self) -> RawParams: return RawParams( limit=self.size, # \u66f4\u7231page\u53c2\u6570\u8d77\u59cb\u503c\u4ece1\u5f00\u59cb offset=self.size * (self.page - 1), )","title":"1.\u81ea\u5b9a\u4e49Params(\u628apage\u53c2\u6570\u8d77\u59cb\u503c\u6539\u4e3a1)"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#2page","text":"from __future__ import annotations import math from typing import TypeVar, Generic, Sequence from fastapi_pagination.bases import AbstractPage T = TypeVar(\"T\") class Page(AbstractPage[T], Generic[T]): # \u4fee\u6539Page\u6a21\u578b data: Sequence[T] # \u6570\u636e total: int # \u603b\u6570\u636e\u6570 page: int # \u7b2cn\u9875 size: int # \u6bcf\u9875\u6570\u91cf next: str # \u4e0b\u4e00\u9875\u53c2\u6570 previous: str # \u4e0a\u4e00\u9875\u53c2\u6570 total_pages: int # \u603b\u9875\u6570 # \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684Params __params_type__ = Params # Set params related to Page @classmethod def create( cls, items: data, total: int, params: Params, ) -> Page[T]: # \u4eceparams\u83b7\u53d6page\u548csize page = params.page size = params.size # \u901a\u8fc7\u603b\u6570\u548c\u6bcf\u9875\u6570\u91cf\u8ba1\u7b97\u51fa\u603b\u9875\u6570 total_pages = math.ceil(total / params.size) # \u751f\u6210\u4e0b\u4e00\u9875\u53c2\u6570\uff08\u5982\u679c\u6ca1\u6709\u4e0b\u4e00\u9875\u5219\u4e3anull\uff09 next = f\"?page={page + 1}&size={size}\" if (page + 1) <= total_pages else \"null\" # \u751f\u6210\u4e0a\u4e00\u9875\u53c2\u6570\uff08\u5982\u679c\u6ca1\u6709\u4e0a\u4e00\u9875\u5219\u4e3anull\uff09 previous = f\"?page={page - 1}&size={size}\" if (page - 1) >= 1 else \"null\" # \u6839\u636e\u5b9a\u4e49\u7684\u6a21\u578b\u53c2\u6570\u8fdb\u884c\u8fd4\u56de return cls(data=items, total=total, page=params.page, size=params.size, next=next, previous=previous, total_pages=total_pages)","title":"2.\u81ea\u5b9a\u4e49Page\u6a21\u578b"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#3paginationpy","text":"from __future__ import annotations import math from typing import TypeVar, Generic, Sequence from fastapi import Query from fastapi_pagination.bases import AbstractPage, AbstractParams, RawParams from pydantic import BaseModel T = TypeVar(\"T\") class Params(BaseModel, AbstractParams): page: int = Query(1, ge=1, description=\"Page number\") size: int = Query(20, gt=0, le=100, description=\"Page size\") def to_raw_params(self) -> RawParams: return RawParams( limit=self.size, offset=self.size * (self.page - 1), ) class Page(AbstractPage[T], Generic[T]): results: Sequence[T] total: int page: int size: int next: str previous: str total_pages: int __params_type__ = Params # Set params related to Page @classmethod def create( cls, results: results, total: int, params: Params, ) -> Page[T]: page = params.page size = params.size total_pages = math.ceil(total / params.size) next = f\"?page={page + 1}&size={size}\" if (page + 1) <= total_pages else \"null\" previous = f\"?page={page - 1}&size={size}\" if (page - 1) >= 1 else \"null\" return cls(results=results, total=total, page=params.page, size=params.size, next=next, previous=previous, total_pages=total_pages)","title":"3.\u91cd\u5199\u6574\u5408\uff08pagination.py\uff09"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#4","text":"# \u628aPage\u4ece\u81ea\u5b9a\u4e49\u7684\u5305\u4e2d\u5bfc\u5165\u5373\u53ef from pagination import Page @app.get('/users', response_model=Page[User]) async def get_users(): return paginate(users)","title":"4.\u4f7f\u7528\u81ea\u5b9a\u4e49\u540e\u7684\u5206\u9875\u529f\u80fd"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#sqlalchemy","text":"","title":"\u516d\u3001\u96c6\u6210SQLAlchemy\u4f7f\u7528"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#1_1","text":"","title":"1\u3001\u7b80\u5355\u4f7f\u7528"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#1-paginatefastapi_paginationextsqlalchemy","text":"from fastapi_pagination.ext.sqlalchemy import paginate","title":"1\uff09 \u66f4\u6539\u3010paginate\u3011\u5305\u7684\u8def\u5f84\u4e3a\u3010fastapi_pagination.ext.sqlalchemy\u3011"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#2_1","text":"class User(BaseModel): email: str password: str is_active: bool # \u8fd9\u4e2a\u914d\u7f6e\u5fc5\u987b\u5f97\u8981 class Config: orm_mode = True","title":"2\uff09 \u521b\u5efa\u6570\u636e\u8fd4\u56de\u6a21\u578b"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#3-sqlalchemypaginate","text":"# \u3010db: Session = Depends(get_db)\u3011\uff1a\u6570\u636e\u5e93\u4f9d\u8d56\u9879 @app.get('/users', response_model=Page[User]) async def get_users(db: Session = Depends(get_db)): # \u6b64\u5904\u7684\u53c2\u6570\u4e3a\u3010db.query(models.User)\u3011 # \u3010sqlalchemy.paginate\u3011\u7684\u53c2\u6570\u4e3a\u3010sqlalchemy.orm.query.Query\u3011\u7c7b\u578b return paginate(db.query(models.User))","title":"3\uff09 \u4f7f\u7528\u3010sqlalchemy.paginate\u3011"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#2_2","text":"","title":"2\u3001\u4f7f\u7528\u5f02\u6b65"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#1aiomysql","text":"pip install aiomysql","title":"1\uff09\u5b89\u88c5\u652f\u6301\u5f02\u6b65\u7684aiomysql"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#2sqlalchemy","text":"from sqlalchemy.ext.asyncio import create_async_engine # \u8fd9\u91cc\u8981\u4f7f\u7528\u652f\u6301\u5f02\u6b65\u7684aiomysql SQLALCHEMY_DATABASE_URL = \"mysql+aiomysql://root:123456@127.0.0.1:3306/users?charset=utf8\" # \u6ce8\u610fsqlite\u4e0d\u652f\u6301\u5f02\u6b65 engine = create_async_engine(SQLALCHEMY_DATABASE_URL)","title":"2\uff09sqlalchemy\u5f15\u64ce\u9700\u8981\u5f02\u6b65\u521b\u5efa"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#3","text":"from sqlalchemy.ext.asyncio import AsyncSession SessionLocal = sessionmaker(bind=engine, class_=AsyncSession)","title":"3\uff09\u521b\u5efa\u5f02\u6b65\u7684\u6570\u636e\u5e93\u4f1a\u8bdd"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#4_1","text":"# \u4f9d\u8d56\u9879\u8981\u5b9a\u4e49\u4e3a\u5f02\u6b65\u51fd\u6570 async def get_db(): async with SessionLocal() as session: yield session","title":"4\uff09\u521b\u5efa\u5f02\u6b65\u7684\u6570\u636e\u5e93\u4f9d\u8d56\u9879"},{"location":"FastAPI/003%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#5paginateasync_sqlalchemy","text":"from fastapi_pagination.ext.async_sqlalchemy import paginate from sqlalchemy.future import select @app.get('/users', response_model=Page[User]) async def get_users(db: Session = Depends(get_db)): # \u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6570\u636e\u5e93\u8fde\u63a5 # \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3aSelect\u7c7b\u578b\u7684\u53c2\u6570 # \u8981\u6dfb\u52a0await\u5173\u952e\u5b57 return await paginate(db, select(models.User))","title":"5\uff09paginate\u4f7f\u7528async_sqlalchemy\u6a21\u5757\u4e0b\u7684"},{"location":"FastAPI/005Docker%2BGunicorn%2BUvicorn%E9%83%A8%E7%BD%B2FastAPI/","text":"Docker+Gunicorn+Uvicorn\u90e8\u7f72FastAPI Uvicorn Uvicorn \u662f\u57fa\u4e8e uvloop \u548c httptools \u6784\u5efa\u7684\u975e\u5e38\u5feb\u901f\u7684 ASGI \u670d\u52a1\u5668\u3002 Uvicorn \u63d0\u4f9b\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u65b9\u6cd5\u6765\u8fd0\u884c\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u6bd4\u5982 --workers 4 \uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u63d0\u4f9b\u8fdb\u884c\u7684\u76d1\u63a7\u3002 Gunicorn Gunicorn \u662f\u6210\u719f\u7684\uff0c\u529f\u80fd\u9f50\u5168\u7684\u670d\u52a1\u5668\uff0cUvicorn \u5185\u90e8\u5305\u542b\u6709 Guicorn \u7684 workers \u7c7b\uff0c\u5141\u8bb8\u4f60\u8fd0\u884c ASGI \u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u4e9b workers \u7ee7\u627f\u4e86\u6240\u6709 Uvicorn \u9ad8\u6027\u80fd\u7684\u7279\u70b9\uff0c\u5e76\u4e14\u7ed9\u4f60\u4f7f\u7528 Guicorn \u6765\u8fdb\u884c\u8fdb\u7a0b\u7ba1\u7406\u3002 \u7528\u6765\u7ba1\u7406Uvicorn \u4f7f\u7528Guicorn\u548cUvicorn\u7684worker\u7c7b\u751f\u4ea7\u73af\u5883\u90e8\u7f72 gunicorn example:app -w 4 -k uvicorn.workers.UvicornWorker Gunicorn\u914d\u7f6e\u6587\u4ef6 debug = True daemon = True bind = '0.0.0.0:8444' # \u7ed1\u5b9aip\u548c\u7aef\u53e3\u53f7 timeout = 30 # \u8d85\u65f6\u65f6\u95f4 worker_class = 'uvicorn.workers.UvicornWorker' workers = 4 # \u8fdb\u7a0b\u6570 # \u8bbe\u7f6e\u8bc1\u4e66 # keyfile = '' # certfile = '' loglevel = 'debug' # \u65e5\u5fd7\u7ea7\u522b\uff0c\u8fd9\u4e2a\u65e5\u5fd7\u7ea7\u522b\u6307\u7684\u662f\u9519\u8bef\u65e5\u5fd7\u7ea7\u522b\uff0c\u800c\u8bbf\u95ee\u65e5\u5fd7\u7684\u7ea7\u522b\u65e0\u6cd5\u8bbe\u7f6e accesslog = \"/tmp/gunicorn_fasttest_access.log\" # \u8bbf\u95ee\u65e5\u5fd7\u6587\u4ef6 errorlog = \"/tmp/gunicorn_fasttest_error.log\" # \u9519\u8bef\u65e5\u5fd7\u6587\u4ef6","title":"Docker+Gunicorn+Uvicorn\u90e8\u7f72FastAPI"},{"location":"FastAPI/005Docker%2BGunicorn%2BUvicorn%E9%83%A8%E7%BD%B2FastAPI/#dockergunicornuvicornfastapi","text":"","title":"Docker+Gunicorn+Uvicorn\u90e8\u7f72FastAPI"},{"location":"FastAPI/005Docker%2BGunicorn%2BUvicorn%E9%83%A8%E7%BD%B2FastAPI/#uvicorn","text":"Uvicorn \u662f\u57fa\u4e8e uvloop \u548c httptools \u6784\u5efa\u7684\u975e\u5e38\u5feb\u901f\u7684 ASGI \u670d\u52a1\u5668\u3002 Uvicorn \u63d0\u4f9b\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u65b9\u6cd5\u6765\u8fd0\u884c\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u6bd4\u5982 --workers 4 \uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u63d0\u4f9b\u8fdb\u884c\u7684\u76d1\u63a7\u3002","title":"Uvicorn"},{"location":"FastAPI/005Docker%2BGunicorn%2BUvicorn%E9%83%A8%E7%BD%B2FastAPI/#gunicorn","text":"Gunicorn \u662f\u6210\u719f\u7684\uff0c\u529f\u80fd\u9f50\u5168\u7684\u670d\u52a1\u5668\uff0cUvicorn \u5185\u90e8\u5305\u542b\u6709 Guicorn \u7684 workers \u7c7b\uff0c\u5141\u8bb8\u4f60\u8fd0\u884c ASGI \u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u4e9b workers \u7ee7\u627f\u4e86\u6240\u6709 Uvicorn \u9ad8\u6027\u80fd\u7684\u7279\u70b9\uff0c\u5e76\u4e14\u7ed9\u4f60\u4f7f\u7528 Guicorn \u6765\u8fdb\u884c\u8fdb\u7a0b\u7ba1\u7406\u3002 \u7528\u6765\u7ba1\u7406Uvicorn","title":"Gunicorn"},{"location":"FastAPI/005Docker%2BGunicorn%2BUvicorn%E9%83%A8%E7%BD%B2FastAPI/#guicornuvicornworker","text":"gunicorn example:app -w 4 -k uvicorn.workers.UvicornWorker","title":"\u4f7f\u7528Guicorn\u548cUvicorn\u7684worker\u7c7b\u751f\u4ea7\u73af\u5883\u90e8\u7f72"},{"location":"FastAPI/005Docker%2BGunicorn%2BUvicorn%E9%83%A8%E7%BD%B2FastAPI/#gunicorn_1","text":"debug = True daemon = True bind = '0.0.0.0:8444' # \u7ed1\u5b9aip\u548c\u7aef\u53e3\u53f7 timeout = 30 # \u8d85\u65f6\u65f6\u95f4 worker_class = 'uvicorn.workers.UvicornWorker' workers = 4 # \u8fdb\u7a0b\u6570 # \u8bbe\u7f6e\u8bc1\u4e66 # keyfile = '' # certfile = '' loglevel = 'debug' # \u65e5\u5fd7\u7ea7\u522b\uff0c\u8fd9\u4e2a\u65e5\u5fd7\u7ea7\u522b\u6307\u7684\u662f\u9519\u8bef\u65e5\u5fd7\u7ea7\u522b\uff0c\u800c\u8bbf\u95ee\u65e5\u5fd7\u7684\u7ea7\u522b\u65e0\u6cd5\u8bbe\u7f6e accesslog = \"/tmp/gunicorn_fasttest_access.log\" # \u8bbf\u95ee\u65e5\u5fd7\u6587\u4ef6 errorlog = \"/tmp/gunicorn_fasttest_error.log\" # \u9519\u8bef\u65e5\u5fd7\u6587\u4ef6","title":"Gunicorn\u914d\u7f6e\u6587\u4ef6"},{"location":"HTTPRunner/HTTPRunner2.x/","text":"HTTPRunner \u4e00\u3001\u7b80\u4ecb 2.x\u7248\u672c\u96c6\u6210\u4e86 3.x\u7248\u672c\u96c6\u6210\u4e86pytest \u4e8c\u3001\u5b89\u88c5 pip install httprunner==2.3.0 \u4e09\u3001\u521b\u5efahttprunner\u5de5\u7a0b hrun --startproject ./hrdemo \u56db\u3001\u76ee\u5f55\u7ed3\u6784 |-hrdemo |--api\uff1a\u4e3b\u8981\u5b58\u653e\u63a5\u53e3\u7684\u6700\u5c0f\u6267\u884c\u5355\u4f4d\uff08\u6b63\u5411\u7528\u4f8b\uff09 |--reports\uff1a\u7528\u4e8e\u5b58\u653e\u6d4b\u8bd5\u62a5\u544a |--testcases\uff1a\u7528\u4e8e\u5904\u7406\u63a5\u53e3\u7684\u8d1f\u8d23\u6267\u884c\u903b\u8f91\uff0c\u5b9e\u73b0\u63a5\u53e3\u95f4\u7684\u4f9d\u8d56 |--testsuites\uff1a\u7528\u4e8e\u6dfb\u52a0\u591a\u6761\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6279\u91cf\u6267\u884c\uff0c\u5904\u7406\u6570\u636e\u9a71\u52a8\u6d4b\u8bd5\uff08\u53c2\u6570\u5316\uff09 |--.env\uff1a\u7528\u4e8e\u81ea\u5b9a\u4e49\u5168\u5c40\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u5728\u6574\u4e2a\u9879\u76ee\u7684\u6d4b\u8bd5\u811a\u672c\u4e2d\u8c03\u7528 |--.gitignore |--debugtalk.py\uff1a\u7528\u4e8e\u5904\u7406\u52a8\u6001\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u5904\u7406\u53c2\u6570\u5316\u52a8\u6001\u6570\u636e \u4e94\u3001\u7b80\u5355\u4f7f\u7528 1\uff09yml\u7528\u4f8b name: get demo request: method: GET url: https://httpbin.org/get validate: - eq: [\"status_code\",200] 2\uff09\u8fd0\u884cyml\u7528\u4f8b hrun api/get_demo.yml --report-dir reports OR httprunner api/get_demo.yml --report-dir reports \u516d\u3001\u7279\u6b8a\u7528\u6cd5 1\uff09\u5c40\u90e8\u53d8\u91cf \u5728yml\u6587\u4ef6\u4e2d\uff0c\u5728variables\u8282\u70b9\u4e0b\u5b9a\u4e49\u7684\u53c2\u6570\u4e3a\u5c40\u90e8\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u53ea\u5728\u5f53\u524dyml\u4e0b name: get params variables: value1: value1 value2: value2 \u4f7f\u7528\uff1a \u56fa\u5b9a\u8bed\u6cd5\uff1a $\u53d8\u91cf\u540d name: get params variables: value1: value1 value2: value2 request: method: GET url: 'https://httpbin.org/get' params: value1: $value1 value2: $value2 validate: - eq: ['status_code', 200] 2\uff09base_url \u5728yml\u6587\u4ef6\u4e2d\uff0c\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u8282\u70b9base_url(\u540d\u5b57\u4e3a\u56fa\u5b9a\u5199\u6cd5) base_url: 'https://httpbin.org' 3\uff09\u73af\u5883\u53d8\u91cf .env \u6587\u4ef6 \u5728 .env \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u4e3a\u73af\u5883\u53d8\u91cf USERNAME=leolee PASSWORD=123456 BASE_URL=https://httpbin.org \u4f7f\u7528\uff1a \u56fa\u5b9a\u8bed\u6cd5\uff1a ${ENV(\u5b9a\u4e49\u7684\u73af\u5883\u53d8\u91cf\u540d)} name: get params variables: value1: value1 value2: value2 base_url: ${ENV(BASE_URL)} request: method: GET url: /get params: value1: $value1 value2: $value2 validate: - eq: ['status_code', 200] 4\uff09\u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570- debugtalk.py \u5728 debugtalk.py \u4e2d\u5b9a\u4e49\u51fd\u6570 import random def get_agent(): agents = [\"Mozilla/5.0 Desire\", \"Mozilla/5.0 Tommy\", \"Mozilla/5.0 Ronin\", \"Mozilla/5.0 DD\"] return random.choice(agents) \u4f7f\u7528\uff1a \u56fa\u5b9a\u8bed\u6cd5\uff1a ${\u51fd\u6570\u8c03\u7528} name: get params variables: value1: value1 value2: value2 base_url: ${ENV(BASE_URL)} request: method: GET url: /get params: value1: $value1 value2: $value2 headers: User-Agent: ${get_agent()} validate: - eq: ['status_code', 200] 5\uff09\u524d\u7f6e\uff08setup_hooks\uff09 OR \u540e\u7f6e\uff08teardown_hooks\uff09hook(\u4e0d\u53ef\u7528\u4e8etestsuite\u4e2d) name: login api variables: username: desire password: 123456 n_secs: 1 base_url: ${ENV(BASE_URL)} request: url: /user/login/ method: POST headers: Content-Type: \"application/json\" json: username: $username password: $password # \u524d\u7f6e\u6761\u4ef6 setup_hooks: # \u8c03\u7528\u81ea\u5b9a\u4e49\u7684\u524d\u7f6e\u51fd\u6570\uff0c\u4fee\u6539\u8bf7\u6c42\u4fe1\u606fheaders\u4e2d\u7684User-Agent\u4e3aDesire - ${setup_hook_add_kwargs($request)} # \u540e\u7f6e\u6761\u4ef6 teardown_hooks: # \u8c03\u7528\u81ea\u5b9a\u4e49\u7684\u540e\u7f6e\u51fd\u6570\uff0c\u5982\u679c\u54cd\u5e94\u6210\u529f\u5219\u4f11\u77205\u79d2\uff0c\u54cd\u5e94\u975e200\u5219\u4f11\u7720n_secs - ${teardown_hook_sleep_N_secs($response, $n_secs)} validate: - eq: [\"status_code\", 200] debugtalk.py\u81ea\u5b9a\u4e49\u51fd\u6570 import time def setup_hook_add_kwargs(request): request[\"headers\"][\"User-Agent\"] = \"Desire\" def teardown_hook_sleep_N_secs(response, n_secs): \"\"\" sleep n seconds after request \"\"\" if response.status_code == 200: time.sleep(5) else: time.sleep(n_secs) \u4e03\u3001\u65ad\u8a00 validate 1\uff09\u65ad\u8a00\u65b9\u5f0f \u65ad\u8a00\u65b9\u6cd5 \u6e90\u7801\uff08httprunner/built_in.py\uff09 \u8bf4\u660e eq def equals( check_value , expect_value ): \u662f\u5426\u76f8\u7b49 lt def less_than( check_value , expect_value ): \u5c0f\u4e8e le def less_than_or_equals( check_value , expect_value ): \u5c0f\u4e8e\u7b49\u4e8e gt def greater_than( check_value , expect_value ): \u5927\u4e8e ge def greater_than_or_equals( check_value , expect_value ): \u5927\u4e8e\u7b49\u4e8e ne def not_equals( check_value , expect_value ): \u4e0d\u7b49\u4e8e str_eq def string_equals( check_value , expect_value ): \u5b57\u7b26\u4e32\u7b49\u4e8e len_eq def length_equals( check_value , expect_value ): \u957f\u5ea6\u7b49\u4e8e len_gt def length_greater_than( check_value , expect_value ): \u957f\u5ea6\u5927\u4e8e len_ge def length_greater_than_or_equals( check_value , expect_value ): \u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e len_lt def length_less_than( check_value , expect_value ): \u957f\u5ea6\u5c0f\u4e8e len_le def length_less_than_or_equals( check_value , expect_value ): \u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e contains def contains( check_value , expect_value ): \u9884\u671f\u7ed3\u679c\u662f\u5426\u88ab\u5305\u542b\u5728\u9884\u671f\u7ed3\u679c\u4e2d contained_by def contained_by( check_value , expect_value ): \u5b9e\u9645\u7ed3\u679c\u662f\u5426\u88ab\u5305\u542b\u5728\u9884\u671f\u7ed3\u679c\u4e2d type_match def type_match( check_value , expect_value ): \u7c7b\u578b\u662f\u5426\u5339\u914d regex_match def regex_match( check_value , expect_value ): \u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u5426\u5339\u914d startswith def startswith( check_value , expect_value ): \u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u4ec0\u4e48\u5f00\u5934 endswith def endswith( check_value , expect_value ): \u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u4ec0\u4e48\u7ed3\u5c3e 2\uff09\u65ad\u8a00\u5185\u5bb9- check_value status_code\uff1a\u54cd\u5e94\u72b6\u6001\u7801 encoding\uff1a\u5b57\u7b26\u96c6 ok\uff1a\u662f\u5426OK reason\uff1a url\uff1a\u8bf7\u6c42\u5730\u5740 headers\uff1a\u8bf7\u6c42\u5934 headers.content-type cookies\uff1acookie\u4fe1\u606f content\uff1a\u54cd\u5e94\u4f53 content.person.name.first_name text\uff1a\u54cd\u5e94\u4f53\u6587\u672c\u683c\u5f0f json\uff1a\u54cd\u5e94\u4f53json\u683c\u5f0f \u516b\u3001\u63d0\u53d6\u6570\u636e extract config: name: \"demo testcase\" variables: device_sn: \"ABC\" # username: ${ENV(USERNAME)} # password: ${ENV(PASSWORD)} base_url: ${ENV(BASE_URL)} teststeps: - name: $title api: api\\login.yml variables: user_agent: 'iOS/10.3' device_sn: $device_sn # \u63d0\u53d6\u7528\u4f8b\u6267\u884c\u7684\u7ed3\u679c\uff0c\u5e76\u7ed9\u8d4b\u503c\u7ed9token extract: - token: content.token validate: - eq: [\"status_code\", $status_code] - contains: [\"content\", $msg] \u4e5d\u3001\u6574\u4e2aHttpRunner\u9879\u76ee\u76ee\u5f55\u6587\u4ef6\u89e3\u6790 1\uff09api\\login.yml # \u7528\u4f8b\u7684\u540d\u79f0 name: login api # \u5c40\u90e8\u53d8\u91cf variables: username: desire password: 123456 # base url \u6307\u5b9a\u7528\u6cd5 base_url: ${ENV(BASE_URL)} # \u8bf7\u6c42\u6570\u636e request: # \u8bf7\u6c42url\uff0c\u5982\u679c\u6709base_url\u4f1a\u81ea\u52a8\u8fdb\u884c\u62fc\u63a5url url: /user/login/ # \u8bf7\u6c42\u65b9\u5f0f method: POST # \u8bf7\u6c42\u5934\u4fe1\u606f headers: Content-Type: \"application/json\" # \u8bf7\u6c42\u53c2\u6570\uff08data/json/params\uff09 json: username: $username password: $password # \u65ad\u8a00\u4fe1\u606f validate: - eq: [\"status_code\", 200] 2\uff09api\\projects.yml name: projects api variables: page: 1 size: 3 base_url: ${ENV(BASE_URL)} request: url: /projects/ method: GET headers: Content-Type: \"application/json\" params: page: $page size: $size headers: # \u6b64\u63a5\u53e3\u9700\u8981token\u9274\u6743\uff0c\u8981\u6dfb\u52a0\u6b64\u8bf7\u6c42\u5934\uff0c\u5e76\u4e14token\u662f\u4ece\u767b\u9646\u63a5\u53e3\u4e2d\u83b7\u53d6\u7684 Authorization: \"JWT $token\" validate: - eq: [\"status_code\", 200] 3\uff09testcases\\login_testcase.yml config: name: \"demo testcase\" # \u5c40\u90e8\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u5728\u6574\u4e2atestcases\u4e2d variables: device_sn: \"ABC\" title: \u767b\u5f55\u7528\u4f8b status_code: 200 msg: token base_url: ${ENV(BASE_URL)} teststeps: - name: $title api: api\\login.yml # \u5b9a\u4e49\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u5728\u672cstep\u4e0b variables: user_agent: 'iOS/10.3' device_sn: $device_sn validate: - eq: [\"status_code\", $status_code] - contains: [\"content\", $msg] 4\uff09testcases\\projects_testcase.yml # \u7528\u4f8b\u96c6\u914d\u7f6e\u4fe1\u606f config: # \u7528\u4f8b\u96c6\u540d\u79f0 name: \"demo testcase\" # \u5c40\u90e8\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b\u96c6\uff08yml\uff09 variables: title: \u83b7\u53d6\u9879\u76ee\u5217\u8868 status_code: 200 # url \u4f7f\u7528\u5168\u5c40\u914d\u7f6e\u6587\u4ef6\u53d8\u91cf\uff08.env\uff09 base_url: ${ENV(BASE_URL)} # \u6d4b\u8bd5\u6b65\u9aa4 teststeps: # \u7528\u4f8b\u4e00 - # \u7528\u4f8b\u540d\u79f0 name: \u6b63\u5e38\u767b\u5f55 # \u7528\u4f8b\u63a5\u53e3\u6240\u5728yml\u6587\u4ef6 or \u7528\u4f8b\u63a5\u53e3 api: api\\login.yml # \u63d0\u53d6\u8fd4\u56de\u503c extract: # \u63d0\u53d6\u8fd4\u56de\u503c\uff0c\u4e2d\u7684token\u503c\uff0c\u7136\u540e\u8d4b\u503c\u7ed9\u53d8\u91cftoken # token\u7684\u4f5c\u7528\u57df\u662f\u5728\u6574\u4e2atestcases\uff0c\u7528\u4f8b\u4e8c\u4e2d\u7684projects.yml\u662f\u53ef\u4ee5\u83b7\u53d6\u5230\u7684 - token: content.token # \u65ad\u8a00 validate: - eq: [\"status_code\", 200] # \u7528\u4f8b\u4e8c - name: $title # \u7528\u4f8b\u63a5\u53e3\uff0c api: api\\projects.yml validate: - eq: [\"status_code\", $status_code] 5\uff09testsuites\\testsuite.yml config: # \u5957\u4ef6\u540d\u79f0 name: \"\u63a5\u53e3\u5957\u4ef6\" # \u5957\u4ef6\u5168\u5c40\u53d8\u91cf\u5b9a\u4e49 # \u5982\u679c\u5728\u6d4b\u8bd5\u96c6\u6216\u8005\u63a5\u53e3\u7528\u4f8b\u4e2d\uff0c\u8ddf\u8fd9\u91cc\u7684\u53d8\u91cf\u6709\u4e00\u6837\u7684\uff0c\u8fd9\u91cc\u7684\u4f18\u5148\u7ea7\u6700\u9ad8\uff0c\u5176\u6b21\u662f\u6d4b\u8bd5\u96c6\u4e2d\uff0c\u6700\u540e\u662f\u63a5\u53e3\u7528\u4f8b variables: device_sn: \"XYZ\" # \u8fd9\u91cc\u7684base_url\u4f18\u5148\u7ea7\u6700\u9ad8 base_url: \"http://127.0.0.1:5000\" testcases: - name: \u767b\u5f55\u63a5\u53e3\u5957\u4ef6-$title # \u6d4b\u8bd5\u7528\u4f8b\u96c6 testcase: testcases\\login_testcase.yml # \u8fdb\u884c\u53c2\u6570\u5316\uff0c\u8fd9\u91cc\u7684\u53d8\u91cf\u4f18\u5148\u7ea7\u6700\u9ad8\uff0c\u4f5c\u7528\u57df\u53ea\u5728\u5f53\u524d\u7684\u7528\u4f8b\u96c6\u4e2d parameters: # \u53c2\u6570\u5316\u4f7f\u7528\u89c4\u5219\uff1a\u53d8\u91cf\u4e4b\u95f4\u7528-\u62fc\u63a5\uff0c\u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u8fdb\u884c\u53c2\u6570\u5316\uff0c\u89c1\uff1adebugtalk.py\u6587\u4ef6\u4e2d\u7684get_accounts\u65b9\u6cd5 - title-username-password-status_code-msg: ${get_accounts()} - name: \u9879\u76ee\u63a5\u53e3\u5957\u4ef6-$title testcase: testcases\\projects_testcase.yml parameters: # \u53c2\u6570\u5316\u4f7f\u7528\u89c4\u5219\uff1a\u53d8\u91cf\u4e4b\u95f4\u7528-\u62fc\u63a5\uff0c\u7136\u540e\u6bcf\u4e00\u4e2a\u7528\u4f8b\u6570\u636e\u5c31\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u4e2d\u7684\u5143\u7d20\u8ddf\u5b9a\u4e49\u7684\u53d8\u91cf\u4e00\u4e00\u5bf9\u5e94 - title-page-size-status_code: - [\"\u83b7\u53d6\u9879\u76ee\u5217\u8868\u6570\u636e\uff0c\u6bcf\u98752\u6761\uff0c\u7b2c\u4e00\u9875\", \"1\", \"2\", 200] - [\"\u83b7\u53d6\u9879\u76ee\u5217\u8868\u6570\u636e\uff0c\u6bcf\u98753\u6761\uff0c\u7b2c2\u9875\", \"2\", \"3\", 200] - [\"\u83b7\u53d6\u9879\u76ee\u5217\u8868\u6570\u636e\uff0c\u4e0d\u6307\u5b9a\u6bcf\u9875\u6570\u91cf\uff0c\u7b2c\u4e00\u9875\", \"1\", \"\", 200] - [\"\u83b7\u53d6\u9879\u76ee\u5217\u8868\u6570\u636e\uff0c\u6bcf\u98752\u6761\uff0c\uff0c\u4e0d\u6307\u5b9a\u9875\u6570\", \"\", \"2\", 404] 6\uff09debugtalk.py # \u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u521b\u5efa\u5e26\u53c2\u6570\u7684\u51fd\u6570 def get_accounts(): # \u5b9a\u4e49\u53c2\u6570\u5316\u7528\u4f8b\u6570\u636e\uff08\u5d4c\u5957\u5b57\u5178\u7684\u5217\u8868\uff09\uff0c\u6bcf\u4e00\u4e2a\u7528\u4f8b\u4e3a\u4e00\u4e2a\u5b57\u5178\uff0c\u6ca1\u4e2a\u5b57\u5178\u7684key\u5bf9\u5e94\u5230\u8bbe\u7f6e\u7684\u53c2\u6570\u5316 accounts = [ {\"title\": \"\u6b63\u5e38\u767b\u5f55\", \"username\": \"desire\", \"password\": \"123456\", \"status_code\": 200, \"msg\": \"token\"}, {\"title\": \"\u5bc6\u7801\u9519\u8bef\", \"username\": \"desire\", \"password\": \"123457\", \"status_code\": 400, \"msg\": \"non_field_errors\"}, {\"title\": \"\u8d26\u53f7\u9519\u8bef\", \"username\": \"desire111\", \"password\": \"123456\", \"status_code\": 400, \"msg\": \"non_field_errors\"}, {\"title\": \"\u7528\u6237\u540d\u4e3a\u7a7a\", \"username\": \"\", \"password\": \"123456\", \"status_code\": 400, \"msg\": \"username\"}, {\"title\": \"\u5bc6\u7801\u4e3a\u7a7a\", \"username\": \"desire\", \"password\": \"\", \"status_code\": 400, \"msg\": \"password\"}, ] # \u628a\u53c2\u6570\u5316\u6570\u636e\u8fd4\u56de return accounts 7\uff09.env # \u73af\u5883\u53d8\u91cf\u540d\uff0c\u4e00\u822c\u662f\u4ee5\u5927\u5199\u5b9a\u4e49\uff0c=\u540e\u9762\u662f\u53d8\u91cf\u503c\uff08\u56fa\u5b9a\u5199\u6cd5\uff09 BASE_URL=http://127.0.0.1:8000/ 7\uff09run.py from httprunner.api import HttpRunner hr = HttpRunner() # \u4f7f\u7528HttpRunner\u63d0\u4f9b\u7684run\u65b9\u6cd5\u8fdb\u884c\u6267\u884c\u7528\u4f8b # \u6307\u5b9a\u6267\u884c\u5355\u4e2a\u7528\u4f8b # hr.run(r\"api\\login.yml\") # \u6307\u5b9a\u6267\u884c\u6d4b\u8bd5\u96c6\uff08\u76f8\u540c\u53d8\u91cf\uff0c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u53d8\u91cf\u4f18\u5148\u7ea7\u6700\u9ad8\uff09 # hr.run(r\"testcases\\projects_testcase.yml\") # \u6307\u5b9a\u6267\u884c\u6d4b\u8bd5\u5957\u4ef6\uff08\u76f8\u540c\u53d8\u91cf\uff0c\u6d4b\u8bd5\u5957\u4ef6\u4e2d\u7684\u53d8\u91cf\u4f18\u5148\u7ea7\u6700\u9ad8\uff09 hr.run(r\"testsuites\\testsuite.yml\") # \u901a\u8fc7HttpRunner\u63d0\u4f9b\u7684summary\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u5230\u6267\u884c\u7684\u7ed3\u679c\u4fe1\u606f print(hr.summary)","title":"HTTPRunner2.x"},{"location":"HTTPRunner/HTTPRunner2.x/#httprunner","text":"","title":"HTTPRunner"},{"location":"HTTPRunner/HTTPRunner2.x/#_1","text":"2.x\u7248\u672c\u96c6\u6210\u4e86 3.x\u7248\u672c\u96c6\u6210\u4e86pytest","title":"\u4e00\u3001\u7b80\u4ecb"},{"location":"HTTPRunner/HTTPRunner2.x/#_2","text":"pip install httprunner==2.3.0","title":"\u4e8c\u3001\u5b89\u88c5"},{"location":"HTTPRunner/HTTPRunner2.x/#httprunner_1","text":"hrun --startproject ./hrdemo","title":"\u4e09\u3001\u521b\u5efahttprunner\u5de5\u7a0b"},{"location":"HTTPRunner/HTTPRunner2.x/#_3","text":"|-hrdemo |--api\uff1a\u4e3b\u8981\u5b58\u653e\u63a5\u53e3\u7684\u6700\u5c0f\u6267\u884c\u5355\u4f4d\uff08\u6b63\u5411\u7528\u4f8b\uff09 |--reports\uff1a\u7528\u4e8e\u5b58\u653e\u6d4b\u8bd5\u62a5\u544a |--testcases\uff1a\u7528\u4e8e\u5904\u7406\u63a5\u53e3\u7684\u8d1f\u8d23\u6267\u884c\u903b\u8f91\uff0c\u5b9e\u73b0\u63a5\u53e3\u95f4\u7684\u4f9d\u8d56 |--testsuites\uff1a\u7528\u4e8e\u6dfb\u52a0\u591a\u6761\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6279\u91cf\u6267\u884c\uff0c\u5904\u7406\u6570\u636e\u9a71\u52a8\u6d4b\u8bd5\uff08\u53c2\u6570\u5316\uff09 |--.env\uff1a\u7528\u4e8e\u81ea\u5b9a\u4e49\u5168\u5c40\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u5728\u6574\u4e2a\u9879\u76ee\u7684\u6d4b\u8bd5\u811a\u672c\u4e2d\u8c03\u7528 |--.gitignore |--debugtalk.py\uff1a\u7528\u4e8e\u5904\u7406\u52a8\u6001\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u5904\u7406\u53c2\u6570\u5316\u52a8\u6001\u6570\u636e","title":"\u56db\u3001\u76ee\u5f55\u7ed3\u6784"},{"location":"HTTPRunner/HTTPRunner2.x/#_4","text":"","title":"\u4e94\u3001\u7b80\u5355\u4f7f\u7528"},{"location":"HTTPRunner/HTTPRunner2.x/#1yml","text":"name: get demo request: method: GET url: https://httpbin.org/get validate: - eq: [\"status_code\",200]","title":"1\uff09yml\u7528\u4f8b"},{"location":"HTTPRunner/HTTPRunner2.x/#2yml","text":"hrun api/get_demo.yml --report-dir reports OR httprunner api/get_demo.yml --report-dir reports","title":"2\uff09\u8fd0\u884cyml\u7528\u4f8b"},{"location":"HTTPRunner/HTTPRunner2.x/#_5","text":"","title":"\u516d\u3001\u7279\u6b8a\u7528\u6cd5"},{"location":"HTTPRunner/HTTPRunner2.x/#1","text":"\u5728yml\u6587\u4ef6\u4e2d\uff0c\u5728variables\u8282\u70b9\u4e0b\u5b9a\u4e49\u7684\u53c2\u6570\u4e3a\u5c40\u90e8\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u53ea\u5728\u5f53\u524dyml\u4e0b name: get params variables: value1: value1 value2: value2 \u4f7f\u7528\uff1a \u56fa\u5b9a\u8bed\u6cd5\uff1a $\u53d8\u91cf\u540d name: get params variables: value1: value1 value2: value2 request: method: GET url: 'https://httpbin.org/get' params: value1: $value1 value2: $value2 validate: - eq: ['status_code', 200]","title":"1\uff09\u5c40\u90e8\u53d8\u91cf"},{"location":"HTTPRunner/HTTPRunner2.x/#2base_url","text":"\u5728yml\u6587\u4ef6\u4e2d\uff0c\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u8282\u70b9base_url(\u540d\u5b57\u4e3a\u56fa\u5b9a\u5199\u6cd5) base_url: 'https://httpbin.org'","title":"2\uff09base_url"},{"location":"HTTPRunner/HTTPRunner2.x/#3env","text":"\u5728 .env \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u4e3a\u73af\u5883\u53d8\u91cf USERNAME=leolee PASSWORD=123456 BASE_URL=https://httpbin.org \u4f7f\u7528\uff1a \u56fa\u5b9a\u8bed\u6cd5\uff1a ${ENV(\u5b9a\u4e49\u7684\u73af\u5883\u53d8\u91cf\u540d)} name: get params variables: value1: value1 value2: value2 base_url: ${ENV(BASE_URL)} request: method: GET url: /get params: value1: $value1 value2: $value2 validate: - eq: ['status_code', 200]","title":"3\uff09\u73af\u5883\u53d8\u91cf.env\u6587\u4ef6"},{"location":"HTTPRunner/HTTPRunner2.x/#4-debugtalkpy","text":"\u5728 debugtalk.py \u4e2d\u5b9a\u4e49\u51fd\u6570 import random def get_agent(): agents = [\"Mozilla/5.0 Desire\", \"Mozilla/5.0 Tommy\", \"Mozilla/5.0 Ronin\", \"Mozilla/5.0 DD\"] return random.choice(agents) \u4f7f\u7528\uff1a \u56fa\u5b9a\u8bed\u6cd5\uff1a ${\u51fd\u6570\u8c03\u7528} name: get params variables: value1: value1 value2: value2 base_url: ${ENV(BASE_URL)} request: method: GET url: /get params: value1: $value1 value2: $value2 headers: User-Agent: ${get_agent()} validate: - eq: ['status_code', 200]","title":"4\uff09\u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570-debugtalk.py"},{"location":"HTTPRunner/HTTPRunner2.x/#5setup_hooks-or-teardown_hookshooktestsuite","text":"name: login api variables: username: desire password: 123456 n_secs: 1 base_url: ${ENV(BASE_URL)} request: url: /user/login/ method: POST headers: Content-Type: \"application/json\" json: username: $username password: $password # \u524d\u7f6e\u6761\u4ef6 setup_hooks: # \u8c03\u7528\u81ea\u5b9a\u4e49\u7684\u524d\u7f6e\u51fd\u6570\uff0c\u4fee\u6539\u8bf7\u6c42\u4fe1\u606fheaders\u4e2d\u7684User-Agent\u4e3aDesire - ${setup_hook_add_kwargs($request)} # \u540e\u7f6e\u6761\u4ef6 teardown_hooks: # \u8c03\u7528\u81ea\u5b9a\u4e49\u7684\u540e\u7f6e\u51fd\u6570\uff0c\u5982\u679c\u54cd\u5e94\u6210\u529f\u5219\u4f11\u77205\u79d2\uff0c\u54cd\u5e94\u975e200\u5219\u4f11\u7720n_secs - ${teardown_hook_sleep_N_secs($response, $n_secs)} validate: - eq: [\"status_code\", 200] debugtalk.py\u81ea\u5b9a\u4e49\u51fd\u6570 import time def setup_hook_add_kwargs(request): request[\"headers\"][\"User-Agent\"] = \"Desire\" def teardown_hook_sleep_N_secs(response, n_secs): \"\"\" sleep n seconds after request \"\"\" if response.status_code == 200: time.sleep(5) else: time.sleep(n_secs)","title":"5\uff09\u524d\u7f6e\uff08setup_hooks\uff09 OR \u540e\u7f6e\uff08teardown_hooks\uff09hook(\u4e0d\u53ef\u7528\u4e8etestsuite\u4e2d)"},{"location":"HTTPRunner/HTTPRunner2.x/#validate","text":"","title":"\u4e03\u3001\u65ad\u8a00 validate"},{"location":"HTTPRunner/HTTPRunner2.x/#1_1","text":"\u65ad\u8a00\u65b9\u6cd5 \u6e90\u7801\uff08httprunner/built_in.py\uff09 \u8bf4\u660e eq def equals( check_value , expect_value ): \u662f\u5426\u76f8\u7b49 lt def less_than( check_value , expect_value ): \u5c0f\u4e8e le def less_than_or_equals( check_value , expect_value ): \u5c0f\u4e8e\u7b49\u4e8e gt def greater_than( check_value , expect_value ): \u5927\u4e8e ge def greater_than_or_equals( check_value , expect_value ): \u5927\u4e8e\u7b49\u4e8e ne def not_equals( check_value , expect_value ): \u4e0d\u7b49\u4e8e str_eq def string_equals( check_value , expect_value ): \u5b57\u7b26\u4e32\u7b49\u4e8e len_eq def length_equals( check_value , expect_value ): \u957f\u5ea6\u7b49\u4e8e len_gt def length_greater_than( check_value , expect_value ): \u957f\u5ea6\u5927\u4e8e len_ge def length_greater_than_or_equals( check_value , expect_value ): \u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e len_lt def length_less_than( check_value , expect_value ): \u957f\u5ea6\u5c0f\u4e8e len_le def length_less_than_or_equals( check_value , expect_value ): \u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e contains def contains( check_value , expect_value ): \u9884\u671f\u7ed3\u679c\u662f\u5426\u88ab\u5305\u542b\u5728\u9884\u671f\u7ed3\u679c\u4e2d contained_by def contained_by( check_value , expect_value ): \u5b9e\u9645\u7ed3\u679c\u662f\u5426\u88ab\u5305\u542b\u5728\u9884\u671f\u7ed3\u679c\u4e2d type_match def type_match( check_value , expect_value ): \u7c7b\u578b\u662f\u5426\u5339\u914d regex_match def regex_match( check_value , expect_value ): \u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u5426\u5339\u914d startswith def startswith( check_value , expect_value ): \u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u4ec0\u4e48\u5f00\u5934 endswith def endswith( check_value , expect_value ): \u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u4ec0\u4e48\u7ed3\u5c3e","title":"1\uff09\u65ad\u8a00\u65b9\u5f0f"},{"location":"HTTPRunner/HTTPRunner2.x/#2-check_value","text":"status_code\uff1a\u54cd\u5e94\u72b6\u6001\u7801 encoding\uff1a\u5b57\u7b26\u96c6 ok\uff1a\u662f\u5426OK reason\uff1a url\uff1a\u8bf7\u6c42\u5730\u5740 headers\uff1a\u8bf7\u6c42\u5934 headers.content-type cookies\uff1acookie\u4fe1\u606f content\uff1a\u54cd\u5e94\u4f53 content.person.name.first_name text\uff1a\u54cd\u5e94\u4f53\u6587\u672c\u683c\u5f0f json\uff1a\u54cd\u5e94\u4f53json\u683c\u5f0f","title":"2\uff09\u65ad\u8a00\u5185\u5bb9-check_value"},{"location":"HTTPRunner/HTTPRunner2.x/#extract","text":"config: name: \"demo testcase\" variables: device_sn: \"ABC\" # username: ${ENV(USERNAME)} # password: ${ENV(PASSWORD)} base_url: ${ENV(BASE_URL)} teststeps: - name: $title api: api\\login.yml variables: user_agent: 'iOS/10.3' device_sn: $device_sn # \u63d0\u53d6\u7528\u4f8b\u6267\u884c\u7684\u7ed3\u679c\uff0c\u5e76\u7ed9\u8d4b\u503c\u7ed9token extract: - token: content.token validate: - eq: [\"status_code\", $status_code] - contains: [\"content\", $msg]","title":"\u516b\u3001\u63d0\u53d6\u6570\u636e extract"},{"location":"HTTPRunner/HTTPRunner2.x/#httprunner_2","text":"","title":"\u4e5d\u3001\u6574\u4e2aHttpRunner\u9879\u76ee\u76ee\u5f55\u6587\u4ef6\u89e3\u6790"},{"location":"HTTPRunner/HTTPRunner2.x/#1apiloginyml","text":"# \u7528\u4f8b\u7684\u540d\u79f0 name: login api # \u5c40\u90e8\u53d8\u91cf variables: username: desire password: 123456 # base url \u6307\u5b9a\u7528\u6cd5 base_url: ${ENV(BASE_URL)} # \u8bf7\u6c42\u6570\u636e request: # \u8bf7\u6c42url\uff0c\u5982\u679c\u6709base_url\u4f1a\u81ea\u52a8\u8fdb\u884c\u62fc\u63a5url url: /user/login/ # \u8bf7\u6c42\u65b9\u5f0f method: POST # \u8bf7\u6c42\u5934\u4fe1\u606f headers: Content-Type: \"application/json\" # \u8bf7\u6c42\u53c2\u6570\uff08data/json/params\uff09 json: username: $username password: $password # \u65ad\u8a00\u4fe1\u606f validate: - eq: [\"status_code\", 200]","title":"1\uff09api\\login.yml"},{"location":"HTTPRunner/HTTPRunner2.x/#2apiprojectsyml","text":"name: projects api variables: page: 1 size: 3 base_url: ${ENV(BASE_URL)} request: url: /projects/ method: GET headers: Content-Type: \"application/json\" params: page: $page size: $size headers: # \u6b64\u63a5\u53e3\u9700\u8981token\u9274\u6743\uff0c\u8981\u6dfb\u52a0\u6b64\u8bf7\u6c42\u5934\uff0c\u5e76\u4e14token\u662f\u4ece\u767b\u9646\u63a5\u53e3\u4e2d\u83b7\u53d6\u7684 Authorization: \"JWT $token\" validate: - eq: [\"status_code\", 200]","title":"2\uff09api\\projects.yml"},{"location":"HTTPRunner/HTTPRunner2.x/#3testcaseslogin_testcaseyml","text":"config: name: \"demo testcase\" # \u5c40\u90e8\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u5728\u6574\u4e2atestcases\u4e2d variables: device_sn: \"ABC\" title: \u767b\u5f55\u7528\u4f8b status_code: 200 msg: token base_url: ${ENV(BASE_URL)} teststeps: - name: $title api: api\\login.yml # \u5b9a\u4e49\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u5728\u672cstep\u4e0b variables: user_agent: 'iOS/10.3' device_sn: $device_sn validate: - eq: [\"status_code\", $status_code] - contains: [\"content\", $msg]","title":"3\uff09testcases\\login_testcase.yml"},{"location":"HTTPRunner/HTTPRunner2.x/#4testcasesprojects_testcaseyml","text":"# \u7528\u4f8b\u96c6\u914d\u7f6e\u4fe1\u606f config: # \u7528\u4f8b\u96c6\u540d\u79f0 name: \"demo testcase\" # \u5c40\u90e8\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b\u96c6\uff08yml\uff09 variables: title: \u83b7\u53d6\u9879\u76ee\u5217\u8868 status_code: 200 # url \u4f7f\u7528\u5168\u5c40\u914d\u7f6e\u6587\u4ef6\u53d8\u91cf\uff08.env\uff09 base_url: ${ENV(BASE_URL)} # \u6d4b\u8bd5\u6b65\u9aa4 teststeps: # \u7528\u4f8b\u4e00 - # \u7528\u4f8b\u540d\u79f0 name: \u6b63\u5e38\u767b\u5f55 # \u7528\u4f8b\u63a5\u53e3\u6240\u5728yml\u6587\u4ef6 or \u7528\u4f8b\u63a5\u53e3 api: api\\login.yml # \u63d0\u53d6\u8fd4\u56de\u503c extract: # \u63d0\u53d6\u8fd4\u56de\u503c\uff0c\u4e2d\u7684token\u503c\uff0c\u7136\u540e\u8d4b\u503c\u7ed9\u53d8\u91cftoken # token\u7684\u4f5c\u7528\u57df\u662f\u5728\u6574\u4e2atestcases\uff0c\u7528\u4f8b\u4e8c\u4e2d\u7684projects.yml\u662f\u53ef\u4ee5\u83b7\u53d6\u5230\u7684 - token: content.token # \u65ad\u8a00 validate: - eq: [\"status_code\", 200] # \u7528\u4f8b\u4e8c - name: $title # \u7528\u4f8b\u63a5\u53e3\uff0c api: api\\projects.yml validate: - eq: [\"status_code\", $status_code]","title":"4\uff09testcases\\projects_testcase.yml"},{"location":"HTTPRunner/HTTPRunner2.x/#5testsuitestestsuiteyml","text":"config: # \u5957\u4ef6\u540d\u79f0 name: \"\u63a5\u53e3\u5957\u4ef6\" # \u5957\u4ef6\u5168\u5c40\u53d8\u91cf\u5b9a\u4e49 # \u5982\u679c\u5728\u6d4b\u8bd5\u96c6\u6216\u8005\u63a5\u53e3\u7528\u4f8b\u4e2d\uff0c\u8ddf\u8fd9\u91cc\u7684\u53d8\u91cf\u6709\u4e00\u6837\u7684\uff0c\u8fd9\u91cc\u7684\u4f18\u5148\u7ea7\u6700\u9ad8\uff0c\u5176\u6b21\u662f\u6d4b\u8bd5\u96c6\u4e2d\uff0c\u6700\u540e\u662f\u63a5\u53e3\u7528\u4f8b variables: device_sn: \"XYZ\" # \u8fd9\u91cc\u7684base_url\u4f18\u5148\u7ea7\u6700\u9ad8 base_url: \"http://127.0.0.1:5000\" testcases: - name: \u767b\u5f55\u63a5\u53e3\u5957\u4ef6-$title # \u6d4b\u8bd5\u7528\u4f8b\u96c6 testcase: testcases\\login_testcase.yml # \u8fdb\u884c\u53c2\u6570\u5316\uff0c\u8fd9\u91cc\u7684\u53d8\u91cf\u4f18\u5148\u7ea7\u6700\u9ad8\uff0c\u4f5c\u7528\u57df\u53ea\u5728\u5f53\u524d\u7684\u7528\u4f8b\u96c6\u4e2d parameters: # \u53c2\u6570\u5316\u4f7f\u7528\u89c4\u5219\uff1a\u53d8\u91cf\u4e4b\u95f4\u7528-\u62fc\u63a5\uff0c\u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u8fdb\u884c\u53c2\u6570\u5316\uff0c\u89c1\uff1adebugtalk.py\u6587\u4ef6\u4e2d\u7684get_accounts\u65b9\u6cd5 - title-username-password-status_code-msg: ${get_accounts()} - name: \u9879\u76ee\u63a5\u53e3\u5957\u4ef6-$title testcase: testcases\\projects_testcase.yml parameters: # \u53c2\u6570\u5316\u4f7f\u7528\u89c4\u5219\uff1a\u53d8\u91cf\u4e4b\u95f4\u7528-\u62fc\u63a5\uff0c\u7136\u540e\u6bcf\u4e00\u4e2a\u7528\u4f8b\u6570\u636e\u5c31\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u4e2d\u7684\u5143\u7d20\u8ddf\u5b9a\u4e49\u7684\u53d8\u91cf\u4e00\u4e00\u5bf9\u5e94 - title-page-size-status_code: - [\"\u83b7\u53d6\u9879\u76ee\u5217\u8868\u6570\u636e\uff0c\u6bcf\u98752\u6761\uff0c\u7b2c\u4e00\u9875\", \"1\", \"2\", 200] - [\"\u83b7\u53d6\u9879\u76ee\u5217\u8868\u6570\u636e\uff0c\u6bcf\u98753\u6761\uff0c\u7b2c2\u9875\", \"2\", \"3\", 200] - [\"\u83b7\u53d6\u9879\u76ee\u5217\u8868\u6570\u636e\uff0c\u4e0d\u6307\u5b9a\u6bcf\u9875\u6570\u91cf\uff0c\u7b2c\u4e00\u9875\", \"1\", \"\", 200] - [\"\u83b7\u53d6\u9879\u76ee\u5217\u8868\u6570\u636e\uff0c\u6bcf\u98752\u6761\uff0c\uff0c\u4e0d\u6307\u5b9a\u9875\u6570\", \"\", \"2\", 404]","title":"5\uff09testsuites\\testsuite.yml"},{"location":"HTTPRunner/HTTPRunner2.x/#6debugtalkpy","text":"# \u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u521b\u5efa\u5e26\u53c2\u6570\u7684\u51fd\u6570 def get_accounts(): # \u5b9a\u4e49\u53c2\u6570\u5316\u7528\u4f8b\u6570\u636e\uff08\u5d4c\u5957\u5b57\u5178\u7684\u5217\u8868\uff09\uff0c\u6bcf\u4e00\u4e2a\u7528\u4f8b\u4e3a\u4e00\u4e2a\u5b57\u5178\uff0c\u6ca1\u4e2a\u5b57\u5178\u7684key\u5bf9\u5e94\u5230\u8bbe\u7f6e\u7684\u53c2\u6570\u5316 accounts = [ {\"title\": \"\u6b63\u5e38\u767b\u5f55\", \"username\": \"desire\", \"password\": \"123456\", \"status_code\": 200, \"msg\": \"token\"}, {\"title\": \"\u5bc6\u7801\u9519\u8bef\", \"username\": \"desire\", \"password\": \"123457\", \"status_code\": 400, \"msg\": \"non_field_errors\"}, {\"title\": \"\u8d26\u53f7\u9519\u8bef\", \"username\": \"desire111\", \"password\": \"123456\", \"status_code\": 400, \"msg\": \"non_field_errors\"}, {\"title\": \"\u7528\u6237\u540d\u4e3a\u7a7a\", \"username\": \"\", \"password\": \"123456\", \"status_code\": 400, \"msg\": \"username\"}, {\"title\": \"\u5bc6\u7801\u4e3a\u7a7a\", \"username\": \"desire\", \"password\": \"\", \"status_code\": 400, \"msg\": \"password\"}, ] # \u628a\u53c2\u6570\u5316\u6570\u636e\u8fd4\u56de return accounts","title":"6\uff09debugtalk.py"},{"location":"HTTPRunner/HTTPRunner2.x/#7env","text":"# \u73af\u5883\u53d8\u91cf\u540d\uff0c\u4e00\u822c\u662f\u4ee5\u5927\u5199\u5b9a\u4e49\uff0c=\u540e\u9762\u662f\u53d8\u91cf\u503c\uff08\u56fa\u5b9a\u5199\u6cd5\uff09 BASE_URL=http://127.0.0.1:8000/","title":"7\uff09.env"},{"location":"HTTPRunner/HTTPRunner2.x/#7runpy","text":"from httprunner.api import HttpRunner hr = HttpRunner() # \u4f7f\u7528HttpRunner\u63d0\u4f9b\u7684run\u65b9\u6cd5\u8fdb\u884c\u6267\u884c\u7528\u4f8b # \u6307\u5b9a\u6267\u884c\u5355\u4e2a\u7528\u4f8b # hr.run(r\"api\\login.yml\") # \u6307\u5b9a\u6267\u884c\u6d4b\u8bd5\u96c6\uff08\u76f8\u540c\u53d8\u91cf\uff0c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u53d8\u91cf\u4f18\u5148\u7ea7\u6700\u9ad8\uff09 # hr.run(r\"testcases\\projects_testcase.yml\") # \u6307\u5b9a\u6267\u884c\u6d4b\u8bd5\u5957\u4ef6\uff08\u76f8\u540c\u53d8\u91cf\uff0c\u6d4b\u8bd5\u5957\u4ef6\u4e2d\u7684\u53d8\u91cf\u4f18\u5148\u7ea7\u6700\u9ad8\uff09 hr.run(r\"testsuites\\testsuite.yml\") # \u901a\u8fc7HttpRunner\u63d0\u4f9b\u7684summary\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u5230\u6267\u884c\u7684\u7ed3\u679c\u4fe1\u606f print(hr.summary)","title":"7\uff09run.py"},{"location":"ORM/001SQLAlchemy/","text":"SQLAlchemy ORM\u6846\u67b6 \u4e00\u3001\u5b89\u88c5 pip install sqlalchemy==1.4.7 pip install pymysql # \u8fde\u63a5mysql\u6570\u636e\u5e93\u6240\u9700\u5e93 \u4e8c\u3001\u8fde\u63a5\u6570\u636e\u5e93 from sqlalchemy import create_engine engine = create_engine(f\"mysql+pymysql://{\u6570\u636e\u5e93\u8d26\u53f7}:{\u5bc6\u7801}@{\u6570\u636e\u5e93\u5730\u5740}:3306/{\u6570\u636e\u5e93}\", echo=True) print(engine) ------\u6253\u5370\u7ed3\u679c------ Engine(mysql+pymysql://root:***@127.0.0.1:3306/scrapy) \u4e09\u3001\u521b\u5efa\u4f1a\u8bdd\u901a\u9053 from sqlalchemy.orm import sessionmaker maker = sessionmaker(bind=engine) session = maker() print(session) ------\u6253\u5370\u7ed3\u679c---------------- <sqlalchemy.orm.session.Session object at 0x03BB4400> \u56db\u3001\u5173\u95ed\u4f1a\u8bdd\u901a\u9053 session.close_all() \u4e94\u3001\u521b\u5efa\u6570\u636e\u8868\u6a21\u578b \u521b\u5efamodels\u6a21\u5757\uff0c\u5b58\u653e\u6a21\u578b\u5bf9\u8c61 \u521b\u5efa\u8868\u7684\u6a21\u578b\u5bf9\u8c61\uff0c\u8981\u7ee7\u627f declarative_base \u5bf9\u8c61 __tablename__ \uff1a\u6570\u636e\u5e93\u4e2d\u8868\u7684\u540d\u79f0 \u5b57\u6bb5\u8981\u4e0e\u6570\u636e\u5e93\u4e2d\u5b57\u6bb5\u5bf9\u5e94","title":"SQLAlchemy ORM\u6846\u67b6"},{"location":"ORM/001SQLAlchemy/#sqlalchemy-orm","text":"","title":"SQLAlchemy ORM\u6846\u67b6"},{"location":"ORM/001SQLAlchemy/#_1","text":"pip install sqlalchemy==1.4.7 pip install pymysql # \u8fde\u63a5mysql\u6570\u636e\u5e93\u6240\u9700\u5e93","title":"\u4e00\u3001\u5b89\u88c5"},{"location":"ORM/001SQLAlchemy/#_2","text":"from sqlalchemy import create_engine engine = create_engine(f\"mysql+pymysql://{\u6570\u636e\u5e93\u8d26\u53f7}:{\u5bc6\u7801}@{\u6570\u636e\u5e93\u5730\u5740}:3306/{\u6570\u636e\u5e93}\", echo=True) print(engine) ------\u6253\u5370\u7ed3\u679c------ Engine(mysql+pymysql://root:***@127.0.0.1:3306/scrapy)","title":"\u4e8c\u3001\u8fde\u63a5\u6570\u636e\u5e93"},{"location":"ORM/001SQLAlchemy/#_3","text":"from sqlalchemy.orm import sessionmaker maker = sessionmaker(bind=engine) session = maker() print(session) ------\u6253\u5370\u7ed3\u679c---------------- <sqlalchemy.orm.session.Session object at 0x03BB4400>","title":"\u4e09\u3001\u521b\u5efa\u4f1a\u8bdd\u901a\u9053"},{"location":"ORM/001SQLAlchemy/#_4","text":"session.close_all()","title":"\u56db\u3001\u5173\u95ed\u4f1a\u8bdd\u901a\u9053"},{"location":"ORM/001SQLAlchemy/#_5","text":"\u521b\u5efamodels\u6a21\u5757\uff0c\u5b58\u653e\u6a21\u578b\u5bf9\u8c61 \u521b\u5efa\u8868\u7684\u6a21\u578b\u5bf9\u8c61\uff0c\u8981\u7ee7\u627f declarative_base \u5bf9\u8c61 __tablename__ \uff1a\u6570\u636e\u5e93\u4e2d\u8868\u7684\u540d\u79f0 \u5b57\u6bb5\u8981\u4e0e\u6570\u636e\u5e93\u4e2d\u5b57\u6bb5\u5bf9\u5e94","title":"\u4e94\u3001\u521b\u5efa\u6570\u636e\u8868\u6a21\u578b"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/","text":"docker\u7b14\u8bb0 \u5b89\u88c5Docker(CentOS 8) 1\u3001\u5b89\u88c5yum-utils\u547d\u4ee4\u5305\uff08yum-config-manager\u547d\u4ee4\u9700\u8981\uff09 sudo yum -y install yum-utils 2\u3001\u6dfb\u52a0\u8f6f\u4ef6\u6e90\u4fe1\u606f(\u56fd\u5185\u6e90, \u901f\u5ea6\u66f4\u5feb, \u63a8\u8350) sudo yum-config-manager \\ --add-repo \\ https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo 3\u3001\u66f4\u65b0Docker-CE yum makecache fast(\u53ef\u80fd\u4f1a\u62a5\u9519\uff0c\u62a5\u9519\u7684\u8bdd\uff0c\u7528\u4e0b\u9762\u7684) yum makecache (CentOS8\u6ca1\u6709fast\u53c2\u6570\uff0c\u53ef\u4ee5\u53bb\u6389) 4\u3001\u5b89\u88c5Docker Engine yum install docker-ce docker-ce-cli containerd.io 5\u3001\u5f00\u542fdocker systemctl enable docker(\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f\u52a8) systemctl start docker 6\u3001\u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f docker run hello-world \u5982\u679c\u51fa\u73b0\u201cHello from Docker!\u201d\uff0c\u5219\u4ee3\u8868\u8fd0\u884c\u6210\u529f 7\u3001docker \u7248\u672c\u4fe1\u606f docker version \u5b89\u88c5mysql 1\u3001\u67e5\u770bmysql-docker\u955c\u50cf docker search mysql 2\u3001pull mysql\u955c\u50cf docker pull mysql 3\u3001\u8fd0\u884c\u5bb9\u5668 1\uff09\u521b\u5efa\u6620\u5c04\u6587\u4ef6 mkdir -p /home/docker/mysql/conf.d mkdir -p /home/docker/mysql/data 2\uff09\u8fd0\u884c\u5bb9\u5668\uff0c\u6dfb\u52a0\u6620\u5c04 docker run -di -p 3306:3306 -v /home/docker/mysql/conf.d:/etc/mysql/conf.d -v /home/docker/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql mysql -v \u6620\u5c04\u76ee\u5f55\uff0c\u5c06\u5bb9\u5668\u5185\u7684\u914d\u7f6e\u4e0e\u6570\u636e\u6587\u4ef6\u5939\uff0c\u6620\u5c04\u5230\u5bbf\u4e3b\u673a\u76ee\u5f55 -p \u4ee3\u8868\u7aef\u53e3\u6620\u5c04\uff0c\u683c\u5f0f\u4e3a \u5bbf\u4e3b\u673a\u6620\u5c04\u7aef\u53e3:\u5bb9\u5668\u8fd0\u884c\u7aef\u53e3 -e \u4ee3\u8868\u6dfb\u52a0\u73af\u5883\u53d8\u91cf MYSQL_ROOT_PASSWORD\u662froot\u7528\u6237\u7684\u767b\u9646\u5bc6\u7801 docker \u4e00\u3001docker\u57fa\u672c\u64cd\u4f5c 1\u3001docker image(\u955c\u50cf) \u5217\u51fa\u955c\u50cf # \u5217\u51fa\u6240\u6709\u955c\u50cf docker images # \u4ec5\u5217\u51fa\u955c\u50cf\u7684ID docker images -q \u641c\u7d22\u955c\u50cf docker search mysql \u4e0b\u8f7d\u955c\u50cf docker pull nginx \u5220\u9664\u955c\u50cf docker rmi ImageID \u67e5\u770b\u955c\u50cf\u8be6\u7ec6\u4fe1\u606f docker inspect jenkins 2\u3001docker container(\u5bb9\u5668) \u8fd0\u884c\u5bb9\u5668 docker run image docker run centos # \u542f\u52a8\u5bb9\u5668\u5e76\u6253\u5f00\u5bb9\u5668bash\u7ec8\u7aef docker run -it centos /bin/bash docker run --name web -d -p 8080:80 -v $PWD:/usr/share/nginx/html nginx \u53c2\u6570\uff1a-i -t --name -d -p -P -v --net docker exec -it mysql /bin/bash -i \u5df2\u4ea4\u4e92\u6a21\u5f0f\u8fd0\u884c\u5bb9\u5668\uff0c\u901a\u5e38\u4e0e-t\u540c\u65f6\u4f7f\u7528 -t \u4e3a\u5bb9\u5668\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u4f2a\u8f93\u5165\u7ec8\u7aef\uff0c\u901a\u5e38\u4e0e-i\u540c\u65f6\u4f7f\u7528 --name \u4e3a\u5bb9\u5668\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0 -d \u540e\u53f0\u8fd0\u884c\u5bb9\u5668\uff0c\u5e76\u8fd4\u56de\u5bb9\u5668ID -p \u4ee3\u8868\u7aef\u53e3\u6620\u5c04\uff0c\u683c\u5f0f\u4e3a \u5bbf\u4e3b\u673a\u6620\u5c04\u7aef\u53e3:\u5bb9\u5668\u8fd0\u884c\u7aef\u53e3 -P \u968f\u673a\u7aef\u53e3\u6620\u5c04\uff0c\u5bb9\u5668\u5185\u90e8\u7aef\u53e3\u968f\u673a\u6620\u5c04\u5230\u4e3b\u673a\u7684\u7aef\u53e3 -v \u6620\u5c04\u76ee\u5f55\uff0c\u5c06\u5bb9\u5668\u5185\u7684\u914d\u7f6e\u4e0e\u6570\u636e\u6587\u4ef6\u5939\uff0c\u6620\u5c04\u5230\u5bbf\u4e3b\u673a\u76ee\u5f55 -e \u4ee3\u8868\u6dfb\u52a0\u73af\u5883\u53d8\u91cf --net\u6307\u5b9a\u5bb9\u5668\u7684\u7f51\u7edc\u8fde\u63a5\u7c7b\u578b\uff0c\u652f\u6301bridge/host/none/container\u56db\u79cd\u7c7b\u578b --volume \u7ed1\u5b9a\u4e00\u4e2a\u5377 -h \u6307\u5b9a\u5bb9\u5668\u7684hostname \u5217\u51fa\u5bb9\u5668 # \u5217\u51fa\u5f53\u524d\u8fd0\u884c\u7684\u5bb9\u5668 docker ps # \u5217\u51fa\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u5bb9\u5668 docker ps -a # \u5217\u51fa\u5bb9\u5668\u4e0a\u8fd0\u884c\u7684\u6240\u6709\u5386\u53f2\u547d\u4ee4 sudo docker history centos \u67e5\u770b\u5bb9\u5668\u7684\u8fdb\u7a0b\u548c\u8d44\u6e90\u5229\u7528\u60c5\u51b5 # \u67e5\u770b\u5bb9\u5668\u7684\u8fdb\u7a0b docker top ContainerID # \u67e5\u770b\u5bb9\u5668\u7684\u8d44\u6e90\u5229\u7528\u60c5\u51b5 docker stats ContainerID \u505c\u6b62/\u5f00\u542f\u5bb9\u5668 # \u505c\u6b62\u5bb9\u5668 docker stop ContainerID # \u5f00\u542f\u5bb9\u5668 docker restart ContainerID \u6682\u505c/\u542f\u52a8\u5bb9\u5668 # \u6682\u505c\u5bb9\u5668 docker pause web # \u542f\u52a8\u5bb9\u5668 docker unpause web \u5220\u9664\u5bb9\u5668 # \u5220\u9664\u4e00\u4e2a\u672a\u8fd0\u884c\u7684\u5bb9\u5668 docker rm web # \u5220\u9664\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668 docker rm -f web \u4e8c\u3001docker\u7f51\u7edc 1\u3001docker0 \u9ed8\u8ba4\u5bb9\u5668\u4e0e\u5bbf\u4e3b\u673a\u4e4b\u95f4\u7684\u6865\u6881 2\u3001\u7f51\u7edc\u7c7b\u578b bridge nat\u7f51\u7edc\u6a21\u578b \u865a\u62df\u4ea4\u6362\u673a host \u4e0e\u5bbf\u4e3b\u673a\u5171\u4eab\u7f51\u7edc --net=host none \u4e0d\u914d\u7f6e\u7f51\u7edc --net=none overlay \u4e0d\u540c\u7f51\u7edc\u8fdb\u884c\u901a\u4fe1 \u4e0e\u4e00\u4e2a\u5bb9\u5668\u5171\u4eab\u7f51\u7edc --net=container:ContainerName 3\u3001\u76f8\u5173\u64cd\u4f5c 1\uff09\u67e5\u770b docker network ls docker network inspect networkname 2\uff09\u521b\u5efa docker network create --driver drivername name docker network create -d bridge --subnet 172.16.100.0/24 one_network \u4e09\u3001volume \u6570\u636e\u5377 1\u3001\u4ecb\u7ecd \u4f7f\u7528\u6570\u636e\u5377\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316 \u6570\u636e\u5907\u4efd/\u6570\u636e\u5171\u4eab 2\u3001\u76f8\u5173\u64cd\u4f5c 1\uff09\u521b\u5efa # \u624b\u52a8\u521b\u5efa docker volume create nginx11 # \u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u81ea\u52a8\u521b\u5efa docker run --name nginx33 -d -v nginx22:/usr/share/nginx/html -p 8888:80 nginx:alpine 2\uff09\u67e5\u770b # \u5217\u51fa\u6240\u6709\u7684volume\u5377 docker volume ls # \u67e5\u8be2\u6307\u5b9a\u7684volume\u5377\u7684\u8be6\u7ec6\u4fe1\u606f docker volume inspect nginx22 3\uff09\u6302\u8f7d docker run -v \u5bbf\u4e3b\u673a\u76ee\u5f55:\u5bb9\u5668\u76ee\u5f55 docker run --name nginx33 -d -v nginx22:/usr/share/nginx/html -p 8888:80 nginx:alpine 4\uff09\u5220\u9664 docker volume rm nginx11 \u56db\u3001Dockerfile \u53ef\u4ee5\u4f7f\u7528#\u53f7\u6307\u5b9a\u6ce8\u91ca\u4fe1\u606f \u6587\u4ef6\u540d\u4e00\u822c\u4e3aDockerfile \u53ef\u4ee5\u4f7f\u7528Dockerfile\u6587\u4ef6\u6765\u81ea\u5b9a\u4e49\u955c\u50cf \u6307\u5b9abase image\uff0c\u57fa\u672c\u955c\u50cf FROM\u4e00\u822c\u4e3a\u7b2c\u4e00\u884c\uff0cFROM\u57fa\u672c\u955c\u50cf\u540d\u79f0:tag\u7248\u672c\u7f16\u53f7 \u5982\u679c\u672c\u5730\u6ca1\u6709\uff0c\u4f1a\u81ea\u52a8\u4ecedocker hub \u8fdc\u7a0b\u4ed3\u5e93\u4e0b\u8f7d\uff0c\u5426\u5219\u76f4\u63a5\u4f7f\u7528\u672c\u5730\u4ed3\u5e93\u63d0\u4f9b\u7684 1\u3001FROM FROM\u4e00\u822c\u4e3a\u7b2c\u4e00\u884c\uff0cFROM\u57fa\u672c\u955c\u50cf\u540d\u79f0:tag\u7248\u672c\u7f16\u53f7 FROM python:alpine 2\u3001LABEL \u4f7f\u7528LABEL\u6307\u5b9a\u955c\u50cf\u7684\u5143\u6570\u636e\u4fe1\u606f\uff08\u63d0\u793a\u8bf4\u660e\u4f5c\u7528\uff09 LABEL key=value \u5982\u679cvalue\u4e2d\u6709\u7a7a\u683c\uff0c\u9700\u8981\u4f7f\u7528\u5f15\u53f7\u62ec\u8d77\u6765\u6216\u8005\u4f7f\u7528\\\u8fdb\u884c\u8f6c\u4e49 3\u3001COPY \u7528\u4e8e\u5c06\u5bbf\u4e3b\u673a\u4e2d\u7684\u8d44\u6e90\u590d\u5236\u7c98\u8d34\u81f3\u5bb9\u5668\u4e2d COPY \u5bbf\u4e3b\u673a\u8def\u5f84 \u5bb9\u5668\u4e2d\u7684\u8def\u5f84 \u5982\u679c\u5bb9\u5668\u4e2d\u6307\u5b9a\u7684\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa \u5982\u679c\u5c06\u4e00\u4e2a\u6587\u4ef6\u590d\u5236\u5230\u5bb9\u5668\u4e2d\uff0c\u6307\u5b9a\u7684\u5bb9\u5668\u8def\u5f84\uff0c\u5efa\u8bae\u6dfb\u52a0/ COPY . /app 4\u3001ADD ADD\u4e0eCOPY\u7c7b\u4f3c\uff0c\u7528\u4e8e\u5c06\u5bbf\u4e3b\u673a\u4e2d\u7684\u8d44\u6e90\u590d\u5236\u5230\u5bb9\u5668\u4e2d ADD \u53ef\u4ee5\u5c06\u8fdc\u7a0b\u6587\u4ef6\u4e0b\u8f7d\u4e4b\u540e\uff0c\u590d\u5236\u5230\u5bb9\u5668\u4e2d\uff1aADD \u8fdc\u7a0b\u6587\u4ef6\u94fe\u63a5 \u5bb9\u5668\u76ee\u5f55 \u4e5f\u53ef\u4ee5\u5c06\u672c\u5730\u7684\u538b\u7f29\u6587\u4ef6\u89e3\u538b\u4e4b\u540e\uff0c\u590d\u5236\u5230\u5bb9\u5668\u4e2d\uff1aADD \u672c\u5730\u538b\u7f29\u6587\u4ef6 \u5bb9\u5668\u76ee\u5f55 ADD https://github.com/docker-library/python/raw/master/update.sh . 5\u3001WORKDIR \u76f8\u5f53\u4e8ecd\u547d\u4ee4\uff0c\u7528\u4e8e\u5bb9\u5668\u8fdb\u5165\u5230\u67d0\u4e2a\u76ee\u5f55\u4e2d \u5982\u679c\u6307\u5b9a\u7684\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa WORKDIR /app 6\u3001RUN \u7528\u4e8e\u5728\u5bb9\u5668\u4e2d\u6267\u884clinux\u547d\u4ee4 \u6bcf\u4e00\u4e2aRUN\u6307\u4ee4\u4f1a\u72ec\u81ea\u5360\u4e00\u5c42 \u4e3a\u4e86\u4f18\u5316\u955c\u50cf\u7684\u5927\u5c0f\uff0c\u5982\u679c\u6709\u591a\u6761\u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2aRUN\u6307\u4ee4\uff0c\u591a\u6761\u547d\u4ee4\u4e4b\u95f4&&\u6216\u8005;\u4f7f\u7528\\\u8fdb\u884c\u6362\u884c RUN pip install -r requirements.txt 7\u3001ENV ENV username=Desire\\ password=123456 8\u3001VOLUME \u6307\u5b9a\u5bb9\u5668\u4e2d\u54ea\u4e9b\u76ee\u5f55\u53ef\u4ee5\u4e0e\u5bbf\u4e3b\u673a\u8fdb\u884c\u5171\u4eab LABEL maintaier=\"Desire <desireyang.qq.com>\" LABEL description=\"define Dockerfile Demo\" 9\u3001EXPOSE \u6307\u5b9a\u5bb9\u5668\u4e2d\u53ef\u4ee5\u66b4\u9732\u7684\u7aef\u53e3 EXPOSE 8000 10\u3001CMD \u6307\u5b9a\u5bb9\u5668\u8fd0\u884c\uff08docker run \uff09\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u6267\u884c\u7684\u547d\u4ee4 \u5982\u679c\u5728\u8fd0\u884c\u5bb9\u5668\u65f6\uff0c\u6307\u5b9a\u4e86\u5176\u4ed6\u547d\u4ee4\uff0c\u90a3\u4e48CMD\u547d\u4ee4\u4f1a\u88ab\u8986\u76d6 \u5982\u679c\u6709\u591a\u4e2aCMD\u547d\u4ee4\uff0c\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u4f1a\u88ab\u6267\u884c \u6709\u4e24\u79cd\u683c\u5f0f\uff0cshell\u683c\u5f0f\u3001exec\u683c\u5f0f exec\u683c\u5f0f(\u5e38\u7528)\uff1a[\"\u547d\u4ee4\u7684\u7edd\u5bf9\u8def\u5f84\",\"\u53c2\u65701\",\"\u53c2\u65702\"] shell\u683c\u5f0f\uff1a\u547d\u4ee4\u7684\u7edd\u5bf9\u8def\u5f84 \u53c2\u65701 \u53c2\u65702 CMD [\"python\", \"fun.py\"] # CMD [\"/bin/ls\",\"/\",\"/etc\"] # CMD python fun.py 11\u3001ENTRYPOINT \u4e0eCMD\u7c7b\u4f3c\uff0c\u5f53\u8fd0\u884c\u5bb9\u5668\u65f6\uff0c\u5982\u679c\u6307\u5b9a\u4e86\u5176\u4ed6\u547d\u4ee4\uff0c\u90a3\u4e48ENTRYPOINT\u4e0d\u4f1a\u88ab\u8986\u76d6 \u5982\u679c\u6709\u591a\u4e2aENTRYPOINT\uff0c\u90a3\u4e48\u53ea\u6709\u6700\u540e\u4e00\u4e2aENTRYPOINT\u4f1a\u88ab\u6267\u884c \u53ef\u4ee5\u4e0eCMD\u4e00\u8d77\u7528\uff0c\u653e\u5728ENTRYPOINT\u540e\u9762\uff0c\u4f5c\u4e3aENTRYPOINT\u9ed8\u8ba4\u53c2\u6570 ENTRYPOINT [\"python\", \"fun.py\"] ENTRYPOINT [\"cat\", \"fun.py\"] CMD [\"etc/passwd\"] # \u53ef\u4ee5\u6307\u5b9ashell\u811a\u672c ENTRYPOINT [\"/bin/sh\",\"docker-entrypoint.sh\"] 12\u3001ARG \u6784\u5efa\u53c2\u6570 \u548cENV\u7684\u6548\u679c\u4e00\u6837\uff0c\u90fd\u662f\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf ARG\u6240\u8bbe\u7f6e\u7684\u6784\u5efa\u73af\u5883\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5728\u5c06\u6765\u5bb9\u5668\u8fd0\u884c\u65f6\u662f\u4e0d\u4f1a\u5b58\u5728\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u7684 \u4e0d\u8981\u56e0\u6b64\u4f7f\u7528ARG\u4fdd\u5b58\u5bc6\u7801\u4e4b\u7c7b\u7684\u4fe1\u606f\uff0c docker history \u662f\u53ef\u4ee5\u770b\u5230\u6240\u6709\u503c\u7684 \u5b9a\u4e49\u7684\u503c\u53ef\u4ee5\u5728 docker build \u4e2d\u7528 --build-arg <\u53c2\u6570\u540d>=<\u503c> \u8fdb\u884c\u8986\u76d6 \u751f\u6548\u8303\u56f4 \u5982\u679c\u662f\u5728 FROM \u6307\u4ee4\u4e4b\u524d\u6307\u5b9a\uff0c\u90a3\u4e48\u53ea\u80fd\u7528\u4e8e FROM \u6307\u4ee4\u4e2d # \u53ea\u5728 FROM \u4e2d\u751f\u6548 ARG DOCKER_USERNAME=library FROM ${DOCKER_USERNAME}/alpine # \u8981\u60f3\u5728 FROM \u4e4b\u540e\u4f7f\u7528\uff0c\u5fc5\u987b\u518d\u6b21\u6307\u5b9a ARG DOCKER_USERNAME=library RUN set -x ; echo ${DOCKER_USERNAME} 13\u3001USER \u6307\u5b9a\u5f53\u524d\u7528\u6237 USER\u53ea\u662f\u5e2e\u52a9\u5207\u6362\u5230\u6307\u5b9a\u7528\u6237\uff0c\u5e76\u4e0d\u4f1a\u521b\u5efa\u7528\u6237 USER root \u901a\u8fc7Dockerfile\u6587\u4ef6\u6784\u5efa\u955c\u50cf docker build -t \u955c\u50cf\u540d:tag -f \u6307\u5b9aDockerfile\u6587\u4ef6\u8def\u5f84 . -t \u6307\u5b9a\u6784\u5efa\u7684\u955c\u50cf\u540d\u79f0\u548ctag\uff0c\u5982\u679c\u4e0d\u6307\u5b9atag\uff0c\u9ed8\u8ba4\u4f7f\u7528latest\uff0c\u955c\u50cf\u540d\u4e00\u822c\u4e3a\u7528\u6237\u540d/\u955c\u50cf\u540d\u79f0 -f \u6307\u5b9aDockerfile\u6587\u4ef6\u8def\u5f84\uff0c\u5982\u679c\u547d\u540d\u4e3aDockerfile\uff0c\u4e14\u5728\u5f53\u524d\u8def\u5f84\u4e0b\uff0c\u90a3\u4e48\u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a\uff0c\u5426\u5219\u5fc5\u987b\u6307\u5b9a . \u4ee3\u8868\u5c06\u5f53\u524d\u8def\u5f84\u4f5c\u4e3a\u6784\u5efa\u4e0a\u4e0b\u6587 Dockerfile\u6587\u4ef6 FROM python:alpine LABEL maintaier=\"Desire <desireyang.qq.com>\" LABEL description=\"define Dockerfile Demo\" COPY . /app # ADD https://github.com/docker-library/python/raw/master/update.sh . WORKDIR /app RUN pip install -r requirements.txt ENV username=Desire\\ password=123456 VOLUME /app # EXPOSE 8000 CMD [\"python\", \"fun.py\"] # CMD [\"/bin/ls\",\"/\",\"/etc\"] # CMD python fun.py # ENTRYPOINT [\"python\", \"fun.py\"] # ENTRYPOINT [\"cat\", \"fun.py\"] # CMD [\"etc/passwd\"] # \u53ef\u4ee5\u6307\u5b9ashell\u811a\u672c # ENTRYPOINT [\"/bin/sh\",\"docker-entrypoint.sh\"] \u4e94\u3001docker-compose 1\u3001\u5b89\u88c5 # \u8fd0\u884c\u6b64\u547d\u4ee4\u4e0b\u8f7d\u5f53\u524d\u7684 Docker Compose \u7a33\u5b9a\u7248\u672c sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose # \u5bf9\u4e8c\u8fdb\u5236\u6587\u4ef6\u5e94\u7528\u53ef\u6267\u884c\u6743\u9650 sudo chmod +x /usr/local/bin/docker-compose # \u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f docker-compose --version 2\u3001\u4f7f\u7528docker-compose\u90e8\u7f72\u5e94\u7528 # \u6307\u5b9a\u7248\u672c\u4fe1\u606f version: '3' # \u5b9a\u4e49\u670d\u52a1\uff08\u5bb9\u5668\uff09 services: # \u521b\u5efa\u5177\u4f53\u7684\u670d\u52a1\uff08\u5bb9\u5668\uff09 db: # \u6307\u5b9a\u9700\u8981\u4f7f\u7528\u7684\u955c\u50cf\u540d\u79f0 # \u955c\u50cf\u540d:tag # \u5982\u679c\u672c\u5730\u6ca1\u6709\u6307\u5b9a\u955c\u50cf\uff0c\u90a3\u4e48\u4f1a\u4ecedocker hub\u4e2d\u4e0b\u8f7d\uff0c\u5426\u5219\u76f4\u63a5\u4f7f\u7528\u672c\u5730\u7684\u955c\u50cf image: mariadb # \u5728\u8fd0\u884c\u5bb9\u5668\u65f6\uff0c\u6307\u5b9a\u9700\u8981\u6267\u884c\u7684\u547d\u4ee4\u6216\u8005\u53c2\u6570 command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci # \u6307\u5b9a\u6570\u636e\u6301\u4e45\u5316\u6620\u5c04 volumes: # - \u6570\u636e\u5377\u540d\u79f0\u6216\u8005\u5bbf\u4e3b\u673a\u6587\u4ef6\u3001\u8def\u5f84:\u5bb9\u5668\u4e2d\u7684\u8def\u5f84 - mysql_db:/var/lib/mysql # \u6307\u5b9a\u5bb9\u5668\u5931\u8d25\u65f6\uff08Existed\uff09\uff0c\u91cd\u542f\u7b56\u7565 restart: always # \u6307\u5b9a\u5bb9\u5668\u4e2d\u7684\u5168\u5c40\u53d8\u91cf environment: # \u53d8\u91cf\u540d: \u53d8\u91cf\u503c MYSQL_ROOT_PASSWORD: \"123456\" MYSQL_DATABASE: my_django # \u6307\u5b9a\u5f53\u524d\u5bb9\u5668\u9700\u8981\u52a0\u5165\u7684\u7f51\u7edc networks: - django_app_net django_app: # \u6307\u5b9a\u5f53\u524d\u670d\u52a1\uff08\u5bb9\u5668\uff09\u4f9d\u8d56\u7684\u670d\u52a1 depends_on: - db # \u6307\u5b9a\u901a\u8fc7Dockerfile\u53bb\u6784\u5efa\u955c\u50cf\uff08Dockerfile\u6240\u5728\u8def\u5f84\uff09 build: ./django # \u5728build\u4e0b\u65b9\uff0c\u6307\u5b9a\u6784\u5efa\u7684\u955c\u50cf\u540d\u79f0:tag image: desireyang/django_app:v2 restart: always volumes: - logs:/usr/src/app/logs/ - django_code:/usr/src/app/web_test/ networks: - django_app_net web: depends_on: - django_app build: ./nginx image: desireyang/web:v2 restart: always # \u5c06\u5bb9\u5668\u4e2d\u76d1\u542c\u7684\u7aef\u53e3\u4e0e\u5bbf\u4e3b\u673a\u7aef\u53e3\u955c\u50cf\u6620\u5c04 ports: - \"8444:80\" - \"8440:8000\" volumes: - logs:/var/log/nginx/ networks: - django_app_net # \u6307\u5b9a\u9700\u8981\u4f7f\u7528\u7684\u7f51\u7edc networks: # \u6307\u5b9a\u7f51\u7edc\u7684\u540d\u79f0\uff0c\u9ed8\u8ba4\u4f1a\u521b\u5efabridge\u6865\u63a5\u7f51\u7edc django_app_net: # \u6307\u5b9a\u6570\u636e\u5377 volumes: mysql_db: django_code: logs: 3\u3001\u68c0\u67e5\u662f\u5426\u6709\u9519\u8bef docker-compose config 4\u3001\u53ea\u6784\u5efa\u4e0d\u8fd0\u884c docker-compose build 5\u3001\u8fd0\u884c docker-compose up -d # \u5982\u679cdocker-compose\u6587\u4ef6\u540d\u4e0d\u662fdocker-compose.yml\uff0c\u9700\u8981\u52a0\u4e0a-f\u6307\u5b9a\u6587\u4ef6 docker-compose up -d -f docker-compose-django.yml","title":"docker\u7b14\u8bb0"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#docker","text":"","title":"docker\u7b14\u8bb0"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#dockercentos-8","text":"","title":"\u5b89\u88c5Docker(CentOS 8)"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#1yum-utilsyum-config-manager","text":"sudo yum -y install yum-utils","title":"1\u3001\u5b89\u88c5yum-utils\u547d\u4ee4\u5305\uff08yum-config-manager\u547d\u4ee4\u9700\u8981\uff09"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#2","text":"sudo yum-config-manager \\ --add-repo \\ https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo","title":"2\u3001\u6dfb\u52a0\u8f6f\u4ef6\u6e90\u4fe1\u606f(\u56fd\u5185\u6e90, \u901f\u5ea6\u66f4\u5feb, \u63a8\u8350)"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#3docker-ce","text":"yum makecache fast(\u53ef\u80fd\u4f1a\u62a5\u9519\uff0c\u62a5\u9519\u7684\u8bdd\uff0c\u7528\u4e0b\u9762\u7684) yum makecache (CentOS8\u6ca1\u6709fast\u53c2\u6570\uff0c\u53ef\u4ee5\u53bb\u6389)","title":"3\u3001\u66f4\u65b0Docker-CE"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#4docker-engine","text":"yum install docker-ce docker-ce-cli containerd.io","title":"4\u3001\u5b89\u88c5Docker Engine"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#5docker","text":"systemctl enable docker(\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f\u52a8) systemctl start docker","title":"5\u3001\u5f00\u542fdocker"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#6","text":"docker run hello-world \u5982\u679c\u51fa\u73b0\u201cHello from Docker!\u201d\uff0c\u5219\u4ee3\u8868\u8fd0\u884c\u6210\u529f","title":"6\u3001\u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#7docker","text":"docker version","title":"7\u3001docker \u7248\u672c\u4fe1\u606f"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#mysql","text":"","title":"\u5b89\u88c5mysql"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#1mysql-docker","text":"docker search mysql","title":"1\u3001\u67e5\u770bmysql-docker\u955c\u50cf"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#2pull-mysql","text":"docker pull mysql","title":"2\u3001pull mysql\u955c\u50cf"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#3","text":"","title":"3\u3001\u8fd0\u884c\u5bb9\u5668"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#1","text":"mkdir -p /home/docker/mysql/conf.d mkdir -p /home/docker/mysql/data","title":"1\uff09\u521b\u5efa\u6620\u5c04\u6587\u4ef6"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#2_1","text":"docker run -di -p 3306:3306 -v /home/docker/mysql/conf.d:/etc/mysql/conf.d -v /home/docker/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql mysql -v \u6620\u5c04\u76ee\u5f55\uff0c\u5c06\u5bb9\u5668\u5185\u7684\u914d\u7f6e\u4e0e\u6570\u636e\u6587\u4ef6\u5939\uff0c\u6620\u5c04\u5230\u5bbf\u4e3b\u673a\u76ee\u5f55 -p \u4ee3\u8868\u7aef\u53e3\u6620\u5c04\uff0c\u683c\u5f0f\u4e3a \u5bbf\u4e3b\u673a\u6620\u5c04\u7aef\u53e3:\u5bb9\u5668\u8fd0\u884c\u7aef\u53e3 -e \u4ee3\u8868\u6dfb\u52a0\u73af\u5883\u53d8\u91cf MYSQL_ROOT_PASSWORD\u662froot\u7528\u6237\u7684\u767b\u9646\u5bc6\u7801","title":"2\uff09\u8fd0\u884c\u5bb9\u5668\uff0c\u6dfb\u52a0\u6620\u5c04"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#docker_1","text":"","title":"docker"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#docker_2","text":"","title":"\u4e00\u3001docker\u57fa\u672c\u64cd\u4f5c"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#1docker-image","text":"\u5217\u51fa\u955c\u50cf # \u5217\u51fa\u6240\u6709\u955c\u50cf docker images # \u4ec5\u5217\u51fa\u955c\u50cf\u7684ID docker images -q \u641c\u7d22\u955c\u50cf docker search mysql \u4e0b\u8f7d\u955c\u50cf docker pull nginx \u5220\u9664\u955c\u50cf docker rmi ImageID \u67e5\u770b\u955c\u50cf\u8be6\u7ec6\u4fe1\u606f docker inspect jenkins","title":"1\u3001docker image(\u955c\u50cf)"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#2docker-container","text":"\u8fd0\u884c\u5bb9\u5668 docker run image docker run centos # \u542f\u52a8\u5bb9\u5668\u5e76\u6253\u5f00\u5bb9\u5668bash\u7ec8\u7aef docker run -it centos /bin/bash docker run --name web -d -p 8080:80 -v $PWD:/usr/share/nginx/html nginx \u53c2\u6570\uff1a-i -t --name -d -p -P -v --net docker exec -it mysql /bin/bash -i \u5df2\u4ea4\u4e92\u6a21\u5f0f\u8fd0\u884c\u5bb9\u5668\uff0c\u901a\u5e38\u4e0e-t\u540c\u65f6\u4f7f\u7528 -t \u4e3a\u5bb9\u5668\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u4f2a\u8f93\u5165\u7ec8\u7aef\uff0c\u901a\u5e38\u4e0e-i\u540c\u65f6\u4f7f\u7528 --name \u4e3a\u5bb9\u5668\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0 -d \u540e\u53f0\u8fd0\u884c\u5bb9\u5668\uff0c\u5e76\u8fd4\u56de\u5bb9\u5668ID -p \u4ee3\u8868\u7aef\u53e3\u6620\u5c04\uff0c\u683c\u5f0f\u4e3a \u5bbf\u4e3b\u673a\u6620\u5c04\u7aef\u53e3:\u5bb9\u5668\u8fd0\u884c\u7aef\u53e3 -P \u968f\u673a\u7aef\u53e3\u6620\u5c04\uff0c\u5bb9\u5668\u5185\u90e8\u7aef\u53e3\u968f\u673a\u6620\u5c04\u5230\u4e3b\u673a\u7684\u7aef\u53e3 -v \u6620\u5c04\u76ee\u5f55\uff0c\u5c06\u5bb9\u5668\u5185\u7684\u914d\u7f6e\u4e0e\u6570\u636e\u6587\u4ef6\u5939\uff0c\u6620\u5c04\u5230\u5bbf\u4e3b\u673a\u76ee\u5f55 -e \u4ee3\u8868\u6dfb\u52a0\u73af\u5883\u53d8\u91cf --net\u6307\u5b9a\u5bb9\u5668\u7684\u7f51\u7edc\u8fde\u63a5\u7c7b\u578b\uff0c\u652f\u6301bridge/host/none/container\u56db\u79cd\u7c7b\u578b --volume \u7ed1\u5b9a\u4e00\u4e2a\u5377 -h \u6307\u5b9a\u5bb9\u5668\u7684hostname \u5217\u51fa\u5bb9\u5668 # \u5217\u51fa\u5f53\u524d\u8fd0\u884c\u7684\u5bb9\u5668 docker ps # \u5217\u51fa\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u5bb9\u5668 docker ps -a # \u5217\u51fa\u5bb9\u5668\u4e0a\u8fd0\u884c\u7684\u6240\u6709\u5386\u53f2\u547d\u4ee4 sudo docker history centos \u67e5\u770b\u5bb9\u5668\u7684\u8fdb\u7a0b\u548c\u8d44\u6e90\u5229\u7528\u60c5\u51b5 # \u67e5\u770b\u5bb9\u5668\u7684\u8fdb\u7a0b docker top ContainerID # \u67e5\u770b\u5bb9\u5668\u7684\u8d44\u6e90\u5229\u7528\u60c5\u51b5 docker stats ContainerID \u505c\u6b62/\u5f00\u542f\u5bb9\u5668 # \u505c\u6b62\u5bb9\u5668 docker stop ContainerID # \u5f00\u542f\u5bb9\u5668 docker restart ContainerID \u6682\u505c/\u542f\u52a8\u5bb9\u5668 # \u6682\u505c\u5bb9\u5668 docker pause web # \u542f\u52a8\u5bb9\u5668 docker unpause web \u5220\u9664\u5bb9\u5668 # \u5220\u9664\u4e00\u4e2a\u672a\u8fd0\u884c\u7684\u5bb9\u5668 docker rm web # \u5220\u9664\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668 docker rm -f web","title":"2\u3001docker container(\u5bb9\u5668)"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#docker_3","text":"","title":"\u4e8c\u3001docker\u7f51\u7edc"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#1docker0","text":"\u9ed8\u8ba4\u5bb9\u5668\u4e0e\u5bbf\u4e3b\u673a\u4e4b\u95f4\u7684\u6865\u6881","title":"1\u3001docker0"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#2_2","text":"bridge nat\u7f51\u7edc\u6a21\u578b \u865a\u62df\u4ea4\u6362\u673a host \u4e0e\u5bbf\u4e3b\u673a\u5171\u4eab\u7f51\u7edc --net=host none \u4e0d\u914d\u7f6e\u7f51\u7edc --net=none overlay \u4e0d\u540c\u7f51\u7edc\u8fdb\u884c\u901a\u4fe1 \u4e0e\u4e00\u4e2a\u5bb9\u5668\u5171\u4eab\u7f51\u7edc --net=container:ContainerName","title":"2\u3001\u7f51\u7edc\u7c7b\u578b"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#3_1","text":"","title":"3\u3001\u76f8\u5173\u64cd\u4f5c"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#1_1","text":"docker network ls docker network inspect networkname","title":"1\uff09\u67e5\u770b"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#2_3","text":"docker network create --driver drivername name docker network create -d bridge --subnet 172.16.100.0/24 one_network","title":"2\uff09\u521b\u5efa"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#volume","text":"","title":"\u4e09\u3001volume \u6570\u636e\u5377"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#1_2","text":"\u4f7f\u7528\u6570\u636e\u5377\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316 \u6570\u636e\u5907\u4efd/\u6570\u636e\u5171\u4eab","title":"1\u3001\u4ecb\u7ecd"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#2_4","text":"","title":"2\u3001\u76f8\u5173\u64cd\u4f5c"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#1_3","text":"# \u624b\u52a8\u521b\u5efa docker volume create nginx11 # \u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u81ea\u52a8\u521b\u5efa docker run --name nginx33 -d -v nginx22:/usr/share/nginx/html -p 8888:80 nginx:alpine","title":"1\uff09\u521b\u5efa"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#2_5","text":"# \u5217\u51fa\u6240\u6709\u7684volume\u5377 docker volume ls # \u67e5\u8be2\u6307\u5b9a\u7684volume\u5377\u7684\u8be6\u7ec6\u4fe1\u606f docker volume inspect nginx22","title":"2\uff09\u67e5\u770b"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#3_2","text":"docker run -v \u5bbf\u4e3b\u673a\u76ee\u5f55:\u5bb9\u5668\u76ee\u5f55 docker run --name nginx33 -d -v nginx22:/usr/share/nginx/html -p 8888:80 nginx:alpine","title":"3\uff09\u6302\u8f7d"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#4","text":"docker volume rm nginx11","title":"4\uff09\u5220\u9664"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#dockerfile","text":"\u53ef\u4ee5\u4f7f\u7528#\u53f7\u6307\u5b9a\u6ce8\u91ca\u4fe1\u606f \u6587\u4ef6\u540d\u4e00\u822c\u4e3aDockerfile \u53ef\u4ee5\u4f7f\u7528Dockerfile\u6587\u4ef6\u6765\u81ea\u5b9a\u4e49\u955c\u50cf \u6307\u5b9abase image\uff0c\u57fa\u672c\u955c\u50cf FROM\u4e00\u822c\u4e3a\u7b2c\u4e00\u884c\uff0cFROM\u57fa\u672c\u955c\u50cf\u540d\u79f0:tag\u7248\u672c\u7f16\u53f7 \u5982\u679c\u672c\u5730\u6ca1\u6709\uff0c\u4f1a\u81ea\u52a8\u4ecedocker hub \u8fdc\u7a0b\u4ed3\u5e93\u4e0b\u8f7d\uff0c\u5426\u5219\u76f4\u63a5\u4f7f\u7528\u672c\u5730\u4ed3\u5e93\u63d0\u4f9b\u7684","title":"\u56db\u3001Dockerfile"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#1from","text":"FROM\u4e00\u822c\u4e3a\u7b2c\u4e00\u884c\uff0cFROM\u57fa\u672c\u955c\u50cf\u540d\u79f0:tag\u7248\u672c\u7f16\u53f7 FROM python:alpine","title":"1\u3001FROM"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#2label","text":"\u4f7f\u7528LABEL\u6307\u5b9a\u955c\u50cf\u7684\u5143\u6570\u636e\u4fe1\u606f\uff08\u63d0\u793a\u8bf4\u660e\u4f5c\u7528\uff09 LABEL key=value \u5982\u679cvalue\u4e2d\u6709\u7a7a\u683c\uff0c\u9700\u8981\u4f7f\u7528\u5f15\u53f7\u62ec\u8d77\u6765\u6216\u8005\u4f7f\u7528\\\u8fdb\u884c\u8f6c\u4e49","title":"2\u3001LABEL"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#3copy","text":"\u7528\u4e8e\u5c06\u5bbf\u4e3b\u673a\u4e2d\u7684\u8d44\u6e90\u590d\u5236\u7c98\u8d34\u81f3\u5bb9\u5668\u4e2d COPY \u5bbf\u4e3b\u673a\u8def\u5f84 \u5bb9\u5668\u4e2d\u7684\u8def\u5f84 \u5982\u679c\u5bb9\u5668\u4e2d\u6307\u5b9a\u7684\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa \u5982\u679c\u5c06\u4e00\u4e2a\u6587\u4ef6\u590d\u5236\u5230\u5bb9\u5668\u4e2d\uff0c\u6307\u5b9a\u7684\u5bb9\u5668\u8def\u5f84\uff0c\u5efa\u8bae\u6dfb\u52a0/ COPY . /app","title":"3\u3001COPY"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#4add","text":"ADD\u4e0eCOPY\u7c7b\u4f3c\uff0c\u7528\u4e8e\u5c06\u5bbf\u4e3b\u673a\u4e2d\u7684\u8d44\u6e90\u590d\u5236\u5230\u5bb9\u5668\u4e2d ADD \u53ef\u4ee5\u5c06\u8fdc\u7a0b\u6587\u4ef6\u4e0b\u8f7d\u4e4b\u540e\uff0c\u590d\u5236\u5230\u5bb9\u5668\u4e2d\uff1aADD \u8fdc\u7a0b\u6587\u4ef6\u94fe\u63a5 \u5bb9\u5668\u76ee\u5f55 \u4e5f\u53ef\u4ee5\u5c06\u672c\u5730\u7684\u538b\u7f29\u6587\u4ef6\u89e3\u538b\u4e4b\u540e\uff0c\u590d\u5236\u5230\u5bb9\u5668\u4e2d\uff1aADD \u672c\u5730\u538b\u7f29\u6587\u4ef6 \u5bb9\u5668\u76ee\u5f55 ADD https://github.com/docker-library/python/raw/master/update.sh .","title":"4\u3001ADD"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#5workdir","text":"\u76f8\u5f53\u4e8ecd\u547d\u4ee4\uff0c\u7528\u4e8e\u5bb9\u5668\u8fdb\u5165\u5230\u67d0\u4e2a\u76ee\u5f55\u4e2d \u5982\u679c\u6307\u5b9a\u7684\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa WORKDIR /app","title":"5\u3001WORKDIR"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#6run","text":"\u7528\u4e8e\u5728\u5bb9\u5668\u4e2d\u6267\u884clinux\u547d\u4ee4 \u6bcf\u4e00\u4e2aRUN\u6307\u4ee4\u4f1a\u72ec\u81ea\u5360\u4e00\u5c42 \u4e3a\u4e86\u4f18\u5316\u955c\u50cf\u7684\u5927\u5c0f\uff0c\u5982\u679c\u6709\u591a\u6761\u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2aRUN\u6307\u4ee4\uff0c\u591a\u6761\u547d\u4ee4\u4e4b\u95f4&&\u6216\u8005;\u4f7f\u7528\\\u8fdb\u884c\u6362\u884c RUN pip install -r requirements.txt","title":"6\u3001RUN"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#7env","text":"ENV username=Desire\\ password=123456","title":"7\u3001ENV"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#8volume","text":"\u6307\u5b9a\u5bb9\u5668\u4e2d\u54ea\u4e9b\u76ee\u5f55\u53ef\u4ee5\u4e0e\u5bbf\u4e3b\u673a\u8fdb\u884c\u5171\u4eab LABEL maintaier=\"Desire <desireyang.qq.com>\" LABEL description=\"define Dockerfile Demo\"","title":"8\u3001VOLUME"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#9expose","text":"\u6307\u5b9a\u5bb9\u5668\u4e2d\u53ef\u4ee5\u66b4\u9732\u7684\u7aef\u53e3 EXPOSE 8000","title":"9\u3001EXPOSE"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#10cmd","text":"\u6307\u5b9a\u5bb9\u5668\u8fd0\u884c\uff08docker run \uff09\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u6267\u884c\u7684\u547d\u4ee4 \u5982\u679c\u5728\u8fd0\u884c\u5bb9\u5668\u65f6\uff0c\u6307\u5b9a\u4e86\u5176\u4ed6\u547d\u4ee4\uff0c\u90a3\u4e48CMD\u547d\u4ee4\u4f1a\u88ab\u8986\u76d6 \u5982\u679c\u6709\u591a\u4e2aCMD\u547d\u4ee4\uff0c\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u4f1a\u88ab\u6267\u884c \u6709\u4e24\u79cd\u683c\u5f0f\uff0cshell\u683c\u5f0f\u3001exec\u683c\u5f0f exec\u683c\u5f0f(\u5e38\u7528)\uff1a[\"\u547d\u4ee4\u7684\u7edd\u5bf9\u8def\u5f84\",\"\u53c2\u65701\",\"\u53c2\u65702\"] shell\u683c\u5f0f\uff1a\u547d\u4ee4\u7684\u7edd\u5bf9\u8def\u5f84 \u53c2\u65701 \u53c2\u65702 CMD [\"python\", \"fun.py\"] # CMD [\"/bin/ls\",\"/\",\"/etc\"] # CMD python fun.py","title":"10\u3001CMD"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#11entrypoint","text":"\u4e0eCMD\u7c7b\u4f3c\uff0c\u5f53\u8fd0\u884c\u5bb9\u5668\u65f6\uff0c\u5982\u679c\u6307\u5b9a\u4e86\u5176\u4ed6\u547d\u4ee4\uff0c\u90a3\u4e48ENTRYPOINT\u4e0d\u4f1a\u88ab\u8986\u76d6 \u5982\u679c\u6709\u591a\u4e2aENTRYPOINT\uff0c\u90a3\u4e48\u53ea\u6709\u6700\u540e\u4e00\u4e2aENTRYPOINT\u4f1a\u88ab\u6267\u884c \u53ef\u4ee5\u4e0eCMD\u4e00\u8d77\u7528\uff0c\u653e\u5728ENTRYPOINT\u540e\u9762\uff0c\u4f5c\u4e3aENTRYPOINT\u9ed8\u8ba4\u53c2\u6570 ENTRYPOINT [\"python\", \"fun.py\"] ENTRYPOINT [\"cat\", \"fun.py\"] CMD [\"etc/passwd\"] # \u53ef\u4ee5\u6307\u5b9ashell\u811a\u672c ENTRYPOINT [\"/bin/sh\",\"docker-entrypoint.sh\"]","title":"11\u3001ENTRYPOINT"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#12arg","text":"\u6784\u5efa\u53c2\u6570 \u548cENV\u7684\u6548\u679c\u4e00\u6837\uff0c\u90fd\u662f\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf ARG\u6240\u8bbe\u7f6e\u7684\u6784\u5efa\u73af\u5883\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5728\u5c06\u6765\u5bb9\u5668\u8fd0\u884c\u65f6\u662f\u4e0d\u4f1a\u5b58\u5728\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u7684 \u4e0d\u8981\u56e0\u6b64\u4f7f\u7528ARG\u4fdd\u5b58\u5bc6\u7801\u4e4b\u7c7b\u7684\u4fe1\u606f\uff0c docker history \u662f\u53ef\u4ee5\u770b\u5230\u6240\u6709\u503c\u7684 \u5b9a\u4e49\u7684\u503c\u53ef\u4ee5\u5728 docker build \u4e2d\u7528 --build-arg <\u53c2\u6570\u540d>=<\u503c> \u8fdb\u884c\u8986\u76d6 \u751f\u6548\u8303\u56f4 \u5982\u679c\u662f\u5728 FROM \u6307\u4ee4\u4e4b\u524d\u6307\u5b9a\uff0c\u90a3\u4e48\u53ea\u80fd\u7528\u4e8e FROM \u6307\u4ee4\u4e2d # \u53ea\u5728 FROM \u4e2d\u751f\u6548 ARG DOCKER_USERNAME=library FROM ${DOCKER_USERNAME}/alpine # \u8981\u60f3\u5728 FROM \u4e4b\u540e\u4f7f\u7528\uff0c\u5fc5\u987b\u518d\u6b21\u6307\u5b9a ARG DOCKER_USERNAME=library RUN set -x ; echo ${DOCKER_USERNAME}","title":"12\u3001ARG"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#13user","text":"\u6307\u5b9a\u5f53\u524d\u7528\u6237 USER\u53ea\u662f\u5e2e\u52a9\u5207\u6362\u5230\u6307\u5b9a\u7528\u6237\uff0c\u5e76\u4e0d\u4f1a\u521b\u5efa\u7528\u6237 USER root","title":"13\u3001USER"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#dockerfile_1","text":"docker build -t \u955c\u50cf\u540d:tag -f \u6307\u5b9aDockerfile\u6587\u4ef6\u8def\u5f84 . -t \u6307\u5b9a\u6784\u5efa\u7684\u955c\u50cf\u540d\u79f0\u548ctag\uff0c\u5982\u679c\u4e0d\u6307\u5b9atag\uff0c\u9ed8\u8ba4\u4f7f\u7528latest\uff0c\u955c\u50cf\u540d\u4e00\u822c\u4e3a\u7528\u6237\u540d/\u955c\u50cf\u540d\u79f0 -f \u6307\u5b9aDockerfile\u6587\u4ef6\u8def\u5f84\uff0c\u5982\u679c\u547d\u540d\u4e3aDockerfile\uff0c\u4e14\u5728\u5f53\u524d\u8def\u5f84\u4e0b\uff0c\u90a3\u4e48\u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a\uff0c\u5426\u5219\u5fc5\u987b\u6307\u5b9a . \u4ee3\u8868\u5c06\u5f53\u524d\u8def\u5f84\u4f5c\u4e3a\u6784\u5efa\u4e0a\u4e0b\u6587","title":"\u901a\u8fc7Dockerfile\u6587\u4ef6\u6784\u5efa\u955c\u50cf"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#dockerfile_2","text":"FROM python:alpine LABEL maintaier=\"Desire <desireyang.qq.com>\" LABEL description=\"define Dockerfile Demo\" COPY . /app # ADD https://github.com/docker-library/python/raw/master/update.sh . WORKDIR /app RUN pip install -r requirements.txt ENV username=Desire\\ password=123456 VOLUME /app # EXPOSE 8000 CMD [\"python\", \"fun.py\"] # CMD [\"/bin/ls\",\"/\",\"/etc\"] # CMD python fun.py # ENTRYPOINT [\"python\", \"fun.py\"] # ENTRYPOINT [\"cat\", \"fun.py\"] # CMD [\"etc/passwd\"] # \u53ef\u4ee5\u6307\u5b9ashell\u811a\u672c # ENTRYPOINT [\"/bin/sh\",\"docker-entrypoint.sh\"]","title":"Dockerfile\u6587\u4ef6"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#docker-compose","text":"","title":"\u4e94\u3001docker-compose"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#1_4","text":"# \u8fd0\u884c\u6b64\u547d\u4ee4\u4e0b\u8f7d\u5f53\u524d\u7684 Docker Compose \u7a33\u5b9a\u7248\u672c sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose # \u5bf9\u4e8c\u8fdb\u5236\u6587\u4ef6\u5e94\u7528\u53ef\u6267\u884c\u6743\u9650 sudo chmod +x /usr/local/bin/docker-compose # \u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f docker-compose --version","title":"1\u3001\u5b89\u88c5"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#2docker-compose","text":"# \u6307\u5b9a\u7248\u672c\u4fe1\u606f version: '3' # \u5b9a\u4e49\u670d\u52a1\uff08\u5bb9\u5668\uff09 services: # \u521b\u5efa\u5177\u4f53\u7684\u670d\u52a1\uff08\u5bb9\u5668\uff09 db: # \u6307\u5b9a\u9700\u8981\u4f7f\u7528\u7684\u955c\u50cf\u540d\u79f0 # \u955c\u50cf\u540d:tag # \u5982\u679c\u672c\u5730\u6ca1\u6709\u6307\u5b9a\u955c\u50cf\uff0c\u90a3\u4e48\u4f1a\u4ecedocker hub\u4e2d\u4e0b\u8f7d\uff0c\u5426\u5219\u76f4\u63a5\u4f7f\u7528\u672c\u5730\u7684\u955c\u50cf image: mariadb # \u5728\u8fd0\u884c\u5bb9\u5668\u65f6\uff0c\u6307\u5b9a\u9700\u8981\u6267\u884c\u7684\u547d\u4ee4\u6216\u8005\u53c2\u6570 command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci # \u6307\u5b9a\u6570\u636e\u6301\u4e45\u5316\u6620\u5c04 volumes: # - \u6570\u636e\u5377\u540d\u79f0\u6216\u8005\u5bbf\u4e3b\u673a\u6587\u4ef6\u3001\u8def\u5f84:\u5bb9\u5668\u4e2d\u7684\u8def\u5f84 - mysql_db:/var/lib/mysql # \u6307\u5b9a\u5bb9\u5668\u5931\u8d25\u65f6\uff08Existed\uff09\uff0c\u91cd\u542f\u7b56\u7565 restart: always # \u6307\u5b9a\u5bb9\u5668\u4e2d\u7684\u5168\u5c40\u53d8\u91cf environment: # \u53d8\u91cf\u540d: \u53d8\u91cf\u503c MYSQL_ROOT_PASSWORD: \"123456\" MYSQL_DATABASE: my_django # \u6307\u5b9a\u5f53\u524d\u5bb9\u5668\u9700\u8981\u52a0\u5165\u7684\u7f51\u7edc networks: - django_app_net django_app: # \u6307\u5b9a\u5f53\u524d\u670d\u52a1\uff08\u5bb9\u5668\uff09\u4f9d\u8d56\u7684\u670d\u52a1 depends_on: - db # \u6307\u5b9a\u901a\u8fc7Dockerfile\u53bb\u6784\u5efa\u955c\u50cf\uff08Dockerfile\u6240\u5728\u8def\u5f84\uff09 build: ./django # \u5728build\u4e0b\u65b9\uff0c\u6307\u5b9a\u6784\u5efa\u7684\u955c\u50cf\u540d\u79f0:tag image: desireyang/django_app:v2 restart: always volumes: - logs:/usr/src/app/logs/ - django_code:/usr/src/app/web_test/ networks: - django_app_net web: depends_on: - django_app build: ./nginx image: desireyang/web:v2 restart: always # \u5c06\u5bb9\u5668\u4e2d\u76d1\u542c\u7684\u7aef\u53e3\u4e0e\u5bbf\u4e3b\u673a\u7aef\u53e3\u955c\u50cf\u6620\u5c04 ports: - \"8444:80\" - \"8440:8000\" volumes: - logs:/var/log/nginx/ networks: - django_app_net # \u6307\u5b9a\u9700\u8981\u4f7f\u7528\u7684\u7f51\u7edc networks: # \u6307\u5b9a\u7f51\u7edc\u7684\u540d\u79f0\uff0c\u9ed8\u8ba4\u4f1a\u521b\u5efabridge\u6865\u63a5\u7f51\u7edc django_app_net: # \u6307\u5b9a\u6570\u636e\u5377 volumes: mysql_db: django_code: logs:","title":"2\u3001\u4f7f\u7528docker-compose\u90e8\u7f72\u5e94\u7528"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#3_3","text":"docker-compose config","title":"3\u3001\u68c0\u67e5\u662f\u5426\u6709\u9519\u8bef"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#4_1","text":"docker-compose build","title":"4\u3001\u53ea\u6784\u5efa\u4e0d\u8fd0\u884c"},{"location":"docker/docker%E7%AC%94%E8%AE%B0/#5","text":"docker-compose up -d # \u5982\u679cdocker-compose\u6587\u4ef6\u540d\u4e0d\u662fdocker-compose.yml\uff0c\u9700\u8981\u52a0\u4e0a-f\u6307\u5b9a\u6587\u4ef6 docker-compose up -d -f docker-compose-django.yml","title":"5\u3001\u8fd0\u884c"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/","text":"shell\u7b14\u8bb0 \u4e00\u3001\u5e38\u7528\u547d\u4ee4 1.head \u9ed8\u8ba4\u83b7\u53d6\u6587\u4ef6\u524d10\u884c -n \u83b7\u53d6\u6307\u5b9a\u7684\u884c\u6570 head -n 3 /etc/passwd head -3 /etc/passwd -c \u83b7\u53d6\u524dn\u4e2a\u5b57\u7b26 head -c 3 /etc/passwd 2.tail \u9ed8\u8ba4\u83b7\u53d6\u6587\u4ef6\u540e10\u884c -n \u83b7\u53d6\u6307\u5b9a\u7684\u884c\u6570 tail -n 3 /etc/passwd tail -3 /etc/passwd -c \u83b7\u53d6\u540en\u4e2a\u5b57\u7b26 tail -c 3 /etc/passwd 3.cut \u53d6\u51fa\u6587\u4ef6\u5236\u5b9a\u7684\u5217 \u9ed8\u8ba4\u4ee5\u7a7a\u683c\u6216\u8005tab\u952e\u8fdb\u884c\u5206\u5272\uff08\u4e0d\u652f\u6301\u4e0d\u89c4\u5219\u7684\u7a7a\u683c\uff09 - -d \u6307\u5b9a\u5206\u5272\u7b26 - -f \u6307\u5b9a\u83b7\u53d6\u7684\u5217\u53f7(\u83b7\u53d6\u7b2c\u4e8c\u548c\u7b2c\u56db\u5217\uff1a-f2,4) 4.uniq \u53bb\u9664\u91cd\u590d\u7684\u5185\u5bb9 - -d \u4ec5\u6253\u5370\u6709\u91cd\u590d\u7684\u5143\u7d20\uff08duplicate\uff09 - -c \u6253\u5370\u5143\u7d20\u91cd\u590d\u7684\u4e2a\u6570 5.sort \u5bf9\u6587\u672c\u7684\u5185\u5bb9\u8fdb\u884c\u6392\u5e8f \u9ed8\u8ba4\u4ee5\u5b57\u7b26\u7684ASCII\u7801\u6570\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f - -n \u4ee5\u6570\u503c\u5927\u5c0f\u6392\u5e8f - -r \u5012\u5e8f 6.wc \u8ba1\u7b97\u6587\u672c\u6570\u91cf - wc -l \u6253\u5370\u884c\u6570 - wc -w \u6253\u5370\u5355\u8bcd\u6570 - wc -c \u6253\u5370\u5b57\u8282\u6570 - wc -L \u6253\u5370\u6700\u957f\u884c\u7684\u5b57\u8282\u6570 \u4e8c\u3001\u53d8\u91cf 1\u3001\u5b9a\u4e49\u53d8\u91cf\uff08\u5b9a\u4e49\u7684\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u672c\u5730\u53d8\u91cf\uff09 \u65b9\u5f0f\u4e00\uff1a \u53d8\u91cf\u540d=\u53d8\u91cf\u503c \u53d8\u91cf\u503c\u5fc5\u987b\u662f\u4e00\u4e2a\u6574\u4f53\uff0c\u4e2d\u95f4\u6ca1\u6709\u7279\u6b8a\u5b57\u7b26 \u7b49\u53f7\u4e24\u4fa7\u4e0d\u80fd\u6709\u7a7a\u683c \u65b9\u5f0f\u4e8c\uff1a \u53d8\u91cf\u540d='\u53d8\u91cf\u503c' \u770b\u5230\u7684\u5185\u5bb9\uff0c\u5c31\u8f93\u51fa\u4ec0\u4e48\u5185\u5bb9 \u65b9\u5f0f\u4e09\uff1a \u53d8\u91cf\u540d=\"\u53d8\u91cf\u503c\" \u65b9\u5f0f\u56db\uff1a \u53d8\u91cf\u540d=$(linux\u547d\u4ee4) \u53d8\u91cf\u540d=`linux\u547d\u4ee4` \u5e38\u7528\u65b9\u6cd5 \u5b9a\u4e49\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u7684\u533a\u522b\uff1a \u5982\u679c\u53d8\u91cf\u503c\u4e2d\u6709\u7a7a\u683c\u8981\u7528\u653e\u5230\u5f15\u53f7\u4e2d \u5355\u5f15\u53f7\u4e2d\u7684\u53d8\u91cf\u5982\u679c\u6709\u5f15\u7528\u522b\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u6253\u5370\u51fa\u6765\u7684\u503c\u4e0d\u4f1a\u8fdb\u884c\u89e3\u6790 \u53cc\u5f15\u53f7\u4e2d\u7684\u53d8\u91cf\u5982\u679c\u6709\u5f15\u7528\u522b\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u6253\u5370\u7684\u65f6\u5019\u4f1a\u8fdb\u884c\u89e3\u6790 name='aa bb' echo $name # aa bb var='$name' echo $var # $name var=\"$name\" echo $var # aa bb 2\u3001\u5168\u5c40\u53d8\u91cf \u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4(env)\u67e5\u770b\u73af\u5883\u53d8\u91cf\uff08\u53ea\u663e\u793a\u5168\u5c40\u53d8\u91cf\uff09 \u5b9a\u4e49\u5168\u5c40\u53d8\u91cf \u65b9\u5f0f\u4e00\uff1a \u53d8\u91cf=\u503c export \u53d8\u91cf \u65b9\u5f0f\u4e8c\uff08\u6700\u5e38\u7528\uff09\uff1a export \u53d8\u91cf=\u503c 3\u3001\u5b9a\u4e49\u6c38\u4e45\u53d8\u91cf \u53ef\u4ee5\u5728 ~/.bashrc\u4e2d\u8fdb\u884c\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf \u4e5f\u53ef\u4ee5\u5728 ~/.bash_profile\u4e2d\u5b9a\u4e49 4\u3001\u67e5\u770b\u53d8\u91cf \u65b9\u5f0f\u4e00\uff1a echo $\u53d8\u91cf\u540d \u65b9\u5f0f\u4e8c\uff1a echo \"$\u53d8\u91cf\u540d\" \u8f93\u51fa\u8fdb\u884c\u8f6c\u4e49 echo -e \"one\\ntwo\\tthress\" \u8f93\u51fa\u4e0d\u6362\u884c echo -n \"one two\"; echo -n \"333\" \u8f93\u51fa\u5e26\u989c\u8272\u7684\u5b57\u7b26 echo -e \"\\e[031mYES\\e[0m\" # \u7ea2\u8272 032 # \u7eff\u8272 034 # \u84dd\u8272 5\u3001\u5185\u7f6e\u53d8\u91cf $0 \u83b7\u53d6\u5f53\u524d\u6267\u884c\u7684shell\u811a\u672c\u6587\u4ef6\u540d\uff0c\u5305\u62ec\u811a\u672c\u8def\u5f84 $n \u83b7\u53d6\u5f53\u524d\u6267\u884c\u7684shell\u811a\u672c\u7684\u7b2cn\u4e2a\u53c2\u6570\u503c\uff0cn=1...9\uff0c\u5982\u679cn\u5927\u4e8e9\u5c31\u8981\u7528\u5927\u62ec\u53f7\u62ec\u8d77\u6765${10} $# \u83b7\u53d6\u5f53\u524dshell\u547d\u4ee4\u884c\u4e2d\u53c2\u6570\u7684\u603b\u4e2a\u6570 $? \u83b7\u53d6\u6267\u884c\u4e0a\u4e00\u4e2a\u6307\u4ee4\u7684\u8fd4\u56de\u503c(0\u4e3a\u6210\u529f\uff0c\u975e0\u4e3a\u5931\u8d25) $* $@ 6\u3001\u6570\u503c\u8fd0\u7b97 + - * / % < <= > >= = != \u65b9\u5f0f\u4e00\uff1a $((\u7b97\u6570\u8868\u8fbe\u5f0f)) \u53d8\u91cf\u53ef\u4ee5\u4e0d\u52a0$ \u65b9\u5f0f\u4e8c\uff1a expr \u7b97\u6570\u8868\u8fbe\u5f0f \u5982\u679c\u9047\u5230 < > \u9700\u8981\u8fdb\u884c\u8f6c\u4e49 /< /> \u65b9\u5f0f\u4e09\uff1a bc scale=3 \u8868\u793a\u4fdd\u75593\u4f4d\u5c0f\u6570 echo \"scale=3; 10/3\" | bc 7\u3001\u6761\u4ef6\u8868\u8fbe\u5f0f \u683c\u5f0f\uff1a test [ \u6761\u4ef6\u8868\u8fbe\u5f0f ] 1. \u8fd4\u56de\u503c \u6761\u4ef6\u6210\u7acb\uff0c\u8fd4\u56de0 \u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u8fd4\u56de1 2. \u6587\u4ef6\u8868\u8fbe\u5f0f -f \u5224\u65ad\u8f93\u5165\u7684\u5185\u5bb9\u662f\u5426\u662f\u4e00\u4e2a\u6587\u4ef6 -d \u5224\u65ad\u8f93\u5165\u5185\u5bb9\u662f\u5426\u662f\u4e00\u4e2a\u76ee\u5f55 -x \u5224\u65ad\u8f93\u5165\u5185\u5bb9\u662f\u5426\u53ef\u6267\u884c -e \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728 -r -w 3. \u6570\u503c\u64cd\u4f5c\u7b26 n1 -eq n2 \u76f8\u7b49 n1 -gt n2 \u5927\u4e8e n1 -lt n2 \u5c0f\u4e8e n1 -ne n2 \u4e0d\u7b49\u4e8e 4. \u5b57\u7b26\u4e32\u6bd4\u8f83 str1 == str2 str1\u548cstr2\u5b57\u7b26\u4e32\u5185\u5bb9\u4e00\u81f4 str1 != str2 str1\u548cstr2\u5b57\u7b26\u4e32\u5185\u5bb9\u4e0d\u4e00\u81f4\uff0c!\u8868\u793a\u76f8\u53cd\u7684\u610f\u601d 5. \u903b\u8f91\u8868\u8fbe\u5f0f && \u548c || -a \u4e0e -o \u6216 read\u7528\u6237\u8f93\u5165 read\u5982\u679c\u4e0d\u6dfb\u52a0\u4efb\u4f55\u53c2\u6570\uff0c\u7528\u6237\u8f93\u5165\u7684\u5185\u5bb9\u4f1a\u81ea\u52a8\u5b58\u653e\u5230$REPLY\u5185\u7f6e\u53d8\u91cf\u4e2d read\u5982\u679c\u6dfb\u52a0\u53c2\u6570\u90a3\u4e48\u4f1a\u81ea\u52a8\u590d\u5236 -p \u63d0\u793a\u7528\u6237\u8f93\u5165 read -p \"\u8bf7\u8f93\u5165\u5185\u5bb9\uff1a\" -n \u4e2a\u6570\uff0c\u6307\u5b9a\u63a5\u53d7\u7528\u6237\u8f93\u5165\u7684\u4e2a\u6570 -s \u6307\u5b9a\u4e0d\u663e\u793a\u7528\u6237\u8f93\u5165\u7684\u5185\u5bb9 -e \u5982\u679c\u6709\u9000\u683c\u952e\u4e0d\u4f1a\u663e\u793a^H \u4e09\u3001shell\u811a\u672c\u683c\u5f0f 1. \u683c\u5f0f\u8981\u6c42 1\uff09\u5728\u6587\u4ef6\u9996\u884c\u6307\u5b9a\u6267\u884cshell\u7684\u7a0b\u5e8f\u4ee5\u53ca\u76f8\u5173\u8bf4\u660e # !/bin/bash # Author: Desire # Date: 2021-03-29 2\uff09shell\u811a\u672c\u6587\u4ef6\u540e\u7f00\uff0c.sh 3\uff09\u811a\u672c\u6267\u884c\u5931\u8d25\u65f6\uff0c\u4f7f\u7528exit\u8fd4\u56de\u975e\u96f6\u503c\uff0c\u6765\u9000\u51fa\u7a0b\u5e8f 4\uff09\u9ed8\u8ba4\u7f29\u8fdb4\u4e2a\u7a7a\u683c 5\uff09shell\u811a\u672c\u547d\u540d\u7b80\u5355\uff0c\u6709\u610f\u4e49\uff0c\u89c1\u540d\u77e5\u610f 2. \u6267\u884c\u811a\u672c 1\uff09\u7ed9shell\u811a\u672c\u589e\u52a0\u6267\u884c\u6743\u9650 chmod u+x one.sh \u7ed9\u5f53\u524d\u7528\u6237\u6307\u5b9a\u6267\u884c\u6743\u9650 chmod +x one.sh \u7ed9\u6240\u6709\u7528\u6237\u6307\u5b9a\u6267\u884c\u6743\u9650 2\uff09\u6267\u884cshell\u811a\u672c bash one.sh sh one.sh source one.sh # \u8bbe\u7f6e\u6743\u9650\u540e\u624d\u53ef\u4ee5\u4f7f\u7528 ./one.sh 3\uff09\u8c03\u8bd5\u6a21\u5f0f\u6267\u884c bash -x one.sh 3. \u6ce8\u91ca \u5355\u884c\u6ce8\u91ca # \u591a\u884c\u6ce8\u91ca :<<! \u6ce8\u91ca\u5185\u5bb9 ! \u56db\u3001\u51fd\u6570 1. \u683c\u5f0f \u683c\u5f0f\u4e00\uff1a \u51fd\u6570\u540d() { \u547d\u4ee41 \u547d\u4ee42 } \u683c\u5f0f\u4e8c\uff1a function \u51fd\u6570\u540d { \u547d\u4ee41 \u547d\u4ee42 } 2. \u51fd\u6570\u4f20\u53c2 is_online() { ping -c1 $1 &> /dev/null if [ $? -eq 0 ];then echo \"$1\u4e3b\u673a\u5728\u7ebf\" else echo \"$1\u4e3b\u673a\u4e0d\u5728\u7ebf\" fi } is_online www.baidu.com 3. shell\u811a\u672c\u547d\u4ee4\u4f20\u9012\u53c2\u6570 ------defind_func.sh-------- is_online() { ping -c1 $1 &> /dev/null if [ $? -eq 0 ];then echo \"$1\u4e3b\u673a\u5728\u7ebf\" else echo \"$1\u4e3b\u673a\u4e0d\u5728\u7ebf\" fi } is_online $1 ------\u547d\u4ee4\u884c\u6267\u884cshell\u811a\u672c----- bash defind_func.sh www.baidu.com \u4e94\u3001\u6d41\u7a0b\u63a7\u5236(break\u548ccontinue\u5728\u5faa\u73af\u4e2d\u4e5f\u662f\u53ef\u4ee5\u7528\u7684) 1\u3001if \u65b9\u5f0f\u4e00\uff1a if [ \u6761\u4ef61 ] then \u6307\u4ee41 elif [ \u6761\u4ef62 ] then \u6307\u4ee42 else \u6307\u4ee43 fi \u65b9\u5f0f\u4e8c: if [ \u6761\u4ef61 ]; then \u6307\u4ee41 elif [ \u6761\u4ef62 ]; then \u6307\u4ee42 else \u6307\u4ee43 fi 2\u3001for \u683c\u5f0f\u4e00\uff1a for \u503c in \u5217\u8868 do \u6267\u884c\u8bed\u53e5 done \u683c\u5f0f\u4e8c\uff1a for ((i=1,i<10;i++)) do echo \"$i\" done 3\u3001while \u53ea\u8981\u6761\u4ef6\u6ee1\u8db3\uff0c\u5c31\u4e00\u76f4\u5faa\u73af while \u6761\u4ef6 do \u6267\u884c\u8bed\u53e5 done 4\u3001until \u53ea\u8981\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5c31\u4e00\u76f4\u5faa\u73af until \u6761\u4ef6 do \u6267\u884c\u8bed\u53e5 done 5\u3001case case \u53d8\u91cf\u540d in \u503c1) \u6307\u4ee41 ;; \u503c2) \u6307\u4ee42 ;; \u503c3) \u6307\u4ee43 ;; *) \u6307\u4ee44 ;; esac \u516d\u3001\u6570\u7ec4 1\u3001\u6570\u7ec4\u7684\u5b9a\u4e49 \u4e00\u5bf9\u62ec\u53f7\u8868\u793a\u662f\u6570\u7ec4\uff0c\u6570\u7ec4\u5143\u7d20\u7528\u201c\u7a7a\u683c\u201d\u7b26\u53f7\u5206\u5272\u5f00\uff0c\u5f15\u7528\u4e2a\u6570\u7ec4\u65f6\u4ece\u5e8f\u53f70\u5f00\u59cb \u65b9\u5f0f\u4e00\uff1a array=(10 20 30 40) \u65b9\u5f0f\u4e8c\uff1a array[0]=10 array[1]=20 array[2]=30 array[3]=40 \u65b9\u5f0f\u4e09\uff1a var=\"10 20 30 40\"; array=($var) 2\u3001\u6570\u7ec4\u64cd\u4f5c 1\uff09\u663e\u793a\u6570\u7ec4\u4e2d\u7b2cn\u9879 \u6570\u7ec4\u7684\u5e8f\u53f7\u662f\u4ece0\u5f00\u59cb\u8ba1\u7b97\uff0c\u8d85\u51fa\u7d22\u5f15\u4e0d\u4f1a\u62a5\u9519 echo ${array[n]} 2\uff09\u663e\u793a\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20 echo ${array[@]} OR echo ${array[*]} 3\uff09\u663e\u793a\u6570\u7ec4\u957f\u5ea6 echo ${#array[@]} OR echo ${#array[*]} 4\uff09\u5220\u9664\u6570\u7ec4\u4e2d\u7b2cn\u9879\u5143\u7d20 unset\u4ec5\u4ec5\u53ea\u6e05\u695aarray[n]\u7684\u503c\uff0c\u5e76\u6ca1\u6709\u5c06array[n]\u5220\u9664\u6389 unset array[1] 5\uff09\u5220\u9664\u6574\u4e2a\u6570\u7ec4 unset array 6\uff09\u8f93\u51fa\u6570\u7ec4\u7684\u4ece\u7b2c\u4e00\u9879\u5f00\u59cb\u957f\u5ea6\u4e3a3\u7684\u6570\u7ec4 ${\u6570\u7ec4\u540d[@ or *]:\u8d77\u59cb\u4f4d\u7f6e:\u957f\u5ea6} echo ${array[@]:0:3} 7\uff09\u5c06\u6570\u7ec4\u4e2d\u76840\u66ff\u6362\u62101 ${\u6570\u7ec4\u540d[@ or /*]/\u67e5\u627e\u5b57\u7b26/\u66ff\u6362\u5b57\u7b26} echo ${array[@]/0/1} 8\uff09\u5728\u6570\u7ec4\u8ffd\u52a0\u65b0\u7684\u5143\u7d20 array[${#array[@]}]=1234; echo ${array[@]} \u4e03\u3001\u6587\u672c\u5904\u7406\u4e09\u5251\u5ba2 grep sed awk 1\u3001grep \u67e5\u627e\u6587\u4ef6\u91cc\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32 grep [option] pattern [file1,file2,...] come command | grep [option] pattern -i \u5ffd\u7565\u5927\u5c0f\u5199 -c \u53ea\u8f93\u51fa\u5339\u914d\u884c\u7684\u6570\u91cf -n \u663e\u793a\u884c\u53f7 -r \u9012\u5f52\u641c\u7d22 -E \u652f\u6301\u62d3\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f -w \u5339\u914d\u6574\u4e2a\u5355\u8bcd -l \u53ea\u5217\u51fa\u5339\u914d\u7684\u6587\u4ef6\u540d -F \u4e0d\u652f\u6301\u6b63\u5219\uff0c\u6309\u5b57\u7b26\u4e32\u5b57\u9762\u610f\u601d\u8fdb\u884c\u5339\u914d 2\u3001sed \u6d41\u7f16\u8f91\u5668\uff0c\u5bf9\u6587\u4ef6\u9010\u884c\u8fdb\u884c\u5904\u7406 sed [option] \"pattern command\" file some command | sed [option] \"pattern command\" -n \u53ea\u6253\u5370\u6a21\u5f0f\u5339\u914d\u7684\u884c -f \u52a0\u8f7d\u5b58\u653e\u52a8\u4f5c\u7684\u6587\u4ef6 -r \u652f\u6301\u62d3\u5c55\u6b63\u5219 -i \u652f\u6301\u4fee\u6539\u6587\u4ef6 pattern\u6a21\u5f0f 5 \u53ea\u5904\u7406\u7b2c5\u884c 5,10 \u53ea\u5904\u7406\u7b2c5\u884c\u5230\u7b2c10\u884c /pattern1/ \u53ea\u5904\u7406\u80fd\u5339\u914dpattern1\u7684\u884c /pattern1/,/pattern2/ \u53ea\u5904\u7406\u4ece\u5339\u914dpattern1\u7684\u884c\u5230\u5339\u914dpattern2\u7684\u884c command\u547d\u4ee4 \u67e5\u8be2 p \u6253\u5370 \u65b0\u589e a \u5728\u5339\u914d\u884c\u540e\u65b0\u589e i \u5728\u5339\u914d\u884c\u524d\u65b0\u589e r \u5916\u90e8\u6587\u4ef6\u8bfb\u5165\uff0c\u884c\u540e\u65b0\u589e w \u5339\u914d\u884c\u5199\u5165\u5916\u90e8\u6587\u4ef6 \u5220\u9664 d \u66ff\u6362 s/old/new/ \u53ea\u4fee\u6539\u5339\u914d\u884c\u4e2d\u7b2c\u4e00\u4e2aold s/old/new/g \u4fee\u6539\u5339\u914d\u884c\u4e2d\u6240\u6709\u7684old s/old/new/ig \u5ffd\u7565\u5927\u5c0f\u5199 \u4f8b\u5b50 # \u67e5\u8be2 sed \"p\" passwd # \u6253\u5370\u6e90\u884c\u4fe1\u606f\u548c\u6a21\u5f0f\u5339\u914d\u7684\u884c\uff08\u884c\u6253\u5370\u4fe1\u606f\u4f1a\u6709\u91cd\u590d\u7684\uff09 sed -n \"p\" passwd # \u53ea\u6253\u5370\u6a21\u5f0f\u5339\u914d\u5230\u7684\u884c\u6570\u636e sed -n \"5 p\" passwd # \u6253\u5370\u7b2c5\u884c\u5339\u914d\u5230\u7684\u884c\u6570\u636e sed -n \"5,10 p\" passwd # \u6253\u5370\u7b2c5\u884c\u5230\u7b2c10\u884c\u5339\u914d\u5230\u7684\u6570\u636e\uff08\u5305\u542b\u7b2c5\u884c\u548c\u7b2c10\u884c\uff09 cat -n passwd | sed -n \"12 p\" # \u4ece\u524d\u9762\u7684\u547d\u4ee4\u6267\u884c\u7ed3\u679c\u4e2d\uff0c\u6253\u5370\u7b2c12\u884c\u5339\u914d\u5230\u7684\u884c\u6570\u636e sed -n \"/root/ p\" passwd # \u6253\u5370\u5339\u914d\u5230root\u7684\u884c\u6570\u636e sed -n \"/^root/ p\" passwd # \u6253\u5370\u5339\u914d\u5230\u4ee5root\u5f00\u5934\u7684\u884c\u6570\u636e sed -n \"/\\/sbin\\/nologin/ p\" passwd # \u6253\u5370\u5339\u914d\u5230`/sbin/nologin`\u7684\u884c\u6570\u636e`/`\u9700\u8981\u8fdb\u884c\u8f6c\u4e49 sed -n \"/www/ p\" passwd # \u6253\u5370\u5339\u914d\u5230`www`\u7684\u884c\u6570\u636e sed -nr \"/w{3} p\" passwd # \u4f7f\u7528\u6269\u5c55\u6b63\u5219\u6253\u5370\u5339\u914d\u5230`www`\u7684\u884c\u6570\u636e # \u65b0\u589e sed -n \"/halt/ a \u65b0\u589e\u6587\u672c\u5185\u5bb9\" passwd # \u5728\u5339\u914d\u884c\u540e\u65b0\u589e`\u65b0\u589e\u6587\u672c\u5185\u5bb9`\uff08\u8fd9\u6761\u547d\u4ee4\u5e76\u6ca1\u6709\u771f\u6b63\u7684\u65b0\u589e,\u53ef\u4ee5\u5f53\u505a\u9a8c\u8bc1\u547d\u4ee4\u662f\u5426\u6b63\u786e\uff09 sed -i \"/halt/ a \u65b0\u589e\u6587\u672c\u5185\u5bb9\" passwd # \u4f7f\u7528 `-i`\u624d\u53ef\u4ee5\u771f\u6b63\u7684\u4fee\u6539\u6587\u4ef6 sed -i \"/halt/ w test.txt\" passwd # \u628a\u5339\u914d\u5230\u7684\u884c\u6570\u636e\uff0c\u5199\u5165\u5230test.txt\u5916\u90e8\u6587\u4ef6\u4e2d # sed_file.sed\u5185\u5bb9\u4e3a`/bash/ a \u5b58\u653e\u52a8\u4f5c\u7684\u6587\u4ef6` sed -i -f sed_file.sed passed # \u52a0\u8f7d\u5b58\u653e\u52a8\u4f5c\u547d\u4ee4\u7684\u6587\u4ef6\u8fdb\u884c\u5339\u914d\u884c\u6570\u636e # \u5220\u9664 sed -i \"/#/ d\" sshd_config # \u5220\u9664\u5339\u914d\u5230\u7684`#`\u6ce8\u91ca sed -i \"/^$/ d\" sshd_config # \u5220\u9664\u5339\u914d\u5230\u7684\u7a7a\u884c # \u66ff\u6362 sed -i \"/\\/sbin\\/nologin/ s/bin/BIN/\" passwd # \u4fee\u6539\u5339\u914d\u5230\u7684`/sbin/nologin`\u884c\u4e2d\uff0c\u9996\u4e2a`bin`\u66f4\u6539\u4e3a`BIN` sed -i \"/\\/sbin\\/nologin/ s/bin/BIN/g\" passwd # \u4fee\u6539\u5339\u914d\u5230\u7684`/sbin/nologin`\u884c\u4e2d\uff0c\u6240\u6709`bin`\u66f4\u6539\u4e3a`BIN` sed -i \"s/^#Port 22/Port 2200/\" sshd_config # \u628a\u5339\u914d\u5230\u7684`Port 22`\u4fee\u6539\u4e3a`Prot 2200` 3\u3001awk \u6587\u672c\u5904\u7406\u5de5\u5177\uff0c\u5904\u7406\u6570\u636e\u5e76\u751f\u6210\u7ed3\u679c\u62a5\u544a awk 'BEGIN{} pattern {commands} END{}' file some command | awk 'BEGIN{} pattern {commands} END{}' \u683c\u5f0f BEGIN{} \u5904\u7406\u6570\u636e\u4e4b\u524d\u6267\u884c\uff0c\u53ea\u6267\u884c\u4e00\u6b21 pattern \u5339\u914d\u6a21\u5f0f {commands} \u5904\u7406\u7684\u547d\u4ee4 END{} \u5904\u7406\u6570\u636e\u4e4b\u540e\u6267\u884c\uff0c\u53ea\u6267\u884c\u4e00\u6b21 \u5185\u7f6e\u53d8\u91cf $0 \u6574\u884c\u5185\u5bb9 $1-$n \u5f53\u524d\u884c\u7684\u7b2c1-n\u4e2a\u5b57\u6bb5 NF(Number Field) \u5f53\u524d\u884c\u5b57\u6bb5\u6570 NR(Number Row) \u5f53\u524d\u884c\u884c\u53f7\uff0c\u4ece1\u5f00\u59cb FS(Field Separator) \u8f93\u5165\u5b57\u6bb5\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u683c\u6216tab\u952e RS(Row Separator) \u8f93\u5165\u884c\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u4e3a\u56de\u8f66\u7b26 OFS(Output Field Separator) \u8f93\u51fa\u5b57\u6bb5\u5206\u5272\u7b26\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u683c ORS(Output Row Separator) \u8f93\u51fa\u884c\u5206\u5272\u7b26\uff0c\u9ed8\u8ba4\u4e3a\u56de\u8f66\u7b26 printf\u683c\u5f0f\u7b26 %s \u5b57\u7b26\u4e32 %d \u5341\u8fdb\u5236\u6570\u5b57 %f \u6d6e\u70b9\u6570 \u4fee\u9970\u7b26 + \u53f3\u5bf9\u9f50 - \u5de6\u5bf9\u9f50 \u5339\u914d\u65b9\u5f0f \u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d /\u6b63\u5219\u8868\u8fbe\u5f0f/ \u5173\u7cfb\u8fd0\u7b97 < <= > >= == != \u7b97\u6570\u8fd0\u7b97 + - * / % ^ ** ++i i-- \u6d41\u7a0b\u63a7\u5236\u8bed\u53e5\uff08\u4e0eshell\u811a\u672c\u8bed\u6cd5\u4e0d\u4e00\u6837\uff09 if if (\u6761\u4ef6) \u52a8\u4f5c else if (\u6761\u4ef6) \u52a8\u4f5c else \u52a8\u4f5c for for (i=0;i<=100,i++) { \u52a8\u4f5c } for (i in awk\u6570\u7ec4){ echo $i } while while (\u6761\u4ef6) { \u52a8\u4f5c } \u51fd\u6570 \u5b57\u7b26\u4e32\u51fd\u6570 length(str) tolower(str) toupper(str) \u4f8b\u5b50 awk '{print $0}' stu.txt # \u8bfb\u53d6\u6240\u6709\u7684\u5185\u5bb9 awk '{print $1}' stu.txt # \u8bfb\u53d6\u7b2c\u4e00\u5217\u6570\u636e awk '{print NF}' stu.txt # \u83b7\u53d6\u6bcf\u4e00\u884c\u7684\u5b57\u6bb5\u6570 awk '{print NR}' stu.txt # \u83b7\u53d6\u5f53\u524d\u884c\u53f7 awk -F\":\" '{print $1}' passwd # \u6307\u5b9a\u4ee5`:`\u4e3a\u5206\u5272\u7b26\u7684\u7b2c\u4e00\u5217\u6570\u636e awk -F\":\" '/root/ {print $(NF-1)}' passwd # \u6307\u5b9a\u4ee5`:`\u4e3a\u5206\u5272\u7b26\u7684\u5012\u6570\u7b2c\u4e8c\u5217\u6570\u636e awk -F\":\" '/^halt/,/^ftp/ {print $1}' passwd # \u6307\u5b9a\u4ee5`:`\u4e3a\u5206\u5272\u7b26\u7684\u4ee5`halt`\u5f00\u5934\u5230\u4ee5`ftp`\u5f00\u5934\u884c\u7684\u7b2c\u4e00\u5217\u6570\u636e awk 'BEGIN{FS=\":\"} /root/ {print $1}' passwd # \u4ee5`:`\u8fdb\u884c\u5206\u5272\uff0c\u83b7\u53d6\u5305\u542broot\u7684\u884c\u7684\u7b2c\u4e00\u5217\u6570\u636e awk -F\":\" 'NR == 5 {print}' passwd # \u83b7\u53d6\u7b2c5\u884c\u6570\u636e awk -F\":\" 'NR >= 5 && NR <=10 {print}' passwd # \u83b7\u53d6\u7b2c5-10\u884c\u6570\u636e awk -F\":\" 'NR == 5, NR ==10 {print}' passwd # \u83b7\u53d6\u7b2c5-10\u884c\u6570\u636e awk -F: '{count++} END{print count}' passwd # \u83b7\u53d6\u6587\u4ef6\u603b\u884c\u6570\uff0ccount\u5728awk\u4e2d\u4f1a\u81ea\u52a8\u8fdb\u884c\u5b9a\u4e49\u53d8\u91cf\uff08wc -l passwd \u83b7\u53d6\u6587\u4ef6\u603b\u884c\u6570 \u884c\u6570 \u6587\u4ef6\uff09 awk -F= 'NR == 1 {print $2}' /etc/os-release | awk '{print $1}' |sed 's/\\\"//g' # \u83b7\u53d6Linux\u53d1\u884c\u7248\u672c awk -F: 'BEGIN{printf \"%-20s %-20s\\n\",\"BEGIN\",\"END\"} NR >1 {count++; printf \"%-20s %-20s\\n\",$1,$(NF)} END{printf \"%-20s %-20s\\n\",\"total\",count}' /etc/passwd # \u4f7f\u7528`BEGIN{}`\u7ed9\u7ed3\u679c\u6dfb\u52a0title,\u4f7f\u7528`count++`\u8ba1\u7b97\u603b\u6570\uff0c\u4f7f\u7528`END{}`\u628a\u603b\u6570\u6dfb\u52a0\u5230\u672b\u5c3e(%-20s:\u8868\u793a\u5b57\u7b26\u4e32\u7684\u6307\u5b9a\u957f\u5ea6\u4e3a20\uff0c\u4e0d\u6ee120\u5b57\u7b26\uff0c\u7a7a\u683c\u586b\u5145\uff0c-\u8868\u793a\u5de6\u8fb9\u5bf9\u9f50) awk -F: -f file.awk /etc/passwd # \u8ddf\u4e0a\u9762\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\uff0c\u628a\u590d\u6742\u7684\u6307\u4ee4\u653e\u5728\u4e86file.awk\u6587\u4ef6\u4e2d # file.awk:(\u5728\u6587\u4ef6\u4e2d\u53ef\u4ee5\u4f7f\u7528if for while\u6d41\u7a0b\u63a7\u5236\u8bed\u53e5) ---------------------------------------------------- BEGIN{ printf \"%-20s %-20s\\n\",\"BEGIN\",\"END\" } { if (NR > 1) { count++; printf \"%-20s %-20s\\n\",$1,$(NF) } } END{ printf \"%-20s %-20s\\n\",\"total\",count } ----------------------------------------------------","title":"shell\u7b14\u8bb0"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#shell","text":"","title":"shell\u7b14\u8bb0"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_1","text":"","title":"\u4e00\u3001\u5e38\u7528\u547d\u4ee4"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#1head","text":"\u9ed8\u8ba4\u83b7\u53d6\u6587\u4ef6\u524d10\u884c -n \u83b7\u53d6\u6307\u5b9a\u7684\u884c\u6570 head -n 3 /etc/passwd head -3 /etc/passwd -c \u83b7\u53d6\u524dn\u4e2a\u5b57\u7b26 head -c 3 /etc/passwd","title":"1.head"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#2tail","text":"\u9ed8\u8ba4\u83b7\u53d6\u6587\u4ef6\u540e10\u884c -n \u83b7\u53d6\u6307\u5b9a\u7684\u884c\u6570 tail -n 3 /etc/passwd tail -3 /etc/passwd -c \u83b7\u53d6\u540en\u4e2a\u5b57\u7b26 tail -c 3 /etc/passwd","title":"2.tail"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#3cut","text":"\u53d6\u51fa\u6587\u4ef6\u5236\u5b9a\u7684\u5217 \u9ed8\u8ba4\u4ee5\u7a7a\u683c\u6216\u8005tab\u952e\u8fdb\u884c\u5206\u5272\uff08\u4e0d\u652f\u6301\u4e0d\u89c4\u5219\u7684\u7a7a\u683c\uff09 - -d \u6307\u5b9a\u5206\u5272\u7b26 - -f \u6307\u5b9a\u83b7\u53d6\u7684\u5217\u53f7(\u83b7\u53d6\u7b2c\u4e8c\u548c\u7b2c\u56db\u5217\uff1a-f2,4)","title":"3.cut"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#4uniq","text":"\u53bb\u9664\u91cd\u590d\u7684\u5185\u5bb9 - -d \u4ec5\u6253\u5370\u6709\u91cd\u590d\u7684\u5143\u7d20\uff08duplicate\uff09 - -c \u6253\u5370\u5143\u7d20\u91cd\u590d\u7684\u4e2a\u6570","title":"4.uniq"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#5sort","text":"\u5bf9\u6587\u672c\u7684\u5185\u5bb9\u8fdb\u884c\u6392\u5e8f \u9ed8\u8ba4\u4ee5\u5b57\u7b26\u7684ASCII\u7801\u6570\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f - -n \u4ee5\u6570\u503c\u5927\u5c0f\u6392\u5e8f - -r \u5012\u5e8f","title":"5.sort"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#6wc","text":"\u8ba1\u7b97\u6587\u672c\u6570\u91cf - wc -l \u6253\u5370\u884c\u6570 - wc -w \u6253\u5370\u5355\u8bcd\u6570 - wc -c \u6253\u5370\u5b57\u8282\u6570 - wc -L \u6253\u5370\u6700\u957f\u884c\u7684\u5b57\u8282\u6570","title":"6.wc"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_2","text":"","title":"\u4e8c\u3001\u53d8\u91cf"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#1","text":"","title":"1\u3001\u5b9a\u4e49\u53d8\u91cf\uff08\u5b9a\u4e49\u7684\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u672c\u5730\u53d8\u91cf\uff09"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_3","text":"\u53d8\u91cf\u540d=\u53d8\u91cf\u503c \u53d8\u91cf\u503c\u5fc5\u987b\u662f\u4e00\u4e2a\u6574\u4f53\uff0c\u4e2d\u95f4\u6ca1\u6709\u7279\u6b8a\u5b57\u7b26 \u7b49\u53f7\u4e24\u4fa7\u4e0d\u80fd\u6709\u7a7a\u683c","title":"\u65b9\u5f0f\u4e00\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_4","text":"\u53d8\u91cf\u540d='\u53d8\u91cf\u503c' \u770b\u5230\u7684\u5185\u5bb9\uff0c\u5c31\u8f93\u51fa\u4ec0\u4e48\u5185\u5bb9","title":"\u65b9\u5f0f\u4e8c\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_5","text":"\u53d8\u91cf\u540d=\"\u53d8\u91cf\u503c\"","title":"\u65b9\u5f0f\u4e09\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_6","text":"\u53d8\u91cf\u540d=$(linux\u547d\u4ee4) \u53d8\u91cf\u540d=`linux\u547d\u4ee4` \u5e38\u7528\u65b9\u6cd5","title":"\u65b9\u5f0f\u56db\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_7","text":"\u5982\u679c\u53d8\u91cf\u503c\u4e2d\u6709\u7a7a\u683c\u8981\u7528\u653e\u5230\u5f15\u53f7\u4e2d \u5355\u5f15\u53f7\u4e2d\u7684\u53d8\u91cf\u5982\u679c\u6709\u5f15\u7528\u522b\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u6253\u5370\u51fa\u6765\u7684\u503c\u4e0d\u4f1a\u8fdb\u884c\u89e3\u6790 \u53cc\u5f15\u53f7\u4e2d\u7684\u53d8\u91cf\u5982\u679c\u6709\u5f15\u7528\u522b\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u6253\u5370\u7684\u65f6\u5019\u4f1a\u8fdb\u884c\u89e3\u6790 name='aa bb' echo $name # aa bb var='$name' echo $var # $name var=\"$name\" echo $var # aa bb","title":"\u5b9a\u4e49\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u7684\u533a\u522b\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#2","text":"\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4(env)\u67e5\u770b\u73af\u5883\u53d8\u91cf\uff08\u53ea\u663e\u793a\u5168\u5c40\u53d8\u91cf\uff09","title":"2\u3001\u5168\u5c40\u53d8\u91cf"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_8","text":"","title":"\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_9","text":"\u53d8\u91cf=\u503c export \u53d8\u91cf","title":"\u65b9\u5f0f\u4e00\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_10","text":"export \u53d8\u91cf=\u503c","title":"\u65b9\u5f0f\u4e8c\uff08\u6700\u5e38\u7528\uff09\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#3","text":"\u53ef\u4ee5\u5728 ~/.bashrc\u4e2d\u8fdb\u884c\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf \u4e5f\u53ef\u4ee5\u5728 ~/.bash_profile\u4e2d\u5b9a\u4e49","title":"3\u3001\u5b9a\u4e49\u6c38\u4e45\u53d8\u91cf"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#4","text":"","title":"4\u3001\u67e5\u770b\u53d8\u91cf"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_11","text":"echo $\u53d8\u91cf\u540d","title":"\u65b9\u5f0f\u4e00\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_12","text":"echo \"$\u53d8\u91cf\u540d\"","title":"\u65b9\u5f0f\u4e8c\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_13","text":"echo -e \"one\\ntwo\\tthress\"","title":"\u8f93\u51fa\u8fdb\u884c\u8f6c\u4e49"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_14","text":"echo -n \"one two\"; echo -n \"333\"","title":"\u8f93\u51fa\u4e0d\u6362\u884c"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_15","text":"echo -e \"\\e[031mYES\\e[0m\" # \u7ea2\u8272 032 # \u7eff\u8272 034 # \u84dd\u8272","title":"\u8f93\u51fa\u5e26\u989c\u8272\u7684\u5b57\u7b26"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#5","text":"$0 \u83b7\u53d6\u5f53\u524d\u6267\u884c\u7684shell\u811a\u672c\u6587\u4ef6\u540d\uff0c\u5305\u62ec\u811a\u672c\u8def\u5f84 $n \u83b7\u53d6\u5f53\u524d\u6267\u884c\u7684shell\u811a\u672c\u7684\u7b2cn\u4e2a\u53c2\u6570\u503c\uff0cn=1...9\uff0c\u5982\u679cn\u5927\u4e8e9\u5c31\u8981\u7528\u5927\u62ec\u53f7\u62ec\u8d77\u6765${10} $# \u83b7\u53d6\u5f53\u524dshell\u547d\u4ee4\u884c\u4e2d\u53c2\u6570\u7684\u603b\u4e2a\u6570 $? \u83b7\u53d6\u6267\u884c\u4e0a\u4e00\u4e2a\u6307\u4ee4\u7684\u8fd4\u56de\u503c(0\u4e3a\u6210\u529f\uff0c\u975e0\u4e3a\u5931\u8d25) $* $@","title":"5\u3001\u5185\u7f6e\u53d8\u91cf"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#6","text":"+ - * / % < <= > >= = !=","title":"6\u3001\u6570\u503c\u8fd0\u7b97"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_16","text":"$((\u7b97\u6570\u8868\u8fbe\u5f0f)) \u53d8\u91cf\u53ef\u4ee5\u4e0d\u52a0$","title":"\u65b9\u5f0f\u4e00\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_17","text":"expr \u7b97\u6570\u8868\u8fbe\u5f0f \u5982\u679c\u9047\u5230 < > \u9700\u8981\u8fdb\u884c\u8f6c\u4e49 /< />","title":"\u65b9\u5f0f\u4e8c\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_18","text":"bc scale=3 \u8868\u793a\u4fdd\u75593\u4f4d\u5c0f\u6570 echo \"scale=3; 10/3\" | bc","title":"\u65b9\u5f0f\u4e09\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#7","text":"","title":"7\u3001\u6761\u4ef6\u8868\u8fbe\u5f0f"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_19","text":"test [ \u6761\u4ef6\u8868\u8fbe\u5f0f ]","title":"\u683c\u5f0f\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#1_1","text":"\u6761\u4ef6\u6210\u7acb\uff0c\u8fd4\u56de0 \u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u8fd4\u56de1","title":"1. \u8fd4\u56de\u503c"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#2_1","text":"-f \u5224\u65ad\u8f93\u5165\u7684\u5185\u5bb9\u662f\u5426\u662f\u4e00\u4e2a\u6587\u4ef6 -d \u5224\u65ad\u8f93\u5165\u5185\u5bb9\u662f\u5426\u662f\u4e00\u4e2a\u76ee\u5f55 -x \u5224\u65ad\u8f93\u5165\u5185\u5bb9\u662f\u5426\u53ef\u6267\u884c -e \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728 -r -w","title":"2. \u6587\u4ef6\u8868\u8fbe\u5f0f"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#3_1","text":"n1 -eq n2 \u76f8\u7b49 n1 -gt n2 \u5927\u4e8e n1 -lt n2 \u5c0f\u4e8e n1 -ne n2 \u4e0d\u7b49\u4e8e","title":"3. \u6570\u503c\u64cd\u4f5c\u7b26"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#4_1","text":"str1 == str2 str1\u548cstr2\u5b57\u7b26\u4e32\u5185\u5bb9\u4e00\u81f4 str1 != str2 str1\u548cstr2\u5b57\u7b26\u4e32\u5185\u5bb9\u4e0d\u4e00\u81f4\uff0c!\u8868\u793a\u76f8\u53cd\u7684\u610f\u601d","title":"4. \u5b57\u7b26\u4e32\u6bd4\u8f83"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#5_1","text":"&& \u548c || -a \u4e0e -o \u6216","title":"5. \u903b\u8f91\u8868\u8fbe\u5f0f"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#read","text":"read\u5982\u679c\u4e0d\u6dfb\u52a0\u4efb\u4f55\u53c2\u6570\uff0c\u7528\u6237\u8f93\u5165\u7684\u5185\u5bb9\u4f1a\u81ea\u52a8\u5b58\u653e\u5230$REPLY\u5185\u7f6e\u53d8\u91cf\u4e2d read\u5982\u679c\u6dfb\u52a0\u53c2\u6570\u90a3\u4e48\u4f1a\u81ea\u52a8\u590d\u5236 -p \u63d0\u793a\u7528\u6237\u8f93\u5165 read -p \"\u8bf7\u8f93\u5165\u5185\u5bb9\uff1a\" -n \u4e2a\u6570\uff0c\u6307\u5b9a\u63a5\u53d7\u7528\u6237\u8f93\u5165\u7684\u4e2a\u6570 -s \u6307\u5b9a\u4e0d\u663e\u793a\u7528\u6237\u8f93\u5165\u7684\u5185\u5bb9 -e \u5982\u679c\u6709\u9000\u683c\u952e\u4e0d\u4f1a\u663e\u793a^H","title":"read\u7528\u6237\u8f93\u5165"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#shell_1","text":"","title":"\u4e09\u3001shell\u811a\u672c\u683c\u5f0f"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#1_2","text":"","title":"1. \u683c\u5f0f\u8981\u6c42"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#1shell","text":"# !/bin/bash # Author: Desire # Date: 2021-03-29","title":"1\uff09\u5728\u6587\u4ef6\u9996\u884c\u6307\u5b9a\u6267\u884cshell\u7684\u7a0b\u5e8f\u4ee5\u53ca\u76f8\u5173\u8bf4\u660e"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#2shellsh","text":"","title":"2\uff09shell\u811a\u672c\u6587\u4ef6\u540e\u7f00\uff0c.sh"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#3exit","text":"","title":"3\uff09\u811a\u672c\u6267\u884c\u5931\u8d25\u65f6\uff0c\u4f7f\u7528exit\u8fd4\u56de\u975e\u96f6\u503c\uff0c\u6765\u9000\u51fa\u7a0b\u5e8f"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#44","text":"","title":"4\uff09\u9ed8\u8ba4\u7f29\u8fdb4\u4e2a\u7a7a\u683c"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#5shell","text":"","title":"5\uff09shell\u811a\u672c\u547d\u540d\u7b80\u5355\uff0c\u6709\u610f\u4e49\uff0c\u89c1\u540d\u77e5\u610f"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#2_2","text":"","title":"2. \u6267\u884c\u811a\u672c"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#1shell_1","text":"chmod u+x one.sh \u7ed9\u5f53\u524d\u7528\u6237\u6307\u5b9a\u6267\u884c\u6743\u9650 chmod +x one.sh \u7ed9\u6240\u6709\u7528\u6237\u6307\u5b9a\u6267\u884c\u6743\u9650","title":"1\uff09\u7ed9shell\u811a\u672c\u589e\u52a0\u6267\u884c\u6743\u9650"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#2shell","text":"bash one.sh sh one.sh source one.sh # \u8bbe\u7f6e\u6743\u9650\u540e\u624d\u53ef\u4ee5\u4f7f\u7528 ./one.sh","title":"2\uff09\u6267\u884cshell\u811a\u672c"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#3_2","text":"bash -x one.sh","title":"3\uff09\u8c03\u8bd5\u6a21\u5f0f\u6267\u884c"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#3_3","text":"","title":"3. \u6ce8\u91ca"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_20","text":"#","title":"\u5355\u884c\u6ce8\u91ca"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_21","text":":<<! \u6ce8\u91ca\u5185\u5bb9 !","title":"\u591a\u884c\u6ce8\u91ca"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_22","text":"","title":"\u56db\u3001\u51fd\u6570"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#1_3","text":"","title":"1. \u683c\u5f0f"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_23","text":"\u51fd\u6570\u540d() { \u547d\u4ee41 \u547d\u4ee42 }","title":"\u683c\u5f0f\u4e00\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_24","text":"function \u51fd\u6570\u540d { \u547d\u4ee41 \u547d\u4ee42 }","title":"\u683c\u5f0f\u4e8c\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#2_3","text":"is_online() { ping -c1 $1 &> /dev/null if [ $? -eq 0 ];then echo \"$1\u4e3b\u673a\u5728\u7ebf\" else echo \"$1\u4e3b\u673a\u4e0d\u5728\u7ebf\" fi } is_online www.baidu.com","title":"2. \u51fd\u6570\u4f20\u53c2"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#3-shell","text":"------defind_func.sh-------- is_online() { ping -c1 $1 &> /dev/null if [ $? -eq 0 ];then echo \"$1\u4e3b\u673a\u5728\u7ebf\" else echo \"$1\u4e3b\u673a\u4e0d\u5728\u7ebf\" fi } is_online $1 ------\u547d\u4ee4\u884c\u6267\u884cshell\u811a\u672c----- bash defind_func.sh www.baidu.com","title":"3. shell\u811a\u672c\u547d\u4ee4\u4f20\u9012\u53c2\u6570"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#breakcontinue","text":"","title":"\u4e94\u3001\u6d41\u7a0b\u63a7\u5236(break\u548ccontinue\u5728\u5faa\u73af\u4e2d\u4e5f\u662f\u53ef\u4ee5\u7528\u7684)"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#1if","text":"","title":"1\u3001if"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_25","text":"if [ \u6761\u4ef61 ] then \u6307\u4ee41 elif [ \u6761\u4ef62 ] then \u6307\u4ee42 else \u6307\u4ee43 fi","title":"\u65b9\u5f0f\u4e00\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_26","text":"if [ \u6761\u4ef61 ]; then \u6307\u4ee41 elif [ \u6761\u4ef62 ]; then \u6307\u4ee42 else \u6307\u4ee43 fi","title":"\u65b9\u5f0f\u4e8c:"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#2for","text":"","title":"2\u3001for"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_27","text":"for \u503c in \u5217\u8868 do \u6267\u884c\u8bed\u53e5 done","title":"\u683c\u5f0f\u4e00\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_28","text":"for ((i=1,i<10;i++)) do echo \"$i\" done","title":"\u683c\u5f0f\u4e8c\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#3while","text":"","title":"3\u3001while"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_29","text":"while \u6761\u4ef6 do \u6267\u884c\u8bed\u53e5 done","title":"\u53ea\u8981\u6761\u4ef6\u6ee1\u8db3\uff0c\u5c31\u4e00\u76f4\u5faa\u73af"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#4until","text":"","title":"4\u3001until"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_30","text":"until \u6761\u4ef6 do \u6267\u884c\u8bed\u53e5 done","title":"\u53ea\u8981\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5c31\u4e00\u76f4\u5faa\u73af"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#5case","text":"case \u53d8\u91cf\u540d in \u503c1) \u6307\u4ee41 ;; \u503c2) \u6307\u4ee42 ;; \u503c3) \u6307\u4ee43 ;; *) \u6307\u4ee44 ;; esac","title":"5\u3001case"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_31","text":"","title":"\u516d\u3001\u6570\u7ec4"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#1_4","text":"\u4e00\u5bf9\u62ec\u53f7\u8868\u793a\u662f\u6570\u7ec4\uff0c\u6570\u7ec4\u5143\u7d20\u7528\u201c\u7a7a\u683c\u201d\u7b26\u53f7\u5206\u5272\u5f00\uff0c\u5f15\u7528\u4e2a\u6570\u7ec4\u65f6\u4ece\u5e8f\u53f70\u5f00\u59cb","title":"1\u3001\u6570\u7ec4\u7684\u5b9a\u4e49"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_32","text":"array=(10 20 30 40)","title":"\u65b9\u5f0f\u4e00\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_33","text":"array[0]=10 array[1]=20 array[2]=30 array[3]=40","title":"\u65b9\u5f0f\u4e8c\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_34","text":"var=\"10 20 30 40\"; array=($var)","title":"\u65b9\u5f0f\u4e09\uff1a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#2_4","text":"","title":"2\u3001\u6570\u7ec4\u64cd\u4f5c"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#1n","text":"\u6570\u7ec4\u7684\u5e8f\u53f7\u662f\u4ece0\u5f00\u59cb\u8ba1\u7b97\uff0c\u8d85\u51fa\u7d22\u5f15\u4e0d\u4f1a\u62a5\u9519 echo ${array[n]}","title":"1\uff09\u663e\u793a\u6570\u7ec4\u4e2d\u7b2cn\u9879"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#2_5","text":"echo ${array[@]} OR echo ${array[*]}","title":"2\uff09\u663e\u793a\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#3_4","text":"echo ${#array[@]} OR echo ${#array[*]}","title":"3\uff09\u663e\u793a\u6570\u7ec4\u957f\u5ea6"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#4n","text":"unset\u4ec5\u4ec5\u53ea\u6e05\u695aarray[n]\u7684\u503c\uff0c\u5e76\u6ca1\u6709\u5c06array[n]\u5220\u9664\u6389 unset array[1]","title":"4\uff09\u5220\u9664\u6570\u7ec4\u4e2d\u7b2cn\u9879\u5143\u7d20"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#5_2","text":"unset array","title":"5\uff09\u5220\u9664\u6574\u4e2a\u6570\u7ec4"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#63","text":"","title":"6\uff09\u8f93\u51fa\u6570\u7ec4\u7684\u4ece\u7b2c\u4e00\u9879\u5f00\u59cb\u957f\u5ea6\u4e3a3\u7684\u6570\u7ec4"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#or","text":"echo ${array[@]:0:3}","title":"${\u6570\u7ec4\u540d[@ or *]:\u8d77\u59cb\u4f4d\u7f6e:\u957f\u5ea6}"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#701","text":"","title":"7\uff09\u5c06\u6570\u7ec4\u4e2d\u76840\u66ff\u6362\u62101"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#or_1","text":"echo ${array[@]/0/1}","title":"${\u6570\u7ec4\u540d[@ or /*]/\u67e5\u627e\u5b57\u7b26/\u66ff\u6362\u5b57\u7b26}"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#8","text":"array[${#array[@]}]=1234; echo ${array[@]}","title":"8\uff09\u5728\u6570\u7ec4\u8ffd\u52a0\u65b0\u7684\u5143\u7d20"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_35","text":"grep sed awk","title":"\u4e03\u3001\u6587\u672c\u5904\u7406\u4e09\u5251\u5ba2"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#1grep","text":"","title":"1\u3001grep"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_36","text":"grep [option] pattern [file1,file2,...] come command | grep [option] pattern -i \u5ffd\u7565\u5927\u5c0f\u5199 -c \u53ea\u8f93\u51fa\u5339\u914d\u884c\u7684\u6570\u91cf -n \u663e\u793a\u884c\u53f7 -r \u9012\u5f52\u641c\u7d22 -E \u652f\u6301\u62d3\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f -w \u5339\u914d\u6574\u4e2a\u5355\u8bcd -l \u53ea\u5217\u51fa\u5339\u914d\u7684\u6587\u4ef6\u540d -F \u4e0d\u652f\u6301\u6b63\u5219\uff0c\u6309\u5b57\u7b26\u4e32\u5b57\u9762\u610f\u601d\u8fdb\u884c\u5339\u914d","title":"\u67e5\u627e\u6587\u4ef6\u91cc\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#2sed","text":"","title":"2\u3001sed"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_37","text":"sed [option] \"pattern command\" file some command | sed [option] \"pattern command\" -n \u53ea\u6253\u5370\u6a21\u5f0f\u5339\u914d\u7684\u884c -f \u52a0\u8f7d\u5b58\u653e\u52a8\u4f5c\u7684\u6587\u4ef6 -r \u652f\u6301\u62d3\u5c55\u6b63\u5219 -i \u652f\u6301\u4fee\u6539\u6587\u4ef6","title":"\u6d41\u7f16\u8f91\u5668\uff0c\u5bf9\u6587\u4ef6\u9010\u884c\u8fdb\u884c\u5904\u7406"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#pattern","text":"5 \u53ea\u5904\u7406\u7b2c5\u884c 5,10 \u53ea\u5904\u7406\u7b2c5\u884c\u5230\u7b2c10\u884c /pattern1/ \u53ea\u5904\u7406\u80fd\u5339\u914dpattern1\u7684\u884c /pattern1/,/pattern2/ \u53ea\u5904\u7406\u4ece\u5339\u914dpattern1\u7684\u884c\u5230\u5339\u914dpattern2\u7684\u884c","title":"pattern\u6a21\u5f0f"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#command","text":"\u67e5\u8be2 p \u6253\u5370 \u65b0\u589e a \u5728\u5339\u914d\u884c\u540e\u65b0\u589e i \u5728\u5339\u914d\u884c\u524d\u65b0\u589e r \u5916\u90e8\u6587\u4ef6\u8bfb\u5165\uff0c\u884c\u540e\u65b0\u589e w \u5339\u914d\u884c\u5199\u5165\u5916\u90e8\u6587\u4ef6 \u5220\u9664 d \u66ff\u6362 s/old/new/ \u53ea\u4fee\u6539\u5339\u914d\u884c\u4e2d\u7b2c\u4e00\u4e2aold s/old/new/g \u4fee\u6539\u5339\u914d\u884c\u4e2d\u6240\u6709\u7684old s/old/new/ig \u5ffd\u7565\u5927\u5c0f\u5199","title":"command\u547d\u4ee4"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_38","text":"# \u67e5\u8be2 sed \"p\" passwd # \u6253\u5370\u6e90\u884c\u4fe1\u606f\u548c\u6a21\u5f0f\u5339\u914d\u7684\u884c\uff08\u884c\u6253\u5370\u4fe1\u606f\u4f1a\u6709\u91cd\u590d\u7684\uff09 sed -n \"p\" passwd # \u53ea\u6253\u5370\u6a21\u5f0f\u5339\u914d\u5230\u7684\u884c\u6570\u636e sed -n \"5 p\" passwd # \u6253\u5370\u7b2c5\u884c\u5339\u914d\u5230\u7684\u884c\u6570\u636e sed -n \"5,10 p\" passwd # \u6253\u5370\u7b2c5\u884c\u5230\u7b2c10\u884c\u5339\u914d\u5230\u7684\u6570\u636e\uff08\u5305\u542b\u7b2c5\u884c\u548c\u7b2c10\u884c\uff09 cat -n passwd | sed -n \"12 p\" # \u4ece\u524d\u9762\u7684\u547d\u4ee4\u6267\u884c\u7ed3\u679c\u4e2d\uff0c\u6253\u5370\u7b2c12\u884c\u5339\u914d\u5230\u7684\u884c\u6570\u636e sed -n \"/root/ p\" passwd # \u6253\u5370\u5339\u914d\u5230root\u7684\u884c\u6570\u636e sed -n \"/^root/ p\" passwd # \u6253\u5370\u5339\u914d\u5230\u4ee5root\u5f00\u5934\u7684\u884c\u6570\u636e sed -n \"/\\/sbin\\/nologin/ p\" passwd # \u6253\u5370\u5339\u914d\u5230`/sbin/nologin`\u7684\u884c\u6570\u636e`/`\u9700\u8981\u8fdb\u884c\u8f6c\u4e49 sed -n \"/www/ p\" passwd # \u6253\u5370\u5339\u914d\u5230`www`\u7684\u884c\u6570\u636e sed -nr \"/w{3} p\" passwd # \u4f7f\u7528\u6269\u5c55\u6b63\u5219\u6253\u5370\u5339\u914d\u5230`www`\u7684\u884c\u6570\u636e # \u65b0\u589e sed -n \"/halt/ a \u65b0\u589e\u6587\u672c\u5185\u5bb9\" passwd # \u5728\u5339\u914d\u884c\u540e\u65b0\u589e`\u65b0\u589e\u6587\u672c\u5185\u5bb9`\uff08\u8fd9\u6761\u547d\u4ee4\u5e76\u6ca1\u6709\u771f\u6b63\u7684\u65b0\u589e,\u53ef\u4ee5\u5f53\u505a\u9a8c\u8bc1\u547d\u4ee4\u662f\u5426\u6b63\u786e\uff09 sed -i \"/halt/ a \u65b0\u589e\u6587\u672c\u5185\u5bb9\" passwd # \u4f7f\u7528 `-i`\u624d\u53ef\u4ee5\u771f\u6b63\u7684\u4fee\u6539\u6587\u4ef6 sed -i \"/halt/ w test.txt\" passwd # \u628a\u5339\u914d\u5230\u7684\u884c\u6570\u636e\uff0c\u5199\u5165\u5230test.txt\u5916\u90e8\u6587\u4ef6\u4e2d # sed_file.sed\u5185\u5bb9\u4e3a`/bash/ a \u5b58\u653e\u52a8\u4f5c\u7684\u6587\u4ef6` sed -i -f sed_file.sed passed # \u52a0\u8f7d\u5b58\u653e\u52a8\u4f5c\u547d\u4ee4\u7684\u6587\u4ef6\u8fdb\u884c\u5339\u914d\u884c\u6570\u636e # \u5220\u9664 sed -i \"/#/ d\" sshd_config # \u5220\u9664\u5339\u914d\u5230\u7684`#`\u6ce8\u91ca sed -i \"/^$/ d\" sshd_config # \u5220\u9664\u5339\u914d\u5230\u7684\u7a7a\u884c # \u66ff\u6362 sed -i \"/\\/sbin\\/nologin/ s/bin/BIN/\" passwd # \u4fee\u6539\u5339\u914d\u5230\u7684`/sbin/nologin`\u884c\u4e2d\uff0c\u9996\u4e2a`bin`\u66f4\u6539\u4e3a`BIN` sed -i \"/\\/sbin\\/nologin/ s/bin/BIN/g\" passwd # \u4fee\u6539\u5339\u914d\u5230\u7684`/sbin/nologin`\u884c\u4e2d\uff0c\u6240\u6709`bin`\u66f4\u6539\u4e3a`BIN` sed -i \"s/^#Port 22/Port 2200/\" sshd_config # \u628a\u5339\u914d\u5230\u7684`Port 22`\u4fee\u6539\u4e3a`Prot 2200`","title":"\u4f8b\u5b50"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#3awk","text":"","title":"3\u3001awk"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_39","text":"awk 'BEGIN{} pattern {commands} END{}' file some command | awk 'BEGIN{} pattern {commands} END{}'","title":"\u6587\u672c\u5904\u7406\u5de5\u5177\uff0c\u5904\u7406\u6570\u636e\u5e76\u751f\u6210\u7ed3\u679c\u62a5\u544a"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_40","text":"BEGIN{} \u5904\u7406\u6570\u636e\u4e4b\u524d\u6267\u884c\uff0c\u53ea\u6267\u884c\u4e00\u6b21 pattern \u5339\u914d\u6a21\u5f0f {commands} \u5904\u7406\u7684\u547d\u4ee4 END{} \u5904\u7406\u6570\u636e\u4e4b\u540e\u6267\u884c\uff0c\u53ea\u6267\u884c\u4e00\u6b21","title":"\u683c\u5f0f"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_41","text":"$0 \u6574\u884c\u5185\u5bb9 $1-$n \u5f53\u524d\u884c\u7684\u7b2c1-n\u4e2a\u5b57\u6bb5 NF(Number Field) \u5f53\u524d\u884c\u5b57\u6bb5\u6570 NR(Number Row) \u5f53\u524d\u884c\u884c\u53f7\uff0c\u4ece1\u5f00\u59cb FS(Field Separator) \u8f93\u5165\u5b57\u6bb5\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u683c\u6216tab\u952e RS(Row Separator) \u8f93\u5165\u884c\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u4e3a\u56de\u8f66\u7b26 OFS(Output Field Separator) \u8f93\u51fa\u5b57\u6bb5\u5206\u5272\u7b26\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u683c ORS(Output Row Separator) \u8f93\u51fa\u884c\u5206\u5272\u7b26\uff0c\u9ed8\u8ba4\u4e3a\u56de\u8f66\u7b26","title":"\u5185\u7f6e\u53d8\u91cf"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#printf","text":"%s \u5b57\u7b26\u4e32 %d \u5341\u8fdb\u5236\u6570\u5b57 %f \u6d6e\u70b9\u6570","title":"printf\u683c\u5f0f\u7b26"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_42","text":"+ \u53f3\u5bf9\u9f50 - \u5de6\u5bf9\u9f50","title":"\u4fee\u9970\u7b26"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_43","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d /\u6b63\u5219\u8868\u8fbe\u5f0f/ \u5173\u7cfb\u8fd0\u7b97 < <= > >= == != \u7b97\u6570\u8fd0\u7b97 + - * / % ^ ** ++i i--","title":"\u5339\u914d\u65b9\u5f0f"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#shell_2","text":"if if (\u6761\u4ef6) \u52a8\u4f5c else if (\u6761\u4ef6) \u52a8\u4f5c else \u52a8\u4f5c for for (i=0;i<=100,i++) { \u52a8\u4f5c } for (i in awk\u6570\u7ec4){ echo $i } while while (\u6761\u4ef6) { \u52a8\u4f5c }","title":"\u6d41\u7a0b\u63a7\u5236\u8bed\u53e5\uff08\u4e0eshell\u811a\u672c\u8bed\u6cd5\u4e0d\u4e00\u6837\uff09"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_44","text":"","title":"\u51fd\u6570"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_45","text":"length(str) tolower(str) toupper(str)","title":"\u5b57\u7b26\u4e32\u51fd\u6570"},{"location":"shell/shell%E7%AC%94%E8%AE%B0/#_46","text":"awk '{print $0}' stu.txt # \u8bfb\u53d6\u6240\u6709\u7684\u5185\u5bb9 awk '{print $1}' stu.txt # \u8bfb\u53d6\u7b2c\u4e00\u5217\u6570\u636e awk '{print NF}' stu.txt # \u83b7\u53d6\u6bcf\u4e00\u884c\u7684\u5b57\u6bb5\u6570 awk '{print NR}' stu.txt # \u83b7\u53d6\u5f53\u524d\u884c\u53f7 awk -F\":\" '{print $1}' passwd # \u6307\u5b9a\u4ee5`:`\u4e3a\u5206\u5272\u7b26\u7684\u7b2c\u4e00\u5217\u6570\u636e awk -F\":\" '/root/ {print $(NF-1)}' passwd # \u6307\u5b9a\u4ee5`:`\u4e3a\u5206\u5272\u7b26\u7684\u5012\u6570\u7b2c\u4e8c\u5217\u6570\u636e awk -F\":\" '/^halt/,/^ftp/ {print $1}' passwd # \u6307\u5b9a\u4ee5`:`\u4e3a\u5206\u5272\u7b26\u7684\u4ee5`halt`\u5f00\u5934\u5230\u4ee5`ftp`\u5f00\u5934\u884c\u7684\u7b2c\u4e00\u5217\u6570\u636e awk 'BEGIN{FS=\":\"} /root/ {print $1}' passwd # \u4ee5`:`\u8fdb\u884c\u5206\u5272\uff0c\u83b7\u53d6\u5305\u542broot\u7684\u884c\u7684\u7b2c\u4e00\u5217\u6570\u636e awk -F\":\" 'NR == 5 {print}' passwd # \u83b7\u53d6\u7b2c5\u884c\u6570\u636e awk -F\":\" 'NR >= 5 && NR <=10 {print}' passwd # \u83b7\u53d6\u7b2c5-10\u884c\u6570\u636e awk -F\":\" 'NR == 5, NR ==10 {print}' passwd # \u83b7\u53d6\u7b2c5-10\u884c\u6570\u636e awk -F: '{count++} END{print count}' passwd # \u83b7\u53d6\u6587\u4ef6\u603b\u884c\u6570\uff0ccount\u5728awk\u4e2d\u4f1a\u81ea\u52a8\u8fdb\u884c\u5b9a\u4e49\u53d8\u91cf\uff08wc -l passwd \u83b7\u53d6\u6587\u4ef6\u603b\u884c\u6570 \u884c\u6570 \u6587\u4ef6\uff09 awk -F= 'NR == 1 {print $2}' /etc/os-release | awk '{print $1}' |sed 's/\\\"//g' # \u83b7\u53d6Linux\u53d1\u884c\u7248\u672c awk -F: 'BEGIN{printf \"%-20s %-20s\\n\",\"BEGIN\",\"END\"} NR >1 {count++; printf \"%-20s %-20s\\n\",$1,$(NF)} END{printf \"%-20s %-20s\\n\",\"total\",count}' /etc/passwd # \u4f7f\u7528`BEGIN{}`\u7ed9\u7ed3\u679c\u6dfb\u52a0title,\u4f7f\u7528`count++`\u8ba1\u7b97\u603b\u6570\uff0c\u4f7f\u7528`END{}`\u628a\u603b\u6570\u6dfb\u52a0\u5230\u672b\u5c3e(%-20s:\u8868\u793a\u5b57\u7b26\u4e32\u7684\u6307\u5b9a\u957f\u5ea6\u4e3a20\uff0c\u4e0d\u6ee120\u5b57\u7b26\uff0c\u7a7a\u683c\u586b\u5145\uff0c-\u8868\u793a\u5de6\u8fb9\u5bf9\u9f50) awk -F: -f file.awk /etc/passwd # \u8ddf\u4e0a\u9762\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\uff0c\u628a\u590d\u6742\u7684\u6307\u4ee4\u653e\u5728\u4e86file.awk\u6587\u4ef6\u4e2d # file.awk:(\u5728\u6587\u4ef6\u4e2d\u53ef\u4ee5\u4f7f\u7528if for while\u6d41\u7a0b\u63a7\u5236\u8bed\u53e5) ---------------------------------------------------- BEGIN{ printf \"%-20s %-20s\\n\",\"BEGIN\",\"END\" } { if (NR > 1) { count++; printf \"%-20s %-20s\\n\",$1,$(NF) } } END{ printf \"%-20s %-20s\\n\",\"total\",count } ----------------------------------------------------","title":"\u4f8b\u5b50"},{"location":"%E5%85%B6%E4%BB%96/001%20CentOS%208%20%E5%AE%89%E8%A3%85%E6%97%A0%E5%A4%B4%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8/","text":"CentOS 8 \u5b89\u88c5\u65e0\u5934\u8c37\u6b4c\u6d4f\u89c8\u5668 \u7b2c\u4e00\u6b65\uff1a\u4e0b\u8f7d\u5b89\u88c5\u5305 wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm \u7b2c\u4e8c\u6b65\uff1a\u8fdb\u884c\u5b89\u88c5 yum install -y google-chrome-stable_current_x86_64.rpm \u7b2c\u4e09\u6b65\uff1a\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f google-chrome -version","title":"CentOS 8 \u5b89\u88c5\u65e0\u5934\u8c37\u6b4c\u6d4f\u89c8\u5668"},{"location":"%E5%85%B6%E4%BB%96/001%20CentOS%208%20%E5%AE%89%E8%A3%85%E6%97%A0%E5%A4%B4%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8/#centos-8","text":"","title":"CentOS 8 \u5b89\u88c5\u65e0\u5934\u8c37\u6b4c\u6d4f\u89c8\u5668"},{"location":"%E5%85%B6%E4%BB%96/001%20CentOS%208%20%E5%AE%89%E8%A3%85%E6%97%A0%E5%A4%B4%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8/#_1","text":"wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm","title":"\u7b2c\u4e00\u6b65\uff1a\u4e0b\u8f7d\u5b89\u88c5\u5305"},{"location":"%E5%85%B6%E4%BB%96/001%20CentOS%208%20%E5%AE%89%E8%A3%85%E6%97%A0%E5%A4%B4%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8/#_2","text":"yum install -y google-chrome-stable_current_x86_64.rpm","title":"\u7b2c\u4e8c\u6b65\uff1a\u8fdb\u884c\u5b89\u88c5"},{"location":"%E5%85%B6%E4%BB%96/001%20CentOS%208%20%E5%AE%89%E8%A3%85%E6%97%A0%E5%A4%B4%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8/#_3","text":"google-chrome -version","title":"\u7b2c\u4e09\u6b65\uff1a\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/","text":"helium(selenium-python-helium)\u7b14\u8bb0 \u4e00\u3001\u524d\u8a00 1. \u8d44\u6599 Github\uff1ahttps://github.com/mherrmann/selenium-python-helium Docs\uff1ahttps://selenium-python-helium.readthedocs.io/en/latest/ 2. \u4f18\u70b9 \u7b80\u5316\u4e86Selenium\u64cd\u4f5c\uff0c\u5bf9Selenium\u8fdb\u884c\u5c01\u88c5\uff0c\u63d0\u4f9b\u4e86\u7b80\u5355\u7684API \u53ef\u4ee5\u548cSelenium\u8fdb\u884c\u6df7\u7528 \u53bb\u9664\u4e86\u9a71\u52a8\u7684\u4e0b\u8f7d\u5b89\u88c5\uff0c\u81ea\u52a8\u914d\u7f6e\u9a71\u52a8 \u652f\u6301Chrome\u548cFirefox \u4e8c\u3001\u5b89\u88c5helium pip install helium \u4e09\u3001\u6d4f\u89c8\u5668\u5e38\u7528\u64cd\u4f5c 1. \u5bfc\u5305 import helium 2. \u542f\u52a8\u6d4f\u89c8\u5668 helium.start_chrome(url=None, headless=None, options=None) helium.start_firefox(url=None, headless=None, options=None) - \u53c2\u6570 - url: \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u5e76\u6253\u5f00\u7f51\u5740 - headless: \u9ed8\u8ba4\u4e3aFalse\uff0c\u662f\u5426\u4f7f\u7528\u65e0\u5934\u6a21\u5f0f\u6253\u5f00\u6d4f\u89c8\u5668 - options: \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u542f\u52a8\u6d4f\u89c8\u5668\u7684\u9ad8\u7ea7\u914d\u7f6e # 1\u3001\u53ea\u6253\u5f00\u6d4f\u89c8\u5668 helium.start_chrome() # 2\u3001\u6253\u5f00\u6d4f\u89c8\u5668\u5e76\u6253\u5f00\u7f51\u5740 helium.start_chrome(\"https://www.baidu.com/\") # 3\u3001\u65e0\u5934\u6a21\u5f0f\u64cd\u4f5c(\u90e8\u7f72\u5230\u670d\u52a1\u5668\u4e0a\u65f6\uff0c\u9700\u8981\u8fdb\u884c\u8bbe\u7f6e) helium.start_chrome(\"https://www.baidu.com/\",headless=True) # 4\u3001\u9ad8\u7ea7\u914d\u7f6e from selenium import webdriver options = webdriver.ChromeOptions() # \u914d\u7f6e\u89e6\u5c4f\u65b9\u5f0f options.add_experimental_option('mobileEmulation', {'deviceName': 'iPhone X'}) # \u90e8\u7f72\u5230\u6d4f\u89c8\u5668\u7684\u65f6\u5019\u9700\u8981\u6dfb\u52a0\u8fd9\u4e2a\u914d\u7f6e\uff0c\u5426\u5219\u4f1a\u62a5\u9519 options.add_argument('--disable-gpu') # \u65e0\u5934\u6a21\u5f0f\u8fd0\u884c\uff0c\u8ddf headless=True \u4e00\u6837 options.add_argument('--headless') # \u4ee5\u6700\u5927\u5316\u6253\u5f00\u6d4f\u89c8\u5668\u7a97\u53e3 options.add_argument('--start-maximized') helium.start_chrome(\"https://www.baidu.com/\",options=options) 3. \u6253\u5f00\u7f51\u5740 helium.go_to(url) - \u53c2\u6570 - url: \u8981\u6253\u5f00\u7684\u7f51\u5740 helium.go_to(\"https://www.baidu.com/\") 4. driver\u64cd\u4f5c helium.set_driver(driver) \u8bbe\u7f6edriver\u5bf9\u8c61 helium.get_driver() \u83b7\u53d6driver\u5bf9\u8c61 helium.start_chrome() driver= helium.get_driver() print(driver) # <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7d684039be5714229ef2921f14dec310\")> 5. \u8f93\u5165 helium.write(text, into=None) - \u53c2\u6570 - text: \u5199\u5165\u7684\u5185\u5bb9 - into: \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u53ef\u4ee5\u8f93\u5165\u7684\u7c7b\u578b\u4e3a\uff1a HTMLElement / selenium.webdriver.remote.webelement.WebElement / Alert # \u4f7f\u7528into\u9ed8\u8ba4\u503c\uff0c helium.write(\"Python\") # \u4f7f\u7528WebElement\u7c7b\u578binto\u53c2\u6570 driver = helium.get_driver() busin_name = driver.find_element_by_xpath(\"\u5143\u7d20\u5b9a\u4f4d\") helium.write(\"Python\", into=busin_name) # \u4f7f\u7528Alert\u7c7b\u578binto\u53c2\u6570 helium.write(\"Michael\", into=Alert(\"Please enter your name\")) 6. \u4f7f\u7528\u952e\u76d8\u6309\u952e helium.press(key) - \u53c2\u6570 - key: \u8981\u6309\u4e0b\u7684\u6309\u952e\u6216\u6309\u952e\u7ec4\u5408 helium.start_chrome(\"https://www.baidu.com/\") helium.press(\"Python\") # \u6309\u4e0b Python \u6309\u952e helium.press('a') # \u6309\u4e0b a \u6309\u952e helium.press('A') # \u6309\u4e0b A \u6309\u952e helium.press(helium.ENTER) # \u6309\u4e0b \u56de\u8f66 \u6309\u952e helium.press(helium.CONTROL + 'a') # \u6309\u4e0b Ctrl+a \u5168\u9009 \u6309\u952e 7. \u70b9\u51fb helium.click(element) - \u53c2\u6570 - element: \u7c7b\u578b\u53ef\u4e3a\uff1a str / HTMLElement / selenium.webdriver.remote.webelement.WebElement / Point helium.start_chrome(\"https://www.baidu.com/\") helium.press(\"Python\") helium.click(\"\u767e\u5ea6\u4e00\u4e0b\") # \u70b9\u51fb\u6309\u94ae \u65b9\u5f0f\u4e00(str) # helium.click(helium.Button(\"\u767e\u5ea6\u4e00\u4e0b\")) # \u70b9\u51fb\u6309\u94ae \u65b9\u5f0f\u4e8c(HTMLElement) # helium.click(driver.find_element_by_xpath(\"xpath\u5143\u7d20\u5b9a\u4f4d\")) # \u70b9\u51fb\u6309\u94ae \u65b9\u5f0f\u4e09(WebElement) # helium.click(helium.Point(200,300)) # \u70b9\u51fb\u6309\u94ae \u65b9\u5f0f\u56db(Point) helium.click(\"Welcome to Python.org\") # \u70b9\u51fb\u94fe\u63a5 8. \u53cc\u51fb helium.doubleclick(element) - \u53c2\u6570 - element: \u7c7b\u578b\u53ef\u4e3a\uff1a str / HTMLElement / selenium.webdriver.remote.webelement.WebElement / Point helium.doubleclick(\"Double click here\") helium.doubleclick(helium.Image(\"Directories\")) helium.doubleclick(helium.Point(200, 300)) helium.doubleclick(helium.TextField(\"Username\").top_left - (0, 20)) 9. \u62d6\u52a8 helium.drag(element, to) - \u53c2\u6570 - element\uff1a\u8981\u62d6\u52a8\u7684\u5143\u7d20\uff0c\u7c7b\u578b\u53ef\u4e3a\uff1a str / HTMLElement / selenium.webdriver.remote.webelement.WebElement / Point - to: \u8981\u62d6\u52a8\u5230\u7684\u5143\u7d20\uff0c\u7c7b\u578b\u53ef\u4e3a\uff1a str / HTMLElement / selenium.webdriver.remote.webelement.WebElement / Point helium.drag(\"Drag me!\", to=\"Drop here.\") 10. Alert\u5f39\u7a97\u5904\u7406 helium.Alert(search_text=None) - \u53c2\u6570 - text: Alert\u5f39\u7a97\u5185\u5bb9 - \u65b9\u6cd5 - accept(): \u786e\u5b9a - dismiss(): \u53d6\u6d88 alert = helium.Alert() alert.accept() # \u786e\u5b9a alert.dismiss() # \u53d6\u6d88 11. \u7a97\u53e3\u5207\u6362 helium.switch_to(window) 12. \u6eda\u52a8 helium.scroll_down(num_pixels=100) \u5411\u4e0b\u6eda\u52a8 helium.scroll_up(num_pixels=100) \u5411\u4e0a\u6eda\u52a8 helium.scroll_right(num_pixels=100) \u5411\u53f3\u6eda\u52a8 helium.scroll_left(num_pixels=100) \u5411\u5de6\u6eda\u52a8 13. \u60ac\u505c helium.hover(element) 14. \u5237\u65b0 helium.refresh() 15. \u7b49\u5f85\u5143\u7d20\u51fa\u73fe helium.wait_until(condition_fn, timeout_secs=10, interval_secs=0.5) - \u53c2\u6570 - condition_fn: \u5143\u7d20\u8868\u8fbe\u5f0f\uff0c\u5143\u7d20\u662f\u5426\u5b58\u5728 - timeout_secs\uff1a\u8d85\u65f6\u65f6\u95f4 - interval_secs\uff1a\u8f6e\u8bad\u65f6\u95f4 helium.start_chrome(\"https://www.baidu.com/\") helium.write(\"Python\") try: helium.wait_until(helium.S('//input[@id=\"s22\"]').exists) helium.click(helium.S('//input[@id=\"s22\"]')) except: print('\u5143\u7d20\u672a\u627e\u5230') 16. \u5173\u95ed\u6d4f\u89c8\u5668 helium.kill_browser() 17. S\u8868\u8fbe\u5f0f helium.S(selector, below=None, to_right_of=None, above=None, to_left_of=None) - \u53c2\u6570 - selector: jQuery\u6837\u5f0f\u9009\u62e9\u5668\uff08ID\u3001NAME\u3001CSS\u3001XPATH\uff09 helium.start_chrome(\"https://www.baidu.com/\") helium.write(\"Python\") helium.click(helium.S('//input[@id=\"su\"]')) 18. \u67e5\u627e\u6240\u6709\u7b26\u5408\u7684\u6807\u7b7e helium.find_all(predicate) helium.start_chrome(\"https://www.baidu.com/\") eles = helium.find_all(helium.S('//input[@id=\"su\"]')) print(eles) # [<input type=\"submit\" id=\"su\" value=\"\u767e\u5ea6\u4e00\u4e0b\" class=\"bg s_btn\">]","title":"helium(selenium-python-helium)\u7b14\u8bb0"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#heliumselenium-python-helium","text":"","title":"helium(selenium-python-helium)\u7b14\u8bb0"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#_1","text":"","title":"\u4e00\u3001\u524d\u8a00"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#1","text":"Github\uff1ahttps://github.com/mherrmann/selenium-python-helium Docs\uff1ahttps://selenium-python-helium.readthedocs.io/en/latest/","title":"1. \u8d44\u6599"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#2","text":"\u7b80\u5316\u4e86Selenium\u64cd\u4f5c\uff0c\u5bf9Selenium\u8fdb\u884c\u5c01\u88c5\uff0c\u63d0\u4f9b\u4e86\u7b80\u5355\u7684API \u53ef\u4ee5\u548cSelenium\u8fdb\u884c\u6df7\u7528 \u53bb\u9664\u4e86\u9a71\u52a8\u7684\u4e0b\u8f7d\u5b89\u88c5\uff0c\u81ea\u52a8\u914d\u7f6e\u9a71\u52a8 \u652f\u6301Chrome\u548cFirefox","title":"2. \u4f18\u70b9"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#helium","text":"pip install helium","title":"\u4e8c\u3001\u5b89\u88c5helium"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#_2","text":"","title":"\u4e09\u3001\u6d4f\u89c8\u5668\u5e38\u7528\u64cd\u4f5c"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#1_1","text":"import helium","title":"1. \u5bfc\u5305"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#2_1","text":"helium.start_chrome(url=None, headless=None, options=None) helium.start_firefox(url=None, headless=None, options=None) - \u53c2\u6570 - url: \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u5e76\u6253\u5f00\u7f51\u5740 - headless: \u9ed8\u8ba4\u4e3aFalse\uff0c\u662f\u5426\u4f7f\u7528\u65e0\u5934\u6a21\u5f0f\u6253\u5f00\u6d4f\u89c8\u5668 - options: \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u542f\u52a8\u6d4f\u89c8\u5668\u7684\u9ad8\u7ea7\u914d\u7f6e # 1\u3001\u53ea\u6253\u5f00\u6d4f\u89c8\u5668 helium.start_chrome() # 2\u3001\u6253\u5f00\u6d4f\u89c8\u5668\u5e76\u6253\u5f00\u7f51\u5740 helium.start_chrome(\"https://www.baidu.com/\") # 3\u3001\u65e0\u5934\u6a21\u5f0f\u64cd\u4f5c(\u90e8\u7f72\u5230\u670d\u52a1\u5668\u4e0a\u65f6\uff0c\u9700\u8981\u8fdb\u884c\u8bbe\u7f6e) helium.start_chrome(\"https://www.baidu.com/\",headless=True) # 4\u3001\u9ad8\u7ea7\u914d\u7f6e from selenium import webdriver options = webdriver.ChromeOptions() # \u914d\u7f6e\u89e6\u5c4f\u65b9\u5f0f options.add_experimental_option('mobileEmulation', {'deviceName': 'iPhone X'}) # \u90e8\u7f72\u5230\u6d4f\u89c8\u5668\u7684\u65f6\u5019\u9700\u8981\u6dfb\u52a0\u8fd9\u4e2a\u914d\u7f6e\uff0c\u5426\u5219\u4f1a\u62a5\u9519 options.add_argument('--disable-gpu') # \u65e0\u5934\u6a21\u5f0f\u8fd0\u884c\uff0c\u8ddf headless=True \u4e00\u6837 options.add_argument('--headless') # \u4ee5\u6700\u5927\u5316\u6253\u5f00\u6d4f\u89c8\u5668\u7a97\u53e3 options.add_argument('--start-maximized') helium.start_chrome(\"https://www.baidu.com/\",options=options)","title":"2. \u542f\u52a8\u6d4f\u89c8\u5668"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#3","text":"helium.go_to(url) - \u53c2\u6570 - url: \u8981\u6253\u5f00\u7684\u7f51\u5740 helium.go_to(\"https://www.baidu.com/\")","title":"3. \u6253\u5f00\u7f51\u5740"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#4-driver","text":"helium.set_driver(driver) \u8bbe\u7f6edriver\u5bf9\u8c61 helium.get_driver() \u83b7\u53d6driver\u5bf9\u8c61 helium.start_chrome() driver= helium.get_driver() print(driver) # <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7d684039be5714229ef2921f14dec310\")>","title":"4. driver\u64cd\u4f5c"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#5","text":"helium.write(text, into=None) - \u53c2\u6570 - text: \u5199\u5165\u7684\u5185\u5bb9 - into: \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u53ef\u4ee5\u8f93\u5165\u7684\u7c7b\u578b\u4e3a\uff1a HTMLElement / selenium.webdriver.remote.webelement.WebElement / Alert # \u4f7f\u7528into\u9ed8\u8ba4\u503c\uff0c helium.write(\"Python\") # \u4f7f\u7528WebElement\u7c7b\u578binto\u53c2\u6570 driver = helium.get_driver() busin_name = driver.find_element_by_xpath(\"\u5143\u7d20\u5b9a\u4f4d\") helium.write(\"Python\", into=busin_name) # \u4f7f\u7528Alert\u7c7b\u578binto\u53c2\u6570 helium.write(\"Michael\", into=Alert(\"Please enter your name\"))","title":"5. \u8f93\u5165"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#6","text":"helium.press(key) - \u53c2\u6570 - key: \u8981\u6309\u4e0b\u7684\u6309\u952e\u6216\u6309\u952e\u7ec4\u5408 helium.start_chrome(\"https://www.baidu.com/\") helium.press(\"Python\") # \u6309\u4e0b Python \u6309\u952e helium.press('a') # \u6309\u4e0b a \u6309\u952e helium.press('A') # \u6309\u4e0b A \u6309\u952e helium.press(helium.ENTER) # \u6309\u4e0b \u56de\u8f66 \u6309\u952e helium.press(helium.CONTROL + 'a') # \u6309\u4e0b Ctrl+a \u5168\u9009 \u6309\u952e","title":"6. \u4f7f\u7528\u952e\u76d8\u6309\u952e"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#7","text":"helium.click(element) - \u53c2\u6570 - element: \u7c7b\u578b\u53ef\u4e3a\uff1a str / HTMLElement / selenium.webdriver.remote.webelement.WebElement / Point helium.start_chrome(\"https://www.baidu.com/\") helium.press(\"Python\") helium.click(\"\u767e\u5ea6\u4e00\u4e0b\") # \u70b9\u51fb\u6309\u94ae \u65b9\u5f0f\u4e00(str) # helium.click(helium.Button(\"\u767e\u5ea6\u4e00\u4e0b\")) # \u70b9\u51fb\u6309\u94ae \u65b9\u5f0f\u4e8c(HTMLElement) # helium.click(driver.find_element_by_xpath(\"xpath\u5143\u7d20\u5b9a\u4f4d\")) # \u70b9\u51fb\u6309\u94ae \u65b9\u5f0f\u4e09(WebElement) # helium.click(helium.Point(200,300)) # \u70b9\u51fb\u6309\u94ae \u65b9\u5f0f\u56db(Point) helium.click(\"Welcome to Python.org\") # \u70b9\u51fb\u94fe\u63a5","title":"7. \u70b9\u51fb"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#8","text":"helium.doubleclick(element) - \u53c2\u6570 - element: \u7c7b\u578b\u53ef\u4e3a\uff1a str / HTMLElement / selenium.webdriver.remote.webelement.WebElement / Point helium.doubleclick(\"Double click here\") helium.doubleclick(helium.Image(\"Directories\")) helium.doubleclick(helium.Point(200, 300)) helium.doubleclick(helium.TextField(\"Username\").top_left - (0, 20))","title":"8. \u53cc\u51fb"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#9","text":"helium.drag(element, to) - \u53c2\u6570 - element\uff1a\u8981\u62d6\u52a8\u7684\u5143\u7d20\uff0c\u7c7b\u578b\u53ef\u4e3a\uff1a str / HTMLElement / selenium.webdriver.remote.webelement.WebElement / Point - to: \u8981\u62d6\u52a8\u5230\u7684\u5143\u7d20\uff0c\u7c7b\u578b\u53ef\u4e3a\uff1a str / HTMLElement / selenium.webdriver.remote.webelement.WebElement / Point helium.drag(\"Drag me!\", to=\"Drop here.\")","title":"9. \u62d6\u52a8"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#10-alert","text":"helium.Alert(search_text=None) - \u53c2\u6570 - text: Alert\u5f39\u7a97\u5185\u5bb9 - \u65b9\u6cd5 - accept(): \u786e\u5b9a - dismiss(): \u53d6\u6d88 alert = helium.Alert() alert.accept() # \u786e\u5b9a alert.dismiss() # \u53d6\u6d88","title":"10. Alert\u5f39\u7a97\u5904\u7406"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#11","text":"helium.switch_to(window)","title":"11. \u7a97\u53e3\u5207\u6362"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#12","text":"helium.scroll_down(num_pixels=100) \u5411\u4e0b\u6eda\u52a8 helium.scroll_up(num_pixels=100) \u5411\u4e0a\u6eda\u52a8 helium.scroll_right(num_pixels=100) \u5411\u53f3\u6eda\u52a8 helium.scroll_left(num_pixels=100) \u5411\u5de6\u6eda\u52a8","title":"12. \u6eda\u52a8"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#13","text":"helium.hover(element)","title":"13. \u60ac\u505c"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#14","text":"helium.refresh()","title":"14. \u5237\u65b0"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#15","text":"helium.wait_until(condition_fn, timeout_secs=10, interval_secs=0.5) - \u53c2\u6570 - condition_fn: \u5143\u7d20\u8868\u8fbe\u5f0f\uff0c\u5143\u7d20\u662f\u5426\u5b58\u5728 - timeout_secs\uff1a\u8d85\u65f6\u65f6\u95f4 - interval_secs\uff1a\u8f6e\u8bad\u65f6\u95f4 helium.start_chrome(\"https://www.baidu.com/\") helium.write(\"Python\") try: helium.wait_until(helium.S('//input[@id=\"s22\"]').exists) helium.click(helium.S('//input[@id=\"s22\"]')) except: print('\u5143\u7d20\u672a\u627e\u5230')","title":"15. \u7b49\u5f85\u5143\u7d20\u51fa\u73fe"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#16","text":"helium.kill_browser()","title":"16. \u5173\u95ed\u6d4f\u89c8\u5668"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#17-s","text":"helium.S(selector, below=None, to_right_of=None, above=None, to_left_of=None) - \u53c2\u6570 - selector: jQuery\u6837\u5f0f\u9009\u62e9\u5668\uff08ID\u3001NAME\u3001CSS\u3001XPATH\uff09 helium.start_chrome(\"https://www.baidu.com/\") helium.write(\"Python\") helium.click(helium.S('//input[@id=\"su\"]'))","title":"17. S\u8868\u8fbe\u5f0f"},{"location":"%E5%85%B6%E4%BB%96/002%20helium%E7%AC%94%E8%AE%B0/#18","text":"helium.find_all(predicate) helium.start_chrome(\"https://www.baidu.com/\") eles = helium.find_all(helium.S('//input[@id=\"su\"]')) print(eles) # [<input type=\"submit\" id=\"su\" value=\"\u767e\u5ea6\u4e00\u4e0b\" class=\"bg s_btn\">]","title":"18. \u67e5\u627e\u6240\u6709\u7b26\u5408\u7684\u6807\u7b7e"}]}